namespace Terraria
{
    using Microsoft.Xna.Framework;
    using System;
    using System.Runtime.InteropServices;

    public class NPC
    {
        public bool active;
        private static int activeRangeX = ((int) (sWidth * 1.7));
        private static int activeRangeY = ((int) (sHeight * 1.7));
        private static int activeTime = 750;
        public static int maxAI = 4;
        private static int maxAttack = 20;
        public float[] ai = new float[maxAI];
        public int aiAction;
        public int aiStyle;
        public int alpha;
        private static int[] attackNPC = new int[maxAttack];
        public bool behindTiles;
        public bool boss;
        public bool[] buffImmune = new bool[40];
        public int[] buffTime = new int[5];
        public int[] buffType = new int[5];
        public bool closeDoor;
        public bool collideX;
        public bool collideY;
        public Color color;
        public bool confused;
        public int damage;
        private static int defaultMaxSpawns = 5;
        private static int defaultSpawnRate = 600;
        public int defDamage;
        public int defDefense;
        public int defense;
        public int direction = 1;
        public int directionY = 1;
        public string displayName;
        public bool dontTakeDamage;
        public int doorX;
        public int doorY;
        public static bool downedBoss1 = false;
        public static bool downedBoss2 = false;
        public static bool downedBoss3 = false;
        public static bool downedClown = false;
        public static bool downedGoblins = false;
        public Rectangle frame;
        public double frameCounter;
        public bool friendly;
        public int friendlyRegen;
        public int height;
        public bool homeless;
        public int homeTileX = -1;
        public int homeTileY = -1;
        public int[] immune = new int[0x100];
        public static int immuneTime = 20;
        public bool justHit;
        public float knockBackResist = 1f;
        public bool lavaImmune;
        public bool lavaWet;
        public int life;
        public int lifeMax;
        public int lifeRegen;
        public int lifeRegenCount;
        public float[] localAI = new float[maxAI];
        public const int maxBuffs = 5;
        private static int maxSpawns = defaultMaxSpawns;
        public string name;
        public bool netAlways;
        public int netID;
        public int netSkip;
        public int netSpam;
        public bool netUpdate;
        public bool netUpdate2;
        public bool noGravity;
        private static bool noSpawnCycle = false;
        public bool noTileCollide;
        public float npcSlots = 1f;
        public int oldDirection;
        public int oldDirectionY;
        public bool oldHomeless;
        public int oldHomeTileX = -1;
        public int oldHomeTileY = -1;
        public Vector2[] oldPos = new Vector2[10];
        public Vector2 oldPosition;
        public int oldTarget;
        public Vector2 oldVelocity;
        public bool onFire;
        public bool onFire2;
        public bool poisoned;
        public Vector2 position;
        public int realLife = -1;
        public float rotation;
        public static int sHeight = 0x438;
        public static int sWidth = 0x780;
        public static int safeRangeX = ((int) ((sWidth / 0x10) * 0.52));
        public static int safeRangeY = ((int) ((sHeight / 0x10) * 0.52));
        public static bool savedGoblin = false;
        public static bool savedMech = false;
        public static bool savedWizard = false;
        public float scale = 1f;
        public int soundDelay;
        public int soundHit;
        public int soundKilled;
        private static int spawnRangeX = ((int) ((sWidth / 0x10) * 0.7));
        private static int spawnRangeY = ((int) ((sHeight / 0x10) * 0.7));
        private static int spawnRate = defaultSpawnRate;
        private static int spawnSpaceX = 3;
        private static int spawnSpaceY = 3;
        public int spriteDirection = -1;
        public int target = -1;
        public Rectangle targetRect;
        public int timeLeft;
        public bool townNPC;
        private static int townRangeX = sWidth;
        private static int townRangeY = sHeight;
        public int type;
        public float value;
        public Vector2 velocity;
        public bool wet;
        public byte wetCount;
        public int whoAmI;
        public int width;

        public void AddBuff(int type, int time, bool quiet = false)
        {
            if (!this.buffImmune[type])
            {
                if (!quiet)
                {
                    if (Main.netMode == 1)
                    {
                        NetMessage.SendData(0x35, -1, -1, "", this.whoAmI, (float) type, (float) time, 0f, 0);
                    }
                    else if (Main.netMode == 2)
                    {
                        NetMessage.SendData(0x36, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
                    }
                }
                int index = -1;
                for (int i = 0; i < 5; i++)
                {
                    if (this.buffType[i] == type)
                    {
                        if (this.buffTime[i] < time)
                        {
                            this.buffTime[i] = time;
                        }
                        return;
                    }
                }
                while (index == -1)
                {
                    int b = -1;
                    for (int j = 0; j < 5; j++)
                    {
                        if (!Main.debuff[this.buffType[j]])
                        {
                            b = j;
                            break;
                        }
                    }
                    if (b == -1)
                    {
                        return;
                    }
                    for (int k = b; k < 5; k++)
                    {
                        if (this.buffType[k] == 0)
                        {
                            index = k;
                            break;
                        }
                    }
                    if (index == -1)
                    {
                        this.DelBuff(b);
                    }
                }
                this.buffType[index] = type;
                this.buffTime[index] = time;
            }
        }

        public void AI()
        {
            bool flag11;
            int num113;
            Color color;
            if (this.aiStyle == 0)
            {
                for (int i = 0; i < 0xff; i++)
                {
                    if (Main.player[i].active && (Main.player[i].talkNPC == this.whoAmI))
                    {
                        if (this.type == 0x69)
                        {
                            this.Transform(0x6b);
                            return;
                        }
                        if (this.type == 0x6a)
                        {
                            this.Transform(0x6c);
                            return;
                        }
                        if (this.type == 0x7b)
                        {
                            this.Transform(0x7c);
                            return;
                        }
                    }
                }
                this.velocity.X *= 0.93f;
                if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                {
                    this.velocity.X = 0f;
                }
                this.TargetClosest(true);
                this.spriteDirection = this.direction;
                return;
            }
            if (this.aiStyle == 1)
            {
                bool flag = false;
                if ((!Main.dayTime || (this.life != this.lifeMax)) || (this.position.Y > (Main.worldSurface * 16.0)))
                {
                    flag = true;
                }
                if (this.type == 0x51)
                {
                    flag = true;
                    if (Main.rand.Next(30) == 0)
                    {
                        int index = Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
                        Dust dust1 = Main.dust[index];
                        dust1.velocity = (Vector2) (dust1.velocity * 0.3f);
                    }
                }
                if (this.type == 0x3b)
                {
                    Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
                    int num3 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.7f);
                    Main.dust[num3].noGravity = true;
                }
                if (this.ai[2] > 1f)
                {
                    this.ai[2]--;
                }
                if (this.wet)
                {
                    if (this.collideY)
                    {
                        this.velocity.Y = -2f;
                    }
                    if ((this.velocity.Y < 0f) && (this.ai[3] == this.position.X))
                    {
                        this.direction *= -1;
                        this.ai[2] = 200f;
                    }
                    if (this.velocity.Y > 0f)
                    {
                        this.ai[3] = this.position.X;
                    }
                    if (this.type == 0x3b)
                    {
                        if (this.velocity.Y > 2f)
                        {
                            this.velocity.Y *= 0.9f;
                        }
                        else if (this.directionY < 0)
                        {
                            this.velocity.Y -= 0.8f;
                        }
                        this.velocity.Y -= 0.5f;
                        if (this.velocity.Y < -10f)
                        {
                            this.velocity.Y = -10f;
                        }
                    }
                    else
                    {
                        if (this.velocity.Y > 2f)
                        {
                            this.velocity.Y *= 0.9f;
                        }
                        this.velocity.Y -= 0.5f;
                        if (this.velocity.Y < -4f)
                        {
                            this.velocity.Y = -4f;
                        }
                    }
                    if ((this.ai[2] == 1f) && flag)
                    {
                        this.TargetClosest(true);
                    }
                }
                this.aiAction = 0;
                if (this.ai[2] == 0f)
                {
                    this.ai[0] = -100f;
                    this.ai[2] = 1f;
                    this.TargetClosest(true);
                }
                if (this.velocity.Y != 0f)
                {
                    if ((this.target < 0xff) && (((this.direction == 1) && (this.velocity.X < 3f)) || ((this.direction == -1) && (this.velocity.X > -3f))))
                    {
                        if (((this.direction == -1) && (this.velocity.X < 0.1)) || ((this.direction == 1) && (this.velocity.X > -0.1)))
                        {
                            this.velocity.X += 0.2f * this.direction;
                            return;
                        }
                        this.velocity.X *= 0.93f;
                        return;
                    }
                }
                else
                {
                    if (this.ai[3] == this.position.X)
                    {
                        this.direction *= -1;
                        this.ai[2] = 200f;
                    }
                    this.ai[3] = 0f;
                    this.velocity.X *= 0.8f;
                    if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                    {
                        this.velocity.X = 0f;
                    }
                    if (flag)
                    {
                        this.ai[0]++;
                    }
                    this.ai[0]++;
                    if (this.type == 0x3b)
                    {
                        this.ai[0] += 2f;
                    }
                    if (this.type == 0x47)
                    {
                        this.ai[0] += 3f;
                    }
                    if (this.type == 0x8a)
                    {
                        this.ai[0] += 2f;
                    }
                    if (this.type == 0x51)
                    {
                        if (this.scale >= 0f)
                        {
                            this.ai[0] += 4f;
                        }
                        else
                        {
                            this.ai[0]++;
                        }
                    }
                    if (this.ai[0] < 0f)
                    {
                        if (this.ai[0] >= -30f)
                        {
                            this.aiAction = 1;
                            return;
                        }
                    }
                    else
                    {
                        this.netUpdate = true;
                        if (flag && (this.ai[2] == 1f))
                        {
                            this.TargetClosest(true);
                        }
                        if (this.ai[1] == 2f)
                        {
                            this.velocity.Y = -8f;
                            if (this.type == 0x3b)
                            {
                                this.velocity.Y -= 2f;
                            }
                            this.velocity.X += 3 * this.direction;
                            if (this.type == 0x3b)
                            {
                                this.velocity.X += 0.5f * this.direction;
                            }
                            this.ai[0] = -200f;
                            this.ai[1] = 0f;
                            this.ai[3] = this.position.X;
                        }
                        else
                        {
                            this.velocity.Y = -6f;
                            this.velocity.X += 2 * this.direction;
                            if (this.type == 0x3b)
                            {
                                this.velocity.X += 2 * this.direction;
                            }
                            this.ai[0] = -120f;
                            this.ai[1]++;
                        }
                        if (this.type == 0x8d)
                        {
                            this.velocity.Y *= 1.3f;
                            this.velocity.X *= 1.2f;
                            return;
                        }
                    }
                }
                return;
            }
            if (this.aiStyle == 2)
            {
                this.noGravity = true;
                if (this.collideX)
                {
                    this.velocity.X = this.oldVelocity.X * -0.5f;
                    if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 2f))
                    {
                        this.velocity.X = 2f;
                    }
                    if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -2f))
                    {
                        this.velocity.X = -2f;
                    }
                }
                if (this.collideY)
                {
                    this.velocity.Y = this.oldVelocity.Y * -0.5f;
                    if ((this.velocity.Y > 0f) && (this.velocity.Y < 1f))
                    {
                        this.velocity.Y = 1f;
                    }
                    if ((this.velocity.Y < 0f) && (this.velocity.Y > -1f))
                    {
                        this.velocity.Y = -1f;
                    }
                }
                if ((Main.dayTime && (this.position.Y <= (Main.worldSurface * 16.0))) && ((this.type == 2) || (this.type == 0x85)))
                {
                    if (this.timeLeft > 10)
                    {
                        this.timeLeft = 10;
                    }
                    this.directionY = -1;
                    if (this.velocity.Y > 0f)
                    {
                        this.direction = 1;
                    }
                    this.direction = -1;
                    if (this.velocity.X > 0f)
                    {
                        this.direction = 1;
                    }
                }
                else
                {
                    this.TargetClosest(true);
                }
                if (this.type == 0x74)
                {
                    this.TargetClosest(true);
                    Lighting.addLight((((int) this.position.X) + (this.width / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.3f, 0.2f, 0.1f);
                    if ((this.direction == -1) && (this.velocity.X > -6f))
                    {
                        this.velocity.X -= 0.1f;
                        if (this.velocity.X > 6f)
                        {
                            this.velocity.X -= 0.1f;
                        }
                        else if (this.velocity.X > 0f)
                        {
                            this.velocity.X -= 0.2f;
                        }
                        if (this.velocity.X < -6f)
                        {
                            this.velocity.X = -6f;
                        }
                    }
                    else if ((this.direction == 1) && (this.velocity.X < 6f))
                    {
                        this.velocity.X += 0.1f;
                        if (this.velocity.X < -6f)
                        {
                            this.velocity.X += 0.1f;
                        }
                        else if (this.velocity.X < 0f)
                        {
                            this.velocity.X += 0.2f;
                        }
                        if (this.velocity.X > 6f)
                        {
                            this.velocity.X = 6f;
                        }
                    }
                    if ((this.directionY == -1) && (this.velocity.Y > -2.5))
                    {
                        this.velocity.Y -= 0.04f;
                        if (this.velocity.Y > 2.5)
                        {
                            this.velocity.Y -= 0.05f;
                        }
                        else if (this.velocity.Y > 0f)
                        {
                            this.velocity.Y -= 0.15f;
                        }
                        if (this.velocity.Y < -2.5)
                        {
                            this.velocity.Y = -2.5f;
                        }
                    }
                    else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                    {
                        this.velocity.Y += 0.04f;
                        if (this.velocity.Y < -2.5)
                        {
                            this.velocity.Y += 0.05f;
                        }
                        else if (this.velocity.Y < 0f)
                        {
                            this.velocity.Y += 0.15f;
                        }
                        if (this.velocity.Y > 2.5)
                        {
                            this.velocity.Y = 2.5f;
                        }
                    }
                    if (Main.rand.Next(40) == 0)
                    {
                        color = new Color();
                        int num4 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, color, 1f);
                        Main.dust[num4].velocity.X *= 0.5f;
                        Main.dust[num4].velocity.Y *= 0.1f;
                    }
                }
                else if (this.type == 0x85)
                {
                    if (this.life < (this.lifeMax * 0.5))
                    {
                        if ((this.direction == -1) && (this.velocity.X > -6f))
                        {
                            this.velocity.X -= 0.1f;
                            if (this.velocity.X > 6f)
                            {
                                this.velocity.X -= 0.1f;
                            }
                            else if (this.velocity.X > 0f)
                            {
                                this.velocity.X += 0.05f;
                            }
                            if (this.velocity.X < -6f)
                            {
                                this.velocity.X = -6f;
                            }
                        }
                        else if ((this.direction == 1) && (this.velocity.X < 6f))
                        {
                            this.velocity.X += 0.1f;
                            if (this.velocity.X < -6f)
                            {
                                this.velocity.X += 0.1f;
                            }
                            else if (this.velocity.X < 0f)
                            {
                                this.velocity.X -= 0.05f;
                            }
                            if (this.velocity.X > 6f)
                            {
                                this.velocity.X = 6f;
                            }
                        }
                        if ((this.directionY == -1) && (this.velocity.Y > -4f))
                        {
                            this.velocity.Y -= 0.1f;
                            if (this.velocity.Y > 4f)
                            {
                                this.velocity.Y -= 0.1f;
                            }
                            else if (this.velocity.Y > 0f)
                            {
                                this.velocity.Y += 0.05f;
                            }
                            if (this.velocity.Y < -4f)
                            {
                                this.velocity.Y = -4f;
                            }
                        }
                        else if ((this.directionY == 1) && (this.velocity.Y < 4f))
                        {
                            this.velocity.Y += 0.1f;
                            if (this.velocity.Y < -4f)
                            {
                                this.velocity.Y += 0.1f;
                            }
                            else if (this.velocity.Y < 0f)
                            {
                                this.velocity.Y -= 0.05f;
                            }
                            if (this.velocity.Y > 4f)
                            {
                                this.velocity.Y = 4f;
                            }
                        }
                    }
                    else
                    {
                        if ((this.direction == -1) && (this.velocity.X > -4f))
                        {
                            this.velocity.X -= 0.1f;
                            if (this.velocity.X > 4f)
                            {
                                this.velocity.X -= 0.1f;
                            }
                            else if (this.velocity.X > 0f)
                            {
                                this.velocity.X += 0.05f;
                            }
                            if (this.velocity.X < -4f)
                            {
                                this.velocity.X = -4f;
                            }
                        }
                        else if ((this.direction == 1) && (this.velocity.X < 4f))
                        {
                            this.velocity.X += 0.1f;
                            if (this.velocity.X < -4f)
                            {
                                this.velocity.X += 0.1f;
                            }
                            else if (this.velocity.X < 0f)
                            {
                                this.velocity.X -= 0.05f;
                            }
                            if (this.velocity.X > 4f)
                            {
                                this.velocity.X = 4f;
                            }
                        }
                        if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                        {
                            this.velocity.Y -= 0.04f;
                            if (this.velocity.Y > 1.5)
                            {
                                this.velocity.Y -= 0.05f;
                            }
                            else if (this.velocity.Y > 0f)
                            {
                                this.velocity.Y += 0.03f;
                            }
                            if (this.velocity.Y < -1.5)
                            {
                                this.velocity.Y = -1.5f;
                            }
                        }
                        else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                        {
                            this.velocity.Y += 0.04f;
                            if (this.velocity.Y < -1.5)
                            {
                                this.velocity.Y += 0.05f;
                            }
                            else if (this.velocity.Y < 0f)
                            {
                                this.velocity.Y -= 0.03f;
                            }
                            if (this.velocity.Y > 1.5)
                            {
                                this.velocity.Y = 1.5f;
                            }
                        }
                    }
                }
                else
                {
                    if ((this.direction == -1) && (this.velocity.X > -4f))
                    {
                        this.velocity.X -= 0.1f;
                        if (this.velocity.X > 4f)
                        {
                            this.velocity.X -= 0.1f;
                        }
                        else if (this.velocity.X > 0f)
                        {
                            this.velocity.X += 0.05f;
                        }
                        if (this.velocity.X < -4f)
                        {
                            this.velocity.X = -4f;
                        }
                    }
                    else if ((this.direction == 1) && (this.velocity.X < 4f))
                    {
                        this.velocity.X += 0.1f;
                        if (this.velocity.X < -4f)
                        {
                            this.velocity.X += 0.1f;
                        }
                        else if (this.velocity.X < 0f)
                        {
                            this.velocity.X -= 0.05f;
                        }
                        if (this.velocity.X > 4f)
                        {
                            this.velocity.X = 4f;
                        }
                    }
                    if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                    {
                        this.velocity.Y -= 0.04f;
                        if (this.velocity.Y > 1.5)
                        {
                            this.velocity.Y -= 0.05f;
                        }
                        else if (this.velocity.Y > 0f)
                        {
                            this.velocity.Y += 0.03f;
                        }
                        if (this.velocity.Y < -1.5)
                        {
                            this.velocity.Y = -1.5f;
                        }
                    }
                    else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                    {
                        this.velocity.Y += 0.04f;
                        if (this.velocity.Y < -1.5)
                        {
                            this.velocity.Y += 0.05f;
                        }
                        else if (this.velocity.Y < 0f)
                        {
                            this.velocity.Y -= 0.03f;
                        }
                        if (this.velocity.Y > 1.5)
                        {
                            this.velocity.Y = 1.5f;
                        }
                    }
                }
                if (((this.type == 2) || (this.type == 0x85)) && (Main.rand.Next(40) == 0))
                {
                    int num5 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                    Main.dust[num5].velocity.X *= 0.5f;
                    Main.dust[num5].velocity.Y *= 0.1f;
                }
                if (this.wet)
                {
                    if (this.velocity.Y > 0f)
                    {
                        this.velocity.Y *= 0.95f;
                    }
                    this.velocity.Y -= 0.5f;
                    if (this.velocity.Y < -4f)
                    {
                        this.velocity.Y = -4f;
                    }
                    this.TargetClosest(true);
                    return;
                }
                return;
            }
            if (this.aiStyle != 3)
            {
                if (this.aiStyle == 4)
                {
                    if (((this.target < 0) || (this.target == 0xff)) || (Main.player[this.target].dead || !Main.player[this.target].active))
                    {
                        this.TargetClosest(true);
                    }
                    bool dead = Main.player[this.target].dead;
                    float num47 = ((this.position.X + (this.width / 2)) - Main.player[this.target].position.X) - (Main.player[this.target].width / 2);
                    float num48 = (((this.position.Y + this.height) - 59f) - Main.player[this.target].position.Y) - (Main.player[this.target].height / 2);
                    float num49 = ((float) Math.Atan2((double) num48, (double) num47)) + 1.57f;
                    if (num49 < 0f)
                    {
                        num49 += 6.283f;
                    }
                    else if (num49 > 6.283)
                    {
                        num49 -= 6.283f;
                    }
                    float num50 = 0f;
                    if ((this.ai[0] == 0f) && (this.ai[1] == 0f))
                    {
                        num50 = 0.02f;
                    }
                    if (((this.ai[0] == 0f) && (this.ai[1] == 2f)) && (this.ai[2] > 40f))
                    {
                        num50 = 0.05f;
                    }
                    if ((this.ai[0] == 3f) && (this.ai[1] == 0f))
                    {
                        num50 = 0.05f;
                    }
                    if (((this.ai[0] == 3f) && (this.ai[1] == 2f)) && (this.ai[2] > 40f))
                    {
                        num50 = 0.08f;
                    }
                    if (this.rotation < num49)
                    {
                        if ((num49 - this.rotation) > 3.1415)
                        {
                            this.rotation -= num50;
                        }
                        else
                        {
                            this.rotation += num50;
                        }
                    }
                    else if (this.rotation > num49)
                    {
                        if ((this.rotation - num49) > 3.1415)
                        {
                            this.rotation += num50;
                        }
                        else
                        {
                            this.rotation -= num50;
                        }
                    }
                    if ((this.rotation > (num49 - num50)) && (this.rotation < (num49 + num50)))
                    {
                        this.rotation = num49;
                    }
                    if (this.rotation < 0f)
                    {
                        this.rotation += 6.283f;
                    }
                    else if (this.rotation > 6.283)
                    {
                        this.rotation -= 6.283f;
                    }
                    if ((this.rotation > (num49 - num50)) && (this.rotation < (num49 + num50)))
                    {
                        this.rotation = num49;
                    }
                    if (Main.rand.Next(5) == 0)
                    {
                        color = new Color();
                        int num51 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, color, 1f);
                        Main.dust[num51].velocity.X *= 0.5f;
                        Main.dust[num51].velocity.Y *= 0.1f;
                    }
                    if (!Main.dayTime && !dead)
                    {
                        if (this.ai[0] != 0f)
                        {
                            if ((this.ai[0] != 1f) && (this.ai[0] != 2f))
                            {
                                this.damage = 0x17;
                                this.defense = 0;
                                if (this.ai[1] != 0f)
                                {
                                    if (this.ai[1] == 1f)
                                    {
                                        Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                        this.rotation = num49;
                                        float num75 = 6.8f;
                                        Vector2 vector10 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num76 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector10.X;
                                        float num77 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector10.Y;
                                        float num78 = (float) Math.Sqrt((double) ((num76 * num76) + (num77 * num77)));
                                        num78 = num75 / num78;
                                        this.velocity.X = num76 * num78;
                                        this.velocity.Y = num77 * num78;
                                        this.ai[1] = 2f;
                                        return;
                                    }
                                    if (this.ai[1] == 2f)
                                    {
                                        this.ai[2]++;
                                        if (this.ai[2] >= 40f)
                                        {
                                            this.velocity.X *= 0.97f;
                                            this.velocity.Y *= 0.97f;
                                            if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                            {
                                                this.velocity.X = 0f;
                                            }
                                            if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                            {
                                                this.velocity.Y = 0f;
                                            }
                                        }
                                        else
                                        {
                                            this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                                        }
                                        if (this.ai[2] >= 130f)
                                        {
                                            this.ai[3]++;
                                            this.ai[2] = 0f;
                                            this.target = 0xff;
                                            this.rotation = num49;
                                            if (this.ai[3] >= 3f)
                                            {
                                                this.ai[1] = 0f;
                                                this.ai[3] = 0f;
                                                return;
                                            }
                                            this.ai[1] = 1f;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    float num70 = 6f;
                                    float num71 = 0.07f;
                                    Vector2 vector9 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num72 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector9.X;
                                    float num73 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 120f) - vector9.Y;
                                    float num74 = (float) Math.Sqrt((double) ((num72 * num72) + (num73 * num73)));
                                    num74 = num70 / num74;
                                    num72 *= num74;
                                    num73 *= num74;
                                    if (this.velocity.X < num72)
                                    {
                                        this.velocity.X += num71;
                                        if ((this.velocity.X < 0f) && (num72 > 0f))
                                        {
                                            this.velocity.X += num71;
                                        }
                                    }
                                    else if (this.velocity.X > num72)
                                    {
                                        this.velocity.X -= num71;
                                        if ((this.velocity.X > 0f) && (num72 < 0f))
                                        {
                                            this.velocity.X -= num71;
                                        }
                                    }
                                    if (this.velocity.Y < num73)
                                    {
                                        this.velocity.Y += num71;
                                        if ((this.velocity.Y < 0f) && (num73 > 0f))
                                        {
                                            this.velocity.Y += num71;
                                        }
                                    }
                                    else if (this.velocity.Y > num73)
                                    {
                                        this.velocity.Y -= num71;
                                        if ((this.velocity.Y > 0f) && (num73 < 0f))
                                        {
                                            this.velocity.Y -= num71;
                                        }
                                    }
                                    this.ai[2]++;
                                    if (this.ai[2] >= 200f)
                                    {
                                        this.ai[1] = 1f;
                                        this.ai[2] = 0f;
                                        this.ai[3] = 0f;
                                        this.target = 0xff;
                                        this.netUpdate = true;
                                        return;
                                    }
                                }
                            }
                            else
                            {
                                if (this.ai[0] == 1f)
                                {
                                    this.ai[2] += 0.005f;
                                    if (this.ai[2] > 0.5)
                                    {
                                        this.ai[2] = 0.5f;
                                    }
                                }
                                else
                                {
                                    this.ai[2] -= 0.005f;
                                    if (this.ai[2] < 0f)
                                    {
                                        this.ai[2] = 0f;
                                    }
                                }
                                this.rotation += this.ai[2];
                                this.ai[1]++;
                                if (this.ai[1] == 100f)
                                {
                                    this.ai[0]++;
                                    this.ai[1] = 0f;
                                    if (this.ai[0] == 3f)
                                    {
                                        this.ai[2] = 0f;
                                    }
                                    else
                                    {
                                        Main.PlaySound(3, (int) this.position.X, (int) this.position.Y, 1);
                                        for (int k = 0; k < 2; k++)
                                        {
                                            Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 8, 1f);
                                            Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 7, 1f);
                                            Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 6, 1f);
                                        }
                                        for (int m = 0; m < 20; m++)
                                        {
                                            color = new Color();
                                            Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, color, 1f);
                                        }
                                        Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                    }
                                }
                                Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, new Color(), 1f);
                                this.velocity.X *= 0.98f;
                                this.velocity.Y *= 0.98f;
                                if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                {
                                    this.velocity.X = 0f;
                                }
                                if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                {
                                    this.velocity.Y = 0f;
                                    return;
                                }
                            }
                        }
                        else
                        {
                            if (this.ai[1] == 0f)
                            {
                                float num52 = 5f;
                                float num53 = 0.04f;
                                Vector2 vector5 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num54 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector5.X;
                                float num55 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 200f) - vector5.Y;
                                float num56 = (float) Math.Sqrt((double) ((num54 * num54) + (num55 * num55)));
                                float num57 = num56;
                                num56 = num52 / num56;
                                num54 *= num56;
                                num55 *= num56;
                                if (this.velocity.X < num54)
                                {
                                    this.velocity.X += num53;
                                    if ((this.velocity.X < 0f) && (num54 > 0f))
                                    {
                                        this.velocity.X += num53;
                                    }
                                }
                                else if (this.velocity.X > num54)
                                {
                                    this.velocity.X -= num53;
                                    if ((this.velocity.X > 0f) && (num54 < 0f))
                                    {
                                        this.velocity.X -= num53;
                                    }
                                }
                                if (this.velocity.Y < num55)
                                {
                                    this.velocity.Y += num53;
                                    if ((this.velocity.Y < 0f) && (num55 > 0f))
                                    {
                                        this.velocity.Y += num53;
                                    }
                                }
                                else if (this.velocity.Y > num55)
                                {
                                    this.velocity.Y -= num53;
                                    if ((this.velocity.Y > 0f) && (num55 < 0f))
                                    {
                                        this.velocity.Y -= num53;
                                    }
                                }
                                this.ai[2]++;
                                if (this.ai[2] >= 600f)
                                {
                                    this.ai[1] = 1f;
                                    this.ai[2] = 0f;
                                    this.ai[3] = 0f;
                                    this.target = 0xff;
                                    this.netUpdate = true;
                                }
                                else if (((this.position.Y + this.height) < Main.player[this.target].position.Y) && (num57 < 500f))
                                {
                                    if (!Main.player[this.target].dead)
                                    {
                                        this.ai[3]++;
                                    }
                                    if (this.ai[3] >= 110f)
                                    {
                                        Vector2 vector7;
                                        this.ai[3] = 0f;
                                        this.rotation = num49;
                                        float num58 = 5f;
                                        float num59 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector5.X;
                                        float num60 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector5.Y;
                                        float num61 = (float) Math.Sqrt((double) ((num59 * num59) + (num60 * num60)));
                                        num61 = num58 / num61;
                                        Vector2 position = vector5;
                                        vector7.X = num59 * num61;
                                        vector7.Y = num60 * num61;
                                        position.X += vector7.X * 10f;
                                        position.Y += vector7.Y * 10f;
                                        if (Main.netMode != 1)
                                        {
                                            int num62 = NewNPC((int) position.X, (int) position.Y, 5, 0);
                                            Main.npc[num62].velocity.X = vector7.X;
                                            Main.npc[num62].velocity.Y = vector7.Y;
                                            if ((Main.netMode == 2) && (num62 < 200))
                                            {
                                                NetMessage.SendData(0x17, -1, -1, "", num62, 0f, 0f, 0f, 0);
                                            }
                                        }
                                        Main.PlaySound(3, (int) position.X, (int) position.Y, 1);
                                        for (int n = 0; n < 10; n++)
                                        {
                                            color = new Color();
                                            Dust.NewDust(position, 20, 20, 5, vector7.X * 0.4f, vector7.Y * 0.4f, 0, color, 1f);
                                        }
                                    }
                                }
                            }
                            else if (this.ai[1] == 1f)
                            {
                                this.rotation = num49;
                                float num64 = 6f;
                                Vector2 vector8 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num65 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector8.X;
                                float num66 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector8.Y;
                                float num67 = (float) Math.Sqrt((double) ((num65 * num65) + (num66 * num66)));
                                num67 = num64 / num67;
                                this.velocity.X = num65 * num67;
                                this.velocity.Y = num66 * num67;
                                this.ai[1] = 2f;
                            }
                            else if (this.ai[1] == 2f)
                            {
                                this.ai[2]++;
                                if (this.ai[2] >= 40f)
                                {
                                    this.velocity.X *= 0.98f;
                                    this.velocity.Y *= 0.98f;
                                    if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                    {
                                        this.velocity.X = 0f;
                                    }
                                    if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                    {
                                        this.velocity.Y = 0f;
                                    }
                                }
                                else
                                {
                                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                                }
                                if (this.ai[2] >= 150f)
                                {
                                    this.ai[3]++;
                                    this.ai[2] = 0f;
                                    this.target = 0xff;
                                    this.rotation = num49;
                                    if (this.ai[3] >= 3f)
                                    {
                                        this.ai[1] = 0f;
                                        this.ai[3] = 0f;
                                    }
                                    else
                                    {
                                        this.ai[1] = 1f;
                                    }
                                }
                            }
                            if (this.life < (this.lifeMax * 0.5))
                            {
                                this.ai[0] = 1f;
                                this.ai[1] = 0f;
                                this.ai[2] = 0f;
                                this.ai[3] = 0f;
                                this.netUpdate = true;
                                return;
                            }
                        }
                    }
                    else
                    {
                        this.velocity.Y -= 0.04f;
                        if (this.timeLeft > 10)
                        {
                            this.timeLeft = 10;
                            return;
                        }
                    }
                    return;
                }
                if (this.aiStyle == 5)
                {
                    if (((this.target < 0) || (this.target == 0xff)) || Main.player[this.target].dead)
                    {
                        this.TargetClosest(true);
                    }
                    float num79 = 6f;
                    float num80 = 0.05f;
                    if (this.type == 6)
                    {
                        num79 = 4f;
                        num80 = 0.02f;
                    }
                    else if (this.type == 0x5e)
                    {
                        num79 = 4.2f;
                        num80 = 0.022f;
                    }
                    else if (this.type == 0x2a)
                    {
                        num79 = 3.5f;
                        num80 = 0.021f;
                    }
                    else if (this.type == 0x17)
                    {
                        num79 = 1f;
                        num80 = 0.03f;
                    }
                    else if (this.type == 5)
                    {
                        num79 = 5f;
                        num80 = 0.03f;
                    }
                    Vector2 vector11 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                    float speedX = Main.player[this.target].position.X + (Main.player[this.target].width / 2);
                    float speedY = Main.player[this.target].position.Y + (Main.player[this.target].height / 2);
                    speedX = ((int) (speedX / 8f)) * 8;
                    speedY = ((int) (speedY / 8f)) * 8;
                    vector11.X = ((int) (vector11.X / 8f)) * 8;
                    vector11.Y = ((int) (vector11.Y / 8f)) * 8;
                    speedX -= vector11.X;
                    speedY -= vector11.Y;
                    float num83 = (float) Math.Sqrt((double) ((speedX * speedX) + (speedY * speedY)));
                    float num84 = num83;
                    bool flag10 = false;
                    if (num83 > 600f)
                    {
                        flag10 = true;
                    }
                    if (num83 == 0f)
                    {
                        speedX = this.velocity.X;
                        speedY = this.velocity.Y;
                    }
                    else
                    {
                        num83 = num79 / num83;
                        speedX *= num83;
                        speedY *= num83;
                    }
                    if (((this.type == 6) || (this.type == 0x2a)) || ((this.type == 0x5e) || (this.type == 0x8b)))
                    {
                        if (((num84 > 100f) || (this.type == 0x2a)) || (this.type == 0x5e))
                        {
                            this.ai[0]++;
                            if (this.ai[0] > 0f)
                            {
                                this.velocity.Y += 0.023f;
                            }
                            else
                            {
                                this.velocity.Y -= 0.023f;
                            }
                            if ((this.ai[0] < -100f) || (this.ai[0] > 100f))
                            {
                                this.velocity.X += 0.023f;
                            }
                            else
                            {
                                this.velocity.X -= 0.023f;
                            }
                            if (this.ai[0] > 200f)
                            {
                                this.ai[0] = -200f;
                            }
                        }
                        if ((num84 < 150f) && ((this.type == 6) || (this.type == 0x5e)))
                        {
                            this.velocity.X += speedX * 0.007f;
                            this.velocity.Y += speedY * 0.007f;
                        }
                    }
                    if (Main.player[this.target].dead)
                    {
                        speedX = (this.direction * num79) / 2f;
                        speedY = -num79 / 2f;
                    }
                    if (this.velocity.X < speedX)
                    {
                        this.velocity.X += num80;
                        if ((((this.type != 6) && (this.type != 0x2a)) && ((this.type != 0x5e) && (this.type != 0x8b))) && ((this.velocity.X < 0f) && (speedX > 0f)))
                        {
                            this.velocity.X += num80;
                        }
                    }
                    else if (this.velocity.X > speedX)
                    {
                        this.velocity.X -= num80;
                        if ((((this.type != 6) && (this.type != 0x2a)) && ((this.type != 0x5e) && (this.type != 0x8b))) && ((this.velocity.X > 0f) && (speedX < 0f)))
                        {
                            this.velocity.X -= num80;
                        }
                    }
                    if (this.velocity.Y < speedY)
                    {
                        this.velocity.Y += num80;
                        if ((((this.type != 6) && (this.type != 0x2a)) && ((this.type != 0x5e) && (this.type != 0x8b))) && ((this.velocity.Y < 0f) && (speedY > 0f)))
                        {
                            this.velocity.Y += num80;
                        }
                    }
                    else if (this.velocity.Y > speedY)
                    {
                        this.velocity.Y -= num80;
                        if ((((this.type != 6) && (this.type != 0x2a)) && ((this.type != 0x5e) && (this.type != 0x8b))) && ((this.velocity.Y > 0f) && (speedY < 0f)))
                        {
                            this.velocity.Y -= num80;
                        }
                    }
                    if (this.type == 0x17)
                    {
                        if (speedX > 0f)
                        {
                            this.spriteDirection = 1;
                            this.rotation = (float) Math.Atan2((double) speedY, (double) speedX);
                        }
                        else if (speedX < 0f)
                        {
                            this.spriteDirection = -1;
                            this.rotation = ((float) Math.Atan2((double) speedY, (double) speedX)) + 3.14f;
                        }
                    }
                    else if (this.type == 0x8b)
                    {
                        this.localAI[0]++;
                        if (this.justHit)
                        {
                            this.localAI[0] = 0f;
                        }
                        if ((Main.netMode != 1) && (this.localAI[0] >= 120f))
                        {
                            this.localAI[0] = 0f;
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                int damage = 0x19;
                                int type = 0x54;
                                Projectile.NewProjectile(vector11.X, vector11.Y, speedX, speedY, type, damage, 0f, Main.myPlayer);
                            }
                        }
                        int num87 = ((int) this.position.X) + (this.width / 2);
                        int num88 = ((int) this.position.Y) + (this.height / 2);
                        num87 /= 0x10;
                        num88 /= 0x10;
                        if (!WorldGen.SolidTile(num87, num88))
                        {
                            Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
                        }
                        if (speedX > 0f)
                        {
                            this.spriteDirection = 1;
                            this.rotation = (float) Math.Atan2((double) speedY, (double) speedX);
                        }
                        if (speedX < 0f)
                        {
                            this.spriteDirection = -1;
                            this.rotation = ((float) Math.Atan2((double) speedY, (double) speedX)) + 3.14f;
                        }
                    }
                    else if ((this.type == 6) || (this.type == 0x5e))
                    {
                        this.rotation = ((float) Math.Atan2((double) speedY, (double) speedX)) - 1.57f;
                    }
                    else if (this.type == 0x2a)
                    {
                        if (speedX > 0f)
                        {
                            this.spriteDirection = 1;
                        }
                        if (speedX < 0f)
                        {
                            this.spriteDirection = -1;
                        }
                        this.rotation = this.velocity.X * 0.1f;
                    }
                    else
                    {
                        this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                    }
                    if (((this.type == 6) || (this.type == 0x17)) || (((this.type == 0x2a) || (this.type == 0x5e)) || (this.type == 0x8b)))
                    {
                        float num89 = 0.7f;
                        if (this.type == 6)
                        {
                            num89 = 0.4f;
                        }
                        if (this.collideX)
                        {
                            this.netUpdate = true;
                            this.velocity.X = this.oldVelocity.X * -num89;
                            if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 2f))
                            {
                                this.velocity.X = 2f;
                            }
                            if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -2f))
                            {
                                this.velocity.X = -2f;
                            }
                        }
                        if (this.collideY)
                        {
                            this.netUpdate = true;
                            this.velocity.Y = this.oldVelocity.Y * -num89;
                            if ((this.velocity.Y > 0f) && (this.velocity.Y < 1.5))
                            {
                                this.velocity.Y = 2f;
                            }
                            if ((this.velocity.Y < 0f) && (this.velocity.Y > -1.5))
                            {
                                this.velocity.Y = -2f;
                            }
                        }
                        if (this.type == 0x17)
                        {
                            int num90 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X, this.position.Y - this.velocity.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                            Main.dust[num90].noGravity = true;
                            Main.dust[num90].velocity.X *= 0.3f;
                            Main.dust[num90].velocity.Y *= 0.3f;
                        }
                        else if (((this.type != 0x2a) && (this.type != 0x8b)) && (Main.rand.Next(20) == 0))
                        {
                            int num91 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 0x12, this.velocity.X, 2f, 0x4b, this.color, this.scale);
                            Main.dust[num91].velocity.X *= 0.5f;
                            Main.dust[num91].velocity.Y *= 0.1f;
                        }
                    }
                    else if (Main.rand.Next(40) == 0)
                    {
                        int num92 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, new Color(), 1f);
                        Main.dust[num92].velocity.X *= 0.5f;
                        Main.dust[num92].velocity.Y *= 0.1f;
                    }
                    if (((this.type == 6) || (this.type == 0x5e)) && this.wet)
                    {
                        if (this.velocity.Y > 0f)
                        {
                            this.velocity.Y *= 0.95f;
                        }
                        this.velocity.Y -= 0.3f;
                        if (this.velocity.Y < -2f)
                        {
                            this.velocity.Y = -2f;
                        }
                    }
                    if (this.type == 0x2a)
                    {
                        if (this.wet)
                        {
                            if (this.velocity.Y > 0f)
                            {
                                this.velocity.Y *= 0.95f;
                            }
                            this.velocity.Y -= 0.5f;
                            if (this.velocity.Y < -4f)
                            {
                                this.velocity.Y = -4f;
                            }
                            this.TargetClosest(true);
                        }
                        if (this.ai[1] == 101f)
                        {
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 0x11);
                            this.ai[1] = 0f;
                        }
                        if (Main.netMode != 1)
                        {
                            this.ai[1] += (Main.rand.Next(5, 20) * 0.1f) * this.scale;
                            if (this.ai[1] >= 130f)
                            {
                                if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                {
                                    float num93 = 8f;
                                    Vector2 vector12 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height / 2));
                                    float num94 = ((Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector12.X) + Main.rand.Next(-20, 0x15);
                                    float num95 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector12.Y) + Main.rand.Next(-20, 0x15);
                                    if (((num94 < 0f) && (this.velocity.X < 0f)) || ((num94 > 0f) && (this.velocity.X > 0f)))
                                    {
                                        float num96 = (float) Math.Sqrt((double) ((num94 * num94) + (num95 * num95)));
                                        num96 = num93 / num96;
                                        num94 *= num96;
                                        num95 *= num96;
                                        int num97 = (int) (13f * this.scale);
                                        int num98 = 0x37;
                                        int num99 = Projectile.NewProjectile(vector12.X, vector12.Y, num94, num95, num98, num97, 0f, Main.myPlayer);
                                        Main.projectile[num99].timeLeft = 300;
                                        this.ai[1] = 101f;
                                        this.netUpdate = true;
                                    }
                                    else
                                    {
                                        this.ai[1] = 0f;
                                    }
                                }
                                else
                                {
                                    this.ai[1] = 0f;
                                }
                            }
                        }
                    }
                    if ((this.type == 0x8b) && flag10)
                    {
                        if (((this.velocity.X > 0f) && (speedX > 0f)) || ((this.velocity.X < 0f) && (speedX < 0f)))
                        {
                            if (Math.Abs(this.velocity.X) < 12f)
                            {
                                this.velocity.X *= 1.05f;
                            }
                        }
                        else
                        {
                            this.velocity.X *= 0.9f;
                        }
                    }
                    if (((Main.netMode != 1) && (this.type == 0x5e)) && !Main.player[this.target].dead)
                    {
                        if (this.justHit)
                        {
                            this.localAI[0] = 0f;
                        }
                        this.localAI[0]++;
                        if (this.localAI[0] == 180f)
                        {
                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                            {
                                NewNPC((int) ((this.position.X + (this.width / 2)) + this.velocity.X), (int) ((this.position.Y + (this.height / 2)) + this.velocity.Y), 0x70, 0);
                            }
                            this.localAI[0] = 0f;
                        }
                    }
                    if (((Main.dayTime && (this.type != 6)) && (((this.type != 0x17) && (this.type != 0x2a)) && (this.type != 0x5e))) || Main.player[this.target].dead)
                    {
                        this.velocity.Y -= num80 * 2f;
                        if (this.timeLeft > 10)
                        {
                            this.timeLeft = 10;
                        }
                    }
                    if (((((this.velocity.X > 0f) && (this.oldVelocity.X < 0f)) || ((this.velocity.X < 0f) && (this.oldVelocity.X > 0f))) || (((this.velocity.Y > 0f) && (this.oldVelocity.Y < 0f)) || ((this.velocity.Y < 0f) && (this.oldVelocity.Y > 0f)))) && !this.justHit)
                    {
                        this.netUpdate = true;
                        return;
                    }
                    return;
                }
                if (this.aiStyle != 6)
                {
                    if (this.aiStyle != 7)
                    {
                        if (this.aiStyle != 8)
                        {
                            if (this.aiStyle == 9)
                            {
                                if (this.target == 0xff)
                                {
                                    this.TargetClosest(true);
                                    float num163 = 6f;
                                    if (this.type == 0x19)
                                    {
                                        num163 = 5f;
                                    }
                                    if (this.type == 0x70)
                                    {
                                        num163 = 7f;
                                    }
                                    Vector2 vector15 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num164 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector15.X;
                                    float num165 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector15.Y;
                                    float num166 = (float) Math.Sqrt((double) ((num164 * num164) + (num165 * num165)));
                                    num166 = num163 / num166;
                                    this.velocity.X = num164 * num166;
                                    this.velocity.Y = num165 * num166;
                                }
                                if (this.type == 0x70)
                                {
                                    this.ai[0]++;
                                    if (this.ai[0] > 3f)
                                    {
                                        this.ai[0] = 3f;
                                    }
                                    if (this.ai[0] == 2f)
                                    {
                                        this.position += this.velocity;
                                        Main.PlaySound(4, (int) this.position.X, (int) this.position.Y, 9);
                                        for (int num167 = 0; num167 < 20; num167++)
                                        {
                                            color = new Color();
                                            int num168 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x12, 0f, 0f, 100, color, 1.8f);
                                            Dust dust8 = Main.dust[num168];
                                            dust8.velocity = (Vector2) (dust8.velocity * 1.3f);
                                            Dust dust9 = Main.dust[num168];
                                            dust9.velocity += this.velocity;
                                            Main.dust[num168].noGravity = true;
                                        }
                                    }
                                }
                                if ((this.type == 0x70) && Collision.SolidCollision(this.position, this.width, this.height))
                                {
                                    if (Main.netMode != 1)
                                    {
                                        int num169 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                                        int num170 = (((int) this.position.Y) + (this.height / 2)) / 0x10;
                                        int num171 = 8;
                                        for (int num172 = num169 - num171; num172 <= (num169 + num171); num172++)
                                        {
                                            for (int num173 = num170 - num171; num173 < (num170 + num171); num173++)
                                            {
                                                if ((Math.Abs((int) (num172 - num169)) + Math.Abs((int) (num173 - num170))) < (num171 * 0.5))
                                                {
                                                    if (Main.tile[num172, num173].type == 2)
                                                    {
                                                        Main.tile[num172, num173].type = 0x17;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                    else if (Main.tile[num172, num173].type == 1)
                                                    {
                                                        Main.tile[num172, num173].type = 0x19;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                    else if (Main.tile[num172, num173].type == 0x35)
                                                    {
                                                        Main.tile[num172, num173].type = 0x70;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                    else if (Main.tile[num172, num173].type == 0x6d)
                                                    {
                                                        Main.tile[num172, num173].type = 0x17;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                    else if (Main.tile[num172, num173].type == 0x75)
                                                    {
                                                        Main.tile[num172, num173].type = 0x19;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                    else if (Main.tile[num172, num173].type == 0x74)
                                                    {
                                                        Main.tile[num172, num173].type = 0x70;
                                                        WorldGen.SquareTileFrame(num172, num173, true);
                                                        if (Main.netMode == 2)
                                                        {
                                                            NetMessage.SendTileSquare(-1, num172, num173, 1);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    this.StrikeNPC(0x3e7, 0f, 0, false, false);
                                }
                                if (this.timeLeft > 100)
                                {
                                    this.timeLeft = 100;
                                }
                                for (int num174 = 0; num174 < 2; num174++)
                                {
                                    if (this.type == 30)
                                    {
                                        color = new Color();
                                        int num175 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x1b, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color, 2f);
                                        Main.dust[num175].noGravity = true;
                                        Dust dust10 = Main.dust[num175];
                                        dust10.velocity = (Vector2) (dust10.velocity * 0.3f);
                                        Main.dust[num175].velocity.X -= this.velocity.X * 0.2f;
                                        Main.dust[num175].velocity.Y -= this.velocity.Y * 0.2f;
                                    }
                                    else if (this.type == 0x21)
                                    {
                                        color = new Color();
                                        int num176 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x1d, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color, 2f);
                                        Main.dust[num176].noGravity = true;
                                        Main.dust[num176].velocity.X *= 0.3f;
                                        Main.dust[num176].velocity.Y *= 0.3f;
                                    }
                                    else if (this.type == 0x70)
                                    {
                                        color = new Color();
                                        int num177 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x12, this.velocity.X * 0.1f, this.velocity.Y * 0.1f, 80, color, 1.3f);
                                        Dust dust11 = Main.dust[num177];
                                        dust11.velocity = (Vector2) (dust11.velocity * 0.3f);
                                        Main.dust[num177].noGravity = true;
                                    }
                                    else
                                    {
                                        Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 1f, 0.3f, 0.1f);
                                        color = new Color();
                                        int num178 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color, 2f);
                                        Main.dust[num178].noGravity = true;
                                        Main.dust[num178].velocity.X *= 0.3f;
                                        Main.dust[num178].velocity.Y *= 0.3f;
                                    }
                                }
                                this.rotation += 0.4f * this.direction;
                                return;
                            }
                            if (this.aiStyle == 10)
                            {
                                float num179 = 1f;
                                float num180 = 0.011f;
                                this.TargetClosest(true);
                                Vector2 vector16 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num181 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector16.X;
                                float num182 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector16.Y;
                                float num183 = (float) Math.Sqrt((double) ((num181 * num181) + (num182 * num182)));
                                float num184 = num183;
                                this.ai[1]++;
                                if (this.ai[1] > 600f)
                                {
                                    num180 *= 8f;
                                    num179 = 4f;
                                    if (this.ai[1] > 650f)
                                    {
                                        this.ai[1] = 0f;
                                    }
                                }
                                else if (num184 < 250f)
                                {
                                    this.ai[0] += 0.9f;
                                    if (this.ai[0] > 0f)
                                    {
                                        this.velocity.Y += 0.019f;
                                    }
                                    else
                                    {
                                        this.velocity.Y -= 0.019f;
                                    }
                                    if ((this.ai[0] < -100f) || (this.ai[0] > 100f))
                                    {
                                        this.velocity.X += 0.019f;
                                    }
                                    else
                                    {
                                        this.velocity.X -= 0.019f;
                                    }
                                    if (this.ai[0] > 200f)
                                    {
                                        this.ai[0] = -200f;
                                    }
                                }
                                if (num184 > 350f)
                                {
                                    num179 = 5f;
                                    num180 = 0.3f;
                                }
                                else if (num184 > 300f)
                                {
                                    num179 = 3f;
                                    num180 = 0.2f;
                                }
                                else if (num184 > 250f)
                                {
                                    num179 = 1.5f;
                                    num180 = 0.1f;
                                }
                                num183 = num179 / num183;
                                num181 *= num183;
                                num182 *= num183;
                                if (Main.player[this.target].dead)
                                {
                                    num181 = (this.direction * num179) / 2f;
                                    num182 = -num179 / 2f;
                                }
                                if (this.velocity.X < num181)
                                {
                                    this.velocity.X += num180;
                                }
                                else if (this.velocity.X > num181)
                                {
                                    this.velocity.X -= num180;
                                }
                                if (this.velocity.Y < num182)
                                {
                                    this.velocity.Y += num180;
                                }
                                else if (this.velocity.Y > num182)
                                {
                                    this.velocity.Y -= num180;
                                }
                                if (num181 > 0f)
                                {
                                    this.spriteDirection = -1;
                                    this.rotation = (float) Math.Atan2((double) num182, (double) num181);
                                }
                                if (num181 < 0f)
                                {
                                    this.spriteDirection = 1;
                                    this.rotation = ((float) Math.Atan2((double) num182, (double) num181)) + 3.14f;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 11)
                            {
                                if ((this.ai[0] == 0f) && (Main.netMode != 1))
                                {
                                    this.TargetClosest(true);
                                    this.ai[0] = 1f;
                                    if (this.type != 0x44)
                                    {
                                        int num185 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 0x24, this.whoAmI);
                                        Main.npc[num185].ai[0] = -1f;
                                        Main.npc[num185].ai[1] = this.whoAmI;
                                        Main.npc[num185].target = this.target;
                                        Main.npc[num185].netUpdate = true;
                                        num185 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 0x24, this.whoAmI);
                                        Main.npc[num185].ai[0] = 1f;
                                        Main.npc[num185].ai[1] = this.whoAmI;
                                        Main.npc[num185].ai[3] = 150f;
                                        Main.npc[num185].target = this.target;
                                        Main.npc[num185].netUpdate = true;
                                    }
                                }
                                if (((this.type == 0x44) && (this.ai[1] != 3f)) && (this.ai[1] != 2f))
                                {
                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                    this.ai[1] = 2f;
                                }
                                if ((Main.player[this.target].dead || (Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) > 2000f)) || (Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y)) > 2000f))
                                {
                                    this.TargetClosest(true);
                                    if ((Main.player[this.target].dead || (Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) > 2000f)) || (Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y)) > 2000f))
                                    {
                                        this.ai[1] = 3f;
                                    }
                                }
                                if ((Main.dayTime && (this.ai[1] != 3f)) && (this.ai[1] != 2f))
                                {
                                    this.ai[1] = 2f;
                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                }
                                if (this.ai[1] == 0f)
                                {
                                    this.defense = 10;
                                    this.ai[2]++;
                                    if (this.ai[2] >= 800f)
                                    {
                                        this.ai[2] = 0f;
                                        this.ai[1] = 1f;
                                        this.TargetClosest(true);
                                        this.netUpdate = true;
                                    }
                                    this.rotation = this.velocity.X / 15f;
                                    if (this.position.Y > (Main.player[this.target].position.Y - 250f))
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.98f;
                                        }
                                        this.velocity.Y -= 0.02f;
                                        if (this.velocity.Y > 2f)
                                        {
                                            this.velocity.Y = 2f;
                                        }
                                    }
                                    else if (this.position.Y < (Main.player[this.target].position.Y - 250f))
                                    {
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y *= 0.98f;
                                        }
                                        this.velocity.Y += 0.02f;
                                        if (this.velocity.Y < -2f)
                                        {
                                            this.velocity.Y = -2f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) > (Main.player[this.target].position.X + (Main.player[this.target].width / 2)))
                                    {
                                        if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X *= 0.98f;
                                        }
                                        this.velocity.X -= 0.05f;
                                        if (this.velocity.X > 8f)
                                        {
                                            this.velocity.X = 8f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + (Main.player[this.target].width / 2)))
                                    {
                                        if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X *= 0.98f;
                                        }
                                        this.velocity.X += 0.05f;
                                        if (this.velocity.X < -8f)
                                        {
                                            this.velocity.X = -8f;
                                        }
                                    }
                                }
                                else if (this.ai[1] == 1f)
                                {
                                    this.defense = 0;
                                    this.ai[2]++;
                                    if (this.ai[2] == 2f)
                                    {
                                        Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                    }
                                    if (this.ai[2] >= 400f)
                                    {
                                        this.ai[2] = 0f;
                                        this.ai[1] = 0f;
                                    }
                                    this.rotation += this.direction * 0.3f;
                                    Vector2 vector17 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num186 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector17.X;
                                    float num187 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector17.Y;
                                    float num188 = (float) Math.Sqrt((double) ((num186 * num186) + (num187 * num187)));
                                    num188 = 1.5f / num188;
                                    this.velocity.X = num186 * num188;
                                    this.velocity.Y = num187 * num188;
                                }
                                else if (this.ai[1] == 2f)
                                {
                                    this.damage = 0x270f;
                                    this.defense = 0x270f;
                                    this.rotation += this.direction * 0.3f;
                                    Vector2 vector18 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num189 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector18.X;
                                    float num190 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector18.Y;
                                    float num191 = (float) Math.Sqrt((double) ((num189 * num189) + (num190 * num190)));
                                    num191 = 8f / num191;
                                    this.velocity.X = num189 * num191;
                                    this.velocity.Y = num190 * num191;
                                }
                                else if (this.ai[1] == 3f)
                                {
                                    this.velocity.Y += 0.1f;
                                    if (this.velocity.Y < 0f)
                                    {
                                        this.velocity.Y *= 0.95f;
                                    }
                                    this.velocity.X *= 0.95f;
                                    if (this.timeLeft > 500)
                                    {
                                        this.timeLeft = 500;
                                    }
                                }
                                if (((this.ai[1] != 2f) && (this.ai[1] != 3f)) && (this.type != 0x44))
                                {
                                    color = new Color();
                                    int num192 = Dust.NewDust(new Vector2(((this.position.X + (this.width / 2)) - 15f) - (this.velocity.X * 5f), (this.position.Y + this.height) - 2f), 30, 10, 5, -this.velocity.X * 0.2f, 3f, 0, color, 2f);
                                    Main.dust[num192].noGravity = true;
                                    Main.dust[num192].velocity.X *= 1.3f;
                                    Main.dust[num192].velocity.X += this.velocity.X * 0.4f;
                                    Main.dust[num192].velocity.Y += 2f + this.velocity.Y;
                                    for (int num193 = 0; num193 < 2; num193++)
                                    {
                                        color = new Color();
                                        num192 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 120f), this.width, 60, 5, this.velocity.X, this.velocity.Y, 0, color, 2f);
                                        Main.dust[num192].noGravity = true;
                                        Dust dust12 = Main.dust[num192];
                                        dust12.velocity -= this.velocity;
                                        Main.dust[num192].velocity.Y += 5f;
                                    }
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 12)
                            {
                                this.spriteDirection = -((int) this.ai[0]);
                                if (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != 11))
                                {
                                    this.ai[2] += 10f;
                                    if ((this.ai[2] > 50f) || (Main.netMode != 2))
                                    {
                                        this.life = -1;
                                        this.HitEffect(0, 10.0);
                                        this.active = false;
                                    }
                                }
                                if ((this.ai[2] == 0f) || (this.ai[2] == 3f))
                                {
                                    if ((Main.npc[(int) this.ai[1]].ai[1] == 3f) && (this.timeLeft > 10))
                                    {
                                        this.timeLeft = 10;
                                    }
                                    if (Main.npc[(int) this.ai[1]].ai[1] != 0f)
                                    {
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.07f;
                                            if (this.velocity.Y > 6f)
                                            {
                                                this.velocity.Y = 6f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.07f;
                                            if (this.velocity.Y < -6f)
                                            {
                                                this.velocity.Y = -6f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.1f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.1f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 300f)
                                        {
                                            this.ai[2]++;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                        }
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y + 230f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.04f;
                                            if (this.velocity.Y > 3f)
                                            {
                                                this.velocity.Y = 3f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y + 230f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.04f;
                                            if (this.velocity.Y < -3f)
                                            {
                                                this.velocity.Y = -3f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.07f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.07f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    Vector2 vector19 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num194 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector19.X;
                                    float num195 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector19.Y;
                                    Math.Sqrt((double) ((num194 * num194) + (num195 * num195)));
                                    this.rotation = ((float) Math.Atan2((double) num195, (double) num194)) + 1.57f;
                                    return;
                                }
                                if (this.ai[2] != 1f)
                                {
                                    if (this.ai[2] != 2f)
                                    {
                                        if (this.ai[2] != 4f)
                                        {
                                            if ((this.ai[2] == 5f) && (((this.velocity.X > 0f) && ((this.position.X + (this.width / 2)) > (Main.player[this.target].position.X + (Main.player[this.target].width / 2)))) || ((this.velocity.X < 0f) && ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + (Main.player[this.target].width / 2))))))
                                            {
                                                this.ai[2] = 0f;
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            Vector2 vector21 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num199 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector21.X;
                                            float num200 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector21.Y;
                                            float num201 = (float) Math.Sqrt((double) ((num199 * num199) + (num200 * num200)));
                                            this.rotation = ((float) Math.Atan2((double) num200, (double) num199)) + 1.57f;
                                            this.velocity.Y *= 0.95f;
                                            this.velocity.X += 0.1f * -this.ai[0];
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                            if (((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - 500f)) || ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) + 500f)))
                                            {
                                                this.TargetClosest(true);
                                                this.ai[2] = 5f;
                                                vector21 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                num199 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector21.X;
                                                num200 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector21.Y;
                                                num201 = (float) Math.Sqrt((double) ((num199 * num199) + (num200 * num200)));
                                                num201 = 17f / num201;
                                                this.velocity.X = num199 * num201;
                                                this.velocity.Y = num200 * num201;
                                                this.netUpdate = true;
                                                return;
                                            }
                                        }
                                    }
                                    else if ((this.position.Y > Main.player[this.target].position.Y) || (this.velocity.Y < 0f))
                                    {
                                        this.ai[2] = 3f;
                                        return;
                                    }
                                }
                                else
                                {
                                    Vector2 vector20 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num196 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector20.X;
                                    float num197 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector20.Y;
                                    float num198 = (float) Math.Sqrt((double) ((num196 * num196) + (num197 * num197)));
                                    this.rotation = ((float) Math.Atan2((double) num197, (double) num196)) + 1.57f;
                                    this.velocity.X *= 0.95f;
                                    this.velocity.Y -= 0.1f;
                                    if (this.velocity.Y < -8f)
                                    {
                                        this.velocity.Y = -8f;
                                    }
                                    if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 200f))
                                    {
                                        this.TargetClosest(true);
                                        this.ai[2] = 2f;
                                        vector20 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        num196 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector20.X;
                                        num197 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector20.Y;
                                        num198 = (float) Math.Sqrt((double) ((num196 * num196) + (num197 * num197)));
                                        num198 = 18f / num198;
                                        this.velocity.X = num196 * num198;
                                        this.velocity.Y = num197 * num198;
                                        this.netUpdate = true;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 13)
                            {
                                if (Main.tile[(int) this.ai[0], (int) this.ai[1]] == null)
                                {
                                    Main.tile[(int) this.ai[0], (int) this.ai[1]] = new Tile();
                                }
                                if (!Main.tile[(int) this.ai[0], (int) this.ai[1]].active)
                                {
                                    this.life = -1;
                                    this.HitEffect(0, 10.0);
                                    this.active = false;
                                    return;
                                }
                                this.TargetClosest(true);
                                float num202 = 0.035f;
                                float num203 = 150f;
                                if (this.type == 0x2b)
                                {
                                    num203 = 250f;
                                }
                                if (this.type == 0x65)
                                {
                                    num203 = 175f;
                                }
                                this.ai[2]++;
                                if (this.ai[2] > 300f)
                                {
                                    num203 = (int) (num203 * 1.3);
                                    if (this.ai[2] > 450f)
                                    {
                                        this.ai[2] = 0f;
                                    }
                                }
                                Vector2 vector22 = new Vector2((this.ai[0] * 16f) + 8f, (this.ai[1] * 16f) + 8f);
                                float num204 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - (this.width / 2)) - vector22.X;
                                float num205 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - (this.height / 2)) - vector22.Y;
                                float num206 = (float) Math.Sqrt((double) ((num204 * num204) + (num205 * num205)));
                                if (num206 > num203)
                                {
                                    num206 = num203 / num206;
                                    num204 *= num206;
                                    num205 *= num206;
                                }
                                if (this.position.X < (((this.ai[0] * 16f) + 8f) + num204))
                                {
                                    this.velocity.X += num202;
                                    if ((this.velocity.X < 0f) && (num204 > 0f))
                                    {
                                        this.velocity.X += num202 * 1.5f;
                                    }
                                }
                                else if (this.position.X > (((this.ai[0] * 16f) + 8f) + num204))
                                {
                                    this.velocity.X -= num202;
                                    if ((this.velocity.X > 0f) && (num204 < 0f))
                                    {
                                        this.velocity.X -= num202 * 1.5f;
                                    }
                                }
                                if (this.position.Y < (((this.ai[1] * 16f) + 8f) + num205))
                                {
                                    this.velocity.Y += num202;
                                    if ((this.velocity.Y < 0f) && (num205 > 0f))
                                    {
                                        this.velocity.Y += num202 * 1.5f;
                                    }
                                }
                                else if (this.position.Y > (((this.ai[1] * 16f) + 8f) + num205))
                                {
                                    this.velocity.Y -= num202;
                                    if ((this.velocity.Y > 0f) && (num205 < 0f))
                                    {
                                        this.velocity.Y -= num202 * 1.5f;
                                    }
                                }
                                if (this.type == 0x2b)
                                {
                                    if (this.velocity.X > 3f)
                                    {
                                        this.velocity.X = 3f;
                                    }
                                    if (this.velocity.X < -3f)
                                    {
                                        this.velocity.X = -3f;
                                    }
                                    if (this.velocity.Y > 3f)
                                    {
                                        this.velocity.Y = 3f;
                                    }
                                    if (this.velocity.Y < -3f)
                                    {
                                        this.velocity.Y = -3f;
                                    }
                                }
                                else
                                {
                                    if (this.velocity.X > 2f)
                                    {
                                        this.velocity.X = 2f;
                                    }
                                    if (this.velocity.X < -2f)
                                    {
                                        this.velocity.X = -2f;
                                    }
                                    if (this.velocity.Y > 2f)
                                    {
                                        this.velocity.Y = 2f;
                                    }
                                    if (this.velocity.Y < -2f)
                                    {
                                        this.velocity.Y = -2f;
                                    }
                                }
                                if (num204 > 0f)
                                {
                                    this.spriteDirection = 1;
                                    this.rotation = (float) Math.Atan2((double) num205, (double) num204);
                                }
                                if (num204 < 0f)
                                {
                                    this.spriteDirection = -1;
                                    this.rotation = ((float) Math.Atan2((double) num205, (double) num204)) + 3.14f;
                                }
                                if (this.collideX)
                                {
                                    this.netUpdate = true;
                                    this.velocity.X = this.oldVelocity.X * -0.7f;
                                    if ((this.velocity.X > 0f) && (this.velocity.X < 2f))
                                    {
                                        this.velocity.X = 2f;
                                    }
                                    if ((this.velocity.X < 0f) && (this.velocity.X > -2f))
                                    {
                                        this.velocity.X = -2f;
                                    }
                                }
                                if (this.collideY)
                                {
                                    this.netUpdate = true;
                                    this.velocity.Y = this.oldVelocity.Y * -0.7f;
                                    if ((this.velocity.Y > 0f) && (this.velocity.Y < 2f))
                                    {
                                        this.velocity.Y = 2f;
                                    }
                                    if ((this.velocity.Y < 0f) && (this.velocity.Y > -2f))
                                    {
                                        this.velocity.Y = -2f;
                                    }
                                }
                                if (((Main.netMode != 1) && (this.type == 0x65)) && !Main.player[this.target].dead)
                                {
                                    if (this.justHit)
                                    {
                                        this.localAI[0] = 0f;
                                    }
                                    this.localAI[0]++;
                                    if (this.localAI[0] >= 120f)
                                    {
                                        if (!Collision.SolidCollision(this.position, this.width, this.height) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                        {
                                            float num207 = 10f;
                                            vector22 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            num204 = ((Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector22.X) + Main.rand.Next(-10, 11);
                                            num205 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector22.Y) + Main.rand.Next(-10, 11);
                                            num206 = (float) Math.Sqrt((double) ((num204 * num204) + (num205 * num205)));
                                            num206 = num207 / num206;
                                            num204 *= num206;
                                            num205 *= num206;
                                            int num208 = 0x16;
                                            int num209 = 0x60;
                                            int num210 = Projectile.NewProjectile(vector22.X, vector22.Y, num204, num205, num209, num208, 0f, Main.myPlayer);
                                            Main.projectile[num210].timeLeft = 300;
                                            this.localAI[0] = 0f;
                                            return;
                                        }
                                        this.localAI[0] = 100f;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 14)
                            {
                                if (this.type == 60)
                                {
                                    int num211 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                                    Main.dust[num211].noGravity = true;
                                }
                                this.noGravity = true;
                                if (this.collideX)
                                {
                                    this.velocity.X = this.oldVelocity.X * -0.5f;
                                    if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 2f))
                                    {
                                        this.velocity.X = 2f;
                                    }
                                    if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -2f))
                                    {
                                        this.velocity.X = -2f;
                                    }
                                }
                                if (this.collideY)
                                {
                                    this.velocity.Y = this.oldVelocity.Y * -0.5f;
                                    if ((this.velocity.Y > 0f) && (this.velocity.Y < 1f))
                                    {
                                        this.velocity.Y = 1f;
                                    }
                                    if ((this.velocity.Y < 0f) && (this.velocity.Y > -1f))
                                    {
                                        this.velocity.Y = -1f;
                                    }
                                }
                                this.TargetClosest(true);
                                if ((this.direction == -1) && (this.velocity.X > -4f))
                                {
                                    this.velocity.X -= 0.1f;
                                    if (this.velocity.X > 4f)
                                    {
                                        this.velocity.X -= 0.1f;
                                    }
                                    else if (this.velocity.X > 0f)
                                    {
                                        this.velocity.X += 0.05f;
                                    }
                                    if (this.velocity.X < -4f)
                                    {
                                        this.velocity.X = -4f;
                                    }
                                }
                                else if ((this.direction == 1) && (this.velocity.X < 4f))
                                {
                                    this.velocity.X += 0.1f;
                                    if (this.velocity.X < -4f)
                                    {
                                        this.velocity.X += 0.1f;
                                    }
                                    else if (this.velocity.X < 0f)
                                    {
                                        this.velocity.X -= 0.05f;
                                    }
                                    if (this.velocity.X > 4f)
                                    {
                                        this.velocity.X = 4f;
                                    }
                                }
                                if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                                {
                                    this.velocity.Y -= 0.04f;
                                    if (this.velocity.Y > 1.5)
                                    {
                                        this.velocity.Y -= 0.05f;
                                    }
                                    else if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y += 0.03f;
                                    }
                                    if (this.velocity.Y < -1.5)
                                    {
                                        this.velocity.Y = -1.5f;
                                    }
                                }
                                else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                                {
                                    this.velocity.Y += 0.04f;
                                    if (this.velocity.Y < -1.5)
                                    {
                                        this.velocity.Y += 0.05f;
                                    }
                                    else if (this.velocity.Y < 0f)
                                    {
                                        this.velocity.Y -= 0.03f;
                                    }
                                    if (this.velocity.Y > 1.5)
                                    {
                                        this.velocity.Y = 1.5f;
                                    }
                                }
                                if ((((this.type == 0x31) || (this.type == 0x33)) || ((this.type == 60) || (this.type == 0x3e))) || (((this.type == 0x42) || (this.type == 0x5d)) || (this.type == 0x89)))
                                {
                                    if (this.wet)
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.95f;
                                        }
                                        this.velocity.Y -= 0.5f;
                                        if (this.velocity.Y < -4f)
                                        {
                                            this.velocity.Y = -4f;
                                        }
                                        this.TargetClosest(true);
                                    }
                                    if (this.type == 60)
                                    {
                                        if ((this.direction == -1) && (this.velocity.X > -4f))
                                        {
                                            this.velocity.X -= 0.1f;
                                            if (this.velocity.X > 4f)
                                            {
                                                this.velocity.X -= 0.07f;
                                            }
                                            else if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X += 0.03f;
                                            }
                                            if (this.velocity.X < -4f)
                                            {
                                                this.velocity.X = -4f;
                                            }
                                        }
                                        else if ((this.direction == 1) && (this.velocity.X < 4f))
                                        {
                                            this.velocity.X += 0.1f;
                                            if (this.velocity.X < -4f)
                                            {
                                                this.velocity.X += 0.07f;
                                            }
                                            else if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X -= 0.03f;
                                            }
                                            if (this.velocity.X > 4f)
                                            {
                                                this.velocity.X = 4f;
                                            }
                                        }
                                        if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                                        {
                                            this.velocity.Y -= 0.04f;
                                            if (this.velocity.Y > 1.5)
                                            {
                                                this.velocity.Y -= 0.03f;
                                            }
                                            else if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y += 0.02f;
                                            }
                                            if (this.velocity.Y < -1.5)
                                            {
                                                this.velocity.Y = -1.5f;
                                            }
                                        }
                                        else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                                        {
                                            this.velocity.Y += 0.04f;
                                            if (this.velocity.Y < -1.5)
                                            {
                                                this.velocity.Y += 0.03f;
                                            }
                                            else if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y -= 0.02f;
                                            }
                                            if (this.velocity.Y > 1.5)
                                            {
                                                this.velocity.Y = 1.5f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if ((this.direction == -1) && (this.velocity.X > -4f))
                                        {
                                            this.velocity.X -= 0.1f;
                                            if (this.velocity.X > 4f)
                                            {
                                                this.velocity.X -= 0.1f;
                                            }
                                            else if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X += 0.05f;
                                            }
                                            if (this.velocity.X < -4f)
                                            {
                                                this.velocity.X = -4f;
                                            }
                                        }
                                        else if ((this.direction == 1) && (this.velocity.X < 4f))
                                        {
                                            this.velocity.X += 0.1f;
                                            if (this.velocity.X < -4f)
                                            {
                                                this.velocity.X += 0.1f;
                                            }
                                            else if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X -= 0.05f;
                                            }
                                            if (this.velocity.X > 4f)
                                            {
                                                this.velocity.X = 4f;
                                            }
                                        }
                                        if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                                        {
                                            this.velocity.Y -= 0.04f;
                                            if (this.velocity.Y > 1.5)
                                            {
                                                this.velocity.Y -= 0.05f;
                                            }
                                            else if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y += 0.03f;
                                            }
                                            if (this.velocity.Y < -1.5)
                                            {
                                                this.velocity.Y = -1.5f;
                                            }
                                        }
                                        else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                                        {
                                            this.velocity.Y += 0.04f;
                                            if (this.velocity.Y < -1.5)
                                            {
                                                this.velocity.Y += 0.05f;
                                            }
                                            else if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y -= 0.03f;
                                            }
                                            if (this.velocity.Y > 1.5)
                                            {
                                                this.velocity.Y = 1.5f;
                                            }
                                        }
                                    }
                                }
                                this.ai[1]++;
                                if (this.ai[1] > 200f)
                                {
                                    if (!Main.player[this.target].wet && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                    {
                                        this.ai[1] = 0f;
                                    }
                                    float num212 = 0.2f;
                                    float num213 = 0.1f;
                                    float num214 = 4f;
                                    float num215 = 1.5f;
                                    if (((this.type == 0x30) || (this.type == 0x3e)) || (this.type == 0x42))
                                    {
                                        num212 = 0.12f;
                                        num213 = 0.07f;
                                        num214 = 3f;
                                        num215 = 1.25f;
                                    }
                                    if (this.ai[1] > 1000f)
                                    {
                                        this.ai[1] = 0f;
                                    }
                                    this.ai[2]++;
                                    if (this.ai[2] > 0f)
                                    {
                                        if (this.velocity.Y < num215)
                                        {
                                            this.velocity.Y += num213;
                                        }
                                    }
                                    else if (this.velocity.Y > -num215)
                                    {
                                        this.velocity.Y -= num213;
                                    }
                                    if ((this.ai[2] < -150f) || (this.ai[2] > 150f))
                                    {
                                        if (this.velocity.X < num214)
                                        {
                                            this.velocity.X += num212;
                                        }
                                    }
                                    else if (this.velocity.X > -num214)
                                    {
                                        this.velocity.X -= num212;
                                    }
                                    if (this.ai[2] > 300f)
                                    {
                                        this.ai[2] = -300f;
                                    }
                                }
                                if (Main.netMode != 1)
                                {
                                    if (this.type == 0x30)
                                    {
                                        this.ai[0]++;
                                        if (((this.ai[0] == 30f) || (this.ai[0] == 60f)) || (this.ai[0] == 90f))
                                        {
                                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                            {
                                                float num216 = 6f;
                                                Vector2 vector23 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num217 = ((Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector23.X) + Main.rand.Next(-100, 0x65);
                                                float num218 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector23.Y) + Main.rand.Next(-100, 0x65);
                                                float num219 = (float) Math.Sqrt((double) ((num217 * num217) + (num218 * num218)));
                                                num219 = num216 / num219;
                                                num217 *= num219;
                                                num218 *= num219;
                                                int num220 = 15;
                                                int num221 = 0x26;
                                                int num222 = Projectile.NewProjectile(vector23.X, vector23.Y, num217, num218, num221, num220, 0f, Main.myPlayer);
                                                Main.projectile[num222].timeLeft = 300;
                                            }
                                        }
                                        else if (this.ai[0] >= (400 + Main.rand.Next(400)))
                                        {
                                            this.ai[0] = 0f;
                                        }
                                    }
                                    if ((this.type == 0x3e) || (this.type == 0x42))
                                    {
                                        this.ai[0]++;
                                        if (((this.ai[0] != 20f) && (this.ai[0] != 40f)) && ((this.ai[0] != 60f) && (this.ai[0] != 80f)))
                                        {
                                            if (this.ai[0] >= (300 + Main.rand.Next(300)))
                                            {
                                                this.ai[0] = 0f;
                                                return;
                                            }
                                        }
                                        else if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                        {
                                            float num223 = 0.2f;
                                            Vector2 vector24 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num224 = ((Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector24.X) + Main.rand.Next(-100, 0x65);
                                            float num225 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector24.Y) + Main.rand.Next(-100, 0x65);
                                            float num226 = (float) Math.Sqrt((double) ((num224 * num224) + (num225 * num225)));
                                            num226 = num223 / num226;
                                            num224 *= num226;
                                            num225 *= num226;
                                            int num227 = 0x15;
                                            int num228 = 0x2c;
                                            int num229 = Projectile.NewProjectile(vector24.X, vector24.Y, num224, num225, num228, num227, 0f, Main.myPlayer);
                                            Main.projectile[num229].timeLeft = 300;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 15)
                            {
                                this.aiAction = 0;
                                if ((this.ai[3] == 0f) && (this.life > 0))
                                {
                                    this.ai[3] = this.lifeMax;
                                }
                                if (this.ai[2] == 0f)
                                {
                                    this.ai[0] = -100f;
                                    this.ai[2] = 1f;
                                    this.TargetClosest(true);
                                }
                                if (this.velocity.Y == 0f)
                                {
                                    this.velocity.X *= 0.8f;
                                    if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                    {
                                        this.velocity.X = 0f;
                                    }
                                    this.ai[0] += 2f;
                                    if (this.life < (this.lifeMax * 0.8))
                                    {
                                        this.ai[0]++;
                                    }
                                    if (this.life < (this.lifeMax * 0.6))
                                    {
                                        this.ai[0]++;
                                    }
                                    if (this.life < (this.lifeMax * 0.4))
                                    {
                                        this.ai[0] += 2f;
                                    }
                                    if (this.life < (this.lifeMax * 0.2))
                                    {
                                        this.ai[0] += 3f;
                                    }
                                    if (this.life < (this.lifeMax * 0.1))
                                    {
                                        this.ai[0] += 4f;
                                    }
                                    if (this.ai[0] >= 0f)
                                    {
                                        this.netUpdate = true;
                                        this.TargetClosest(true);
                                        if (this.ai[1] == 3f)
                                        {
                                            this.velocity.Y = -13f;
                                            this.velocity.X += 3.5f * this.direction;
                                            this.ai[0] = -200f;
                                            this.ai[1] = 0f;
                                        }
                                        else if (this.ai[1] == 2f)
                                        {
                                            this.velocity.Y = -6f;
                                            this.velocity.X += 4.5f * this.direction;
                                            this.ai[0] = -120f;
                                            this.ai[1]++;
                                        }
                                        else
                                        {
                                            this.velocity.Y = -8f;
                                            this.velocity.X += 4f * this.direction;
                                            this.ai[0] = -120f;
                                            this.ai[1]++;
                                        }
                                    }
                                    else if (this.ai[0] >= -30f)
                                    {
                                        this.aiAction = 1;
                                    }
                                }
                                else if ((this.target < 0xff) && (((this.direction == 1) && (this.velocity.X < 3f)) || ((this.direction == -1) && (this.velocity.X > -3f))))
                                {
                                    if (((this.direction == -1) && (this.velocity.X < 0.1)) || ((this.direction == 1) && (this.velocity.X > -0.1)))
                                    {
                                        this.velocity.X += 0.2f * this.direction;
                                    }
                                    else
                                    {
                                        this.velocity.X *= 0.93f;
                                    }
                                }
                                int num230 = Dust.NewDust(this.position, this.width, this.height, 4, this.velocity.X, this.velocity.Y, 0xff, new Color(0, 80, 0xff, 80), this.scale * 1.2f);
                                Main.dust[num230].noGravity = true;
                                Dust dust13 = Main.dust[num230];
                                dust13.velocity = (Vector2) (dust13.velocity * 0.5f);
                                if (this.life > 0)
                                {
                                    float num231 = ((float) this.life) / ((float) this.lifeMax);
                                    num231 = (num231 * 0.5f) + 0.75f;
                                    if (num231 != this.scale)
                                    {
                                        this.position.X += this.width / 2;
                                        this.position.Y += this.height;
                                        this.scale = num231;
                                        this.width = (int) (98f * this.scale);
                                        this.height = (int) (92f * this.scale);
                                        this.position.X -= this.width / 2;
                                        this.position.Y -= this.height;
                                    }
                                    if (Main.netMode != 1)
                                    {
                                        int num232 = (int) (this.lifeMax * 0.05);
                                        if ((this.life + num232) < this.ai[3])
                                        {
                                            this.ai[3] = this.life;
                                            int num233 = Main.rand.Next(1, 4);
                                            for (int num234 = 0; num234 < num233; num234++)
                                            {
                                                int x = ((int) this.position.X) + Main.rand.Next(this.width - 0x20);
                                                int y = ((int) this.position.Y) + Main.rand.Next(this.height - 0x20);
                                                int num237 = NewNPC(x, y, 1, 0);
                                                Main.npc[num237].SetDefaults(1, -1f);
                                                Main.npc[num237].velocity.X = Main.rand.Next(-15, 0x10) * 0.1f;
                                                Main.npc[num237].velocity.Y = Main.rand.Next(-30, 1) * 0.1f;
                                                Main.npc[num237].ai[1] = Main.rand.Next(3);
                                                if ((Main.netMode == 2) && (num237 < 200))
                                                {
                                                    NetMessage.SendData(0x17, -1, -1, "", num237, 0f, 0f, 0f, 0);
                                                }
                                            }
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x10)
                            {
                                if (this.direction == 0)
                                {
                                    this.TargetClosest(true);
                                }
                                if (this.wet)
                                {
                                    bool flag22 = false;
                                    if (this.type != 0x37)
                                    {
                                        this.TargetClosest(false);
                                        if (Main.player[this.target].wet && !Main.player[this.target].dead)
                                        {
                                            flag22 = true;
                                        }
                                    }
                                    if (!flag22)
                                    {
                                        if (this.collideX)
                                        {
                                            this.velocity.X *= -1f;
                                            this.direction *= -1;
                                            this.netUpdate = true;
                                        }
                                        if (this.collideY)
                                        {
                                            this.netUpdate = true;
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
                                                this.directionY = -1;
                                                this.ai[0] = -1f;
                                            }
                                            else if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y = Math.Abs(this.velocity.Y);
                                                this.directionY = 1;
                                                this.ai[0] = 1f;
                                            }
                                        }
                                    }
                                    if (this.type == 0x66)
                                    {
                                        Lighting.addLight(((((int) this.position.X) + (this.width / 2)) + (this.direction * (this.width + 8))) / 0x10, ((int) (this.position.Y + 2f)) / 0x10, 0.07f, 0.04f, 0.025f);
                                    }
                                    if (flag22)
                                    {
                                        this.TargetClosest(true);
                                        if ((this.type == 0x41) || (this.type == 0x66))
                                        {
                                            this.velocity.X += this.direction * 0.15f;
                                            this.velocity.Y += this.directionY * 0.15f;
                                            if (this.velocity.X > 5f)
                                            {
                                                this.velocity.X = 5f;
                                            }
                                            if (this.velocity.X < -5f)
                                            {
                                                this.velocity.X = -5f;
                                            }
                                            if (this.velocity.Y > 3f)
                                            {
                                                this.velocity.Y = 3f;
                                            }
                                            if (this.velocity.Y < -3f)
                                            {
                                                this.velocity.Y = -3f;
                                            }
                                        }
                                        else
                                        {
                                            this.velocity.X += this.direction * 0.1f;
                                            this.velocity.Y += this.directionY * 0.1f;
                                            if (this.velocity.X > 3f)
                                            {
                                                this.velocity.X = 3f;
                                            }
                                            if (this.velocity.X < -3f)
                                            {
                                                this.velocity.X = -3f;
                                            }
                                            if (this.velocity.Y > 2f)
                                            {
                                                this.velocity.Y = 2f;
                                            }
                                            if (this.velocity.Y < -2f)
                                            {
                                                this.velocity.Y = -2f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.velocity.X += this.direction * 0.1f;
                                        if ((this.velocity.X < -1f) || (this.velocity.X > 1f))
                                        {
                                            this.velocity.X *= 0.95f;
                                        }
                                        if (this.ai[0] == -1f)
                                        {
                                            this.velocity.Y -= 0.01f;
                                            if (this.velocity.Y < -0.3)
                                            {
                                                this.ai[0] = 1f;
                                            }
                                        }
                                        else
                                        {
                                            this.velocity.Y += 0.01f;
                                            if (this.velocity.Y > 0.3)
                                            {
                                                this.ai[0] = -1f;
                                            }
                                        }
                                        int num238 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                                        int num239 = (((int) this.position.Y) + (this.height / 2)) / 0x10;
                                        if (Main.tile[num238, num239 - 1] == null)
                                        {
                                            Main.tile[num238, num239 - 1] = new Tile();
                                        }
                                        if (Main.tile[num238, num239 + 1] == null)
                                        {
                                            Main.tile[num238, num239 + 1] = new Tile();
                                        }
                                        if (Main.tile[num238, num239 + 2] == null)
                                        {
                                            Main.tile[num238, num239 + 2] = new Tile();
                                        }
                                        if (Main.tile[num238, num239 - 1].liquid > 0x80)
                                        {
                                            if (Main.tile[num238, num239 + 1].active)
                                            {
                                                this.ai[0] = -1f;
                                            }
                                            else if (Main.tile[num238, num239 + 2].active)
                                            {
                                                this.ai[0] = -1f;
                                            }
                                        }
                                        if ((this.velocity.Y > 0.4) || (this.velocity.Y < -0.4))
                                        {
                                            this.velocity.Y *= 0.95f;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.velocity.Y == 0f)
                                    {
                                        if (this.type == 0x41)
                                        {
                                            this.velocity.X *= 0.94f;
                                            if ((this.velocity.X > -0.2) && (this.velocity.X < 0.2))
                                            {
                                                this.velocity.X = 0f;
                                            }
                                        }
                                        else if (Main.netMode != 1)
                                        {
                                            this.velocity.Y = Main.rand.Next(-50, -20) * 0.1f;
                                            this.velocity.X = Main.rand.Next(-20, 20) * 0.1f;
                                            this.netUpdate = true;
                                        }
                                    }
                                    this.velocity.Y += 0.3f;
                                    if (this.velocity.Y > 10f)
                                    {
                                        this.velocity.Y = 10f;
                                    }
                                    this.ai[0] = 1f;
                                }
                                this.rotation = (this.velocity.Y * this.direction) * 0.1f;
                                if (this.rotation < -0.2)
                                {
                                    this.rotation = -0.2f;
                                }
                                if (this.rotation > 0.2)
                                {
                                    this.rotation = 0.2f;
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x11)
                            {
                                this.noGravity = true;
                                if (this.ai[0] == 0f)
                                {
                                    this.noGravity = false;
                                    this.TargetClosest(true);
                                    if (Main.netMode != 1)
                                    {
                                        if (((this.velocity.X != 0f) || (this.velocity.Y < 0f)) || (this.velocity.Y > 0.3))
                                        {
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                        }
                                        else
                                        {
                                            Rectangle rectangle5 = new Rectangle((int) Main.player[this.target].position.X, (int) Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
                                            Rectangle rectangle6 = new Rectangle(((int) this.position.X) - 100, ((int) this.position.Y) - 100, this.width + 200, this.height + 200);
                                            if (rectangle6.Intersects(rectangle5) || (this.life < this.lifeMax))
                                            {
                                                this.ai[0] = 1f;
                                                this.velocity.Y -= 6f;
                                                this.netUpdate = true;
                                            }
                                        }
                                    }
                                }
                                else if (!Main.player[this.target].dead)
                                {
                                    if (this.collideX)
                                    {
                                        this.velocity.X = this.oldVelocity.X * -0.5f;
                                        if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 2f))
                                        {
                                            this.velocity.X = 2f;
                                        }
                                        if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -2f))
                                        {
                                            this.velocity.X = -2f;
                                        }
                                    }
                                    if (this.collideY)
                                    {
                                        this.velocity.Y = this.oldVelocity.Y * -0.5f;
                                        if ((this.velocity.Y > 0f) && (this.velocity.Y < 1f))
                                        {
                                            this.velocity.Y = 1f;
                                        }
                                        if ((this.velocity.Y < 0f) && (this.velocity.Y > -1f))
                                        {
                                            this.velocity.Y = -1f;
                                        }
                                    }
                                    this.TargetClosest(true);
                                    if ((this.direction == -1) && (this.velocity.X > -3f))
                                    {
                                        this.velocity.X -= 0.1f;
                                        if (this.velocity.X > 3f)
                                        {
                                            this.velocity.X -= 0.1f;
                                        }
                                        else if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X -= 0.05f;
                                        }
                                        if (this.velocity.X < -3f)
                                        {
                                            this.velocity.X = -3f;
                                        }
                                    }
                                    else if ((this.direction == 1) && (this.velocity.X < 3f))
                                    {
                                        this.velocity.X += 0.1f;
                                        if (this.velocity.X < -3f)
                                        {
                                            this.velocity.X += 0.1f;
                                        }
                                        else if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X += 0.05f;
                                        }
                                        if (this.velocity.X > 3f)
                                        {
                                            this.velocity.X = 3f;
                                        }
                                    }
                                    float num240 = Math.Abs((float) ((this.position.X + (this.width / 2)) - (Main.player[this.target].position.X + (Main.player[this.target].width / 2))));
                                    float num241 = Main.player[this.target].position.Y - (this.height / 2);
                                    if (num240 > 50f)
                                    {
                                        num241 -= 100f;
                                    }
                                    if (this.position.Y < num241)
                                    {
                                        this.velocity.Y += 0.05f;
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y += 0.01f;
                                        }
                                    }
                                    else
                                    {
                                        this.velocity.Y -= 0.05f;
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y -= 0.01f;
                                        }
                                    }
                                    if (this.velocity.Y < -3f)
                                    {
                                        this.velocity.Y = -3f;
                                    }
                                    if (this.velocity.Y > 3f)
                                    {
                                        this.velocity.Y = 3f;
                                    }
                                }
                                if (this.wet)
                                {
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y *= 0.95f;
                                    }
                                    this.velocity.Y -= 0.5f;
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                    this.TargetClosest(true);
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x12)
                            {
                                if (this.type == 0x3f)
                                {
                                    Lighting.addLight((((int) this.position.X) + (this.height / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.05f, 0.15f, 0.4f);
                                }
                                else if (this.type == 0x67)
                                {
                                    Lighting.addLight((((int) this.position.X) + (this.height / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.05f, 0.45f, 0.1f);
                                }
                                else
                                {
                                    Lighting.addLight((((int) this.position.X) + (this.height / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.35f, 0.05f, 0.2f);
                                }
                                if (this.direction == 0)
                                {
                                    this.TargetClosest(true);
                                }
                                if (!this.wet)
                                {
                                    this.rotation += this.velocity.X * 0.1f;
                                    if (this.velocity.Y == 0f)
                                    {
                                        this.velocity.X *= 0.98f;
                                        if ((this.velocity.X > -0.01) && (this.velocity.X < 0.01))
                                        {
                                            this.velocity.X = 0f;
                                        }
                                    }
                                    this.velocity.Y += 0.2f;
                                    if (this.velocity.Y > 10f)
                                    {
                                        this.velocity.Y = 10f;
                                    }
                                    this.ai[0] = 1f;
                                    return;
                                }
                                if (this.collideX)
                                {
                                    this.velocity.X *= -1f;
                                    this.direction *= -1;
                                }
                                if (this.collideY)
                                {
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y = Math.Abs(this.velocity.Y) * -1f;
                                        this.directionY = -1;
                                        this.ai[0] = -1f;
                                    }
                                    else if (this.velocity.Y < 0f)
                                    {
                                        this.velocity.Y = Math.Abs(this.velocity.Y);
                                        this.directionY = 1;
                                        this.ai[0] = 1f;
                                    }
                                }
                                bool flag23 = false;
                                if (!this.friendly)
                                {
                                    this.TargetClosest(false);
                                    if (Main.player[this.target].wet && !Main.player[this.target].dead)
                                    {
                                        flag23 = true;
                                    }
                                }
                                if (!flag23)
                                {
                                    this.velocity.X += this.direction * 0.02f;
                                    this.rotation = this.velocity.X * 0.4f;
                                    if ((this.velocity.X < -1f) || (this.velocity.X > 1f))
                                    {
                                        this.velocity.X *= 0.95f;
                                    }
                                    if (this.ai[0] == -1f)
                                    {
                                        this.velocity.Y -= 0.01f;
                                        if (this.velocity.Y < -1f)
                                        {
                                            this.ai[0] = 1f;
                                        }
                                    }
                                    else
                                    {
                                        this.velocity.Y += 0.01f;
                                        if (this.velocity.Y > 1f)
                                        {
                                            this.ai[0] = -1f;
                                        }
                                    }
                                    int num247 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                                    int num248 = (((int) this.position.Y) + (this.height / 2)) / 0x10;
                                    if (Main.tile[num247, num248 - 1] == null)
                                    {
                                        Main.tile[num247, num248 - 1] = new Tile();
                                    }
                                    if (Main.tile[num247, num248 + 1] == null)
                                    {
                                        Main.tile[num247, num248 + 1] = new Tile();
                                    }
                                    if (Main.tile[num247, num248 + 2] == null)
                                    {
                                        Main.tile[num247, num248 + 2] = new Tile();
                                    }
                                    if (Main.tile[num247, num248 - 1].liquid > 0x80)
                                    {
                                        if (Main.tile[num247, num248 + 1].active)
                                        {
                                            this.ai[0] = -1f;
                                        }
                                        else if (Main.tile[num247, num248 + 2].active)
                                        {
                                            this.ai[0] = -1f;
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] = 1f;
                                    }
                                    if ((this.velocity.Y > 1.2) || (this.velocity.Y < -1.2))
                                    {
                                        this.velocity.Y *= 0.99f;
                                        return;
                                    }
                                }
                                else
                                {
                                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 1.57f;
                                    this.velocity = (Vector2) (this.velocity * 0.98f);
                                    float num242 = 0.2f;
                                    if (this.type == 0x67)
                                    {
                                        this.velocity = (Vector2) (this.velocity * 0.98f);
                                        num242 = 0.6f;
                                    }
                                    if (((this.velocity.X > -num242) && (this.velocity.X < num242)) && ((this.velocity.Y > -num242) && (this.velocity.Y < num242)))
                                    {
                                        this.TargetClosest(true);
                                        float num243 = 7f;
                                        if (this.type == 0x67)
                                        {
                                            num243 = 9f;
                                        }
                                        Vector2 vector25 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num244 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector25.X;
                                        float num245 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector25.Y;
                                        float num246 = (float) Math.Sqrt((double) ((num244 * num244) + (num245 * num245)));
                                        num246 = num243 / num246;
                                        num244 *= num246;
                                        num245 *= num246;
                                        this.velocity.X = num244;
                                        this.velocity.Y = num245;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x13)
                            {
                                this.TargetClosest(true);
                                float num249 = 12f;
                                Vector2 vector26 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num250 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector26.X;
                                float num251 = Main.player[this.target].position.Y - vector26.Y;
                                float num252 = (float) Math.Sqrt((double) ((num250 * num250) + (num251 * num251)));
                                num252 = num249 / num252;
                                num250 *= num252;
                                num251 *= num252;
                                bool flag24 = false;
                                if (this.directionY < 0)
                                {
                                    this.rotation = (float) (Math.Atan2((double) num251, (double) num250) + 1.57);
                                    if ((this.rotation < -1.2) || (this.rotation > 1.2))
                                    {
                                        flag24 = false;
                                    }
                                    else
                                    {
                                        flag24 = true;
                                    }
                                    if (this.rotation < -0.8)
                                    {
                                        this.rotation = -0.8f;
                                    }
                                    else if (this.rotation > 0.8)
                                    {
                                        this.rotation = 0.8f;
                                    }
                                    if (this.velocity.X != 0f)
                                    {
                                        this.velocity.X *= 0.9f;
                                        if ((this.velocity.X > -0.1) || (this.velocity.X < 0.1))
                                        {
                                            this.netUpdate = true;
                                            this.velocity.X = 0f;
                                        }
                                    }
                                }
                                if (this.ai[0] > 0f)
                                {
                                    if (this.ai[0] == 200f)
                                    {
                                        Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 5);
                                    }
                                    this.ai[0]--;
                                }
                                if (((Main.netMode != 1) && flag24) && ((this.ai[0] == 0f) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height)))
                                {
                                    this.ai[0] = 200f;
                                    int num253 = 10;
                                    int num254 = 0x1f;
                                    int num255 = Projectile.NewProjectile(vector26.X, vector26.Y, num250, num251, num254, num253, 0f, Main.myPlayer);
                                    Main.projectile[num255].ai[0] = 2f;
                                    Main.projectile[num255].timeLeft = 300;
                                    Main.projectile[num255].friendly = false;
                                    NetMessage.SendData(0x1b, -1, -1, "", num255, 0f, 0f, 0f, 0);
                                    this.netUpdate = true;
                                }
                                try
                                {
                                    int num256 = ((int) this.position.X) / 0x10;
                                    int num257 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                                    int num258 = (((int) this.position.X) + this.width) / 0x10;
                                    int num259 = (((int) this.position.Y) + this.height) / 0x10;
                                    bool flag25 = false;
                                    if (Main.tile[num256, num259] == null)
                                    {
                                        Main.tile[num256, num259] = new Tile();
                                    }
                                    if (Main.tile[num257, num259] == null)
                                    {
                                        Main.tile[num256, num259] = new Tile();
                                    }
                                    if (Main.tile[num258, num259] == null)
                                    {
                                        Main.tile[num256, num259] = new Tile();
                                    }
                                    if (((Main.tile[num256, num259].active && Main.tileSolid[Main.tile[num256, num259].type]) || (Main.tile[num257, num259].active && Main.tileSolid[Main.tile[num257, num259].type])) || (Main.tile[num258, num259].active && Main.tileSolid[Main.tile[num258, num259].type]))
                                    {
                                        flag25 = true;
                                    }
                                    if (flag25)
                                    {
                                        this.noGravity = true;
                                        this.noTileCollide = true;
                                        this.velocity.Y = -0.2f;
                                    }
                                    else
                                    {
                                        this.noGravity = false;
                                        this.noTileCollide = false;
                                        if (Main.rand.Next(2) == 0)
                                        {
                                            int num260 = Dust.NewDust(new Vector2(this.position.X - 4f, (this.position.Y + this.height) - 8f), this.width + 8, 0x18, 0x20, 0f, this.velocity.Y / 2f, 0, new Color(), 1f);
                                            Main.dust[num260].velocity.X *= 0.4f;
                                            Main.dust[num260].velocity.Y *= -1f;
                                            if (Main.rand.Next(2) == 0)
                                            {
                                                Main.dust[num260].noGravity = true;
                                                Dust dust14 = Main.dust[num260];
                                                dust14.scale += 0.2f;
                                            }
                                        }
                                    }
                                    return;
                                }
                                catch
                                {
                                    return;
                                }
                            }
                            if (this.aiStyle == 20)
                            {
                                if (this.ai[0] == 0f)
                                {
                                    if (Main.netMode != 1)
                                    {
                                        this.TargetClosest(true);
                                        this.direction *= -1;
                                        this.directionY *= -1;
                                        this.position.Y += (this.height / 2) + 8;
                                        this.ai[1] = this.position.X + (this.width / 2);
                                        this.ai[2] = this.position.Y + (this.height / 2);
                                        if (this.direction == 0)
                                        {
                                            this.direction = 1;
                                        }
                                        if (this.directionY == 0)
                                        {
                                            this.directionY = 1;
                                        }
                                        this.ai[3] = 1f + (Main.rand.Next(15) * 0.1f);
                                        this.velocity.Y = (this.directionY * 6) * this.ai[3];
                                        this.ai[0]++;
                                        this.netUpdate = true;
                                        return;
                                    }
                                    this.ai[1] = this.position.X + (this.width / 2);
                                    this.ai[2] = this.position.Y + (this.height / 2);
                                    return;
                                }
                                float num261 = 6f * this.ai[3];
                                float num262 = 0.2f * this.ai[3];
                                float num263 = (num261 / num262) / 2f;
                                if ((this.ai[0] >= 1f) && (this.ai[0] < ((int) num263)))
                                {
                                    this.velocity.Y = this.directionY * num261;
                                    this.ai[0]++;
                                    return;
                                }
                                if (this.ai[0] >= ((int) num263))
                                {
                                    this.netUpdate = true;
                                    this.velocity.Y = 0f;
                                    this.directionY *= -1;
                                    this.velocity.X = num261 * this.direction;
                                    this.ai[0] = -1f;
                                    return;
                                }
                                if (this.directionY > 0)
                                {
                                    if (this.velocity.Y >= num261)
                                    {
                                        this.netUpdate = true;
                                        this.directionY *= -1;
                                        this.velocity.Y = num261;
                                    }
                                }
                                else if ((this.directionY < 0) && (this.velocity.Y <= -num261))
                                {
                                    this.directionY *= -1;
                                    this.velocity.Y = -num261;
                                }
                                if (this.direction > 0)
                                {
                                    if (this.velocity.X >= num261)
                                    {
                                        this.direction *= -1;
                                        this.velocity.X = num261;
                                    }
                                }
                                else if ((this.direction < 0) && (this.velocity.X <= -num261))
                                {
                                    this.direction *= -1;
                                    this.velocity.X = -num261;
                                }
                                this.velocity.X += num262 * this.direction;
                                this.velocity.Y += num262 * this.directionY;
                                return;
                            }
                            if (this.aiStyle == 0x15)
                            {
                                if (this.ai[0] == 0f)
                                {
                                    this.TargetClosest(true);
                                    this.directionY = 1;
                                    this.ai[0] = 1f;
                                }
                                int num264 = 6;
                                if (this.ai[1] == 0f)
                                {
                                    this.rotation += (this.direction * this.directionY) * 0.13f;
                                    if (this.collideY)
                                    {
                                        this.ai[0] = 2f;
                                    }
                                    if (!this.collideY && (this.ai[0] == 2f))
                                    {
                                        this.direction = -this.direction;
                                        this.ai[1] = 1f;
                                        this.ai[0] = 1f;
                                    }
                                    if (this.collideX)
                                    {
                                        this.directionY = -this.directionY;
                                        this.ai[1] = 1f;
                                    }
                                }
                                else
                                {
                                    this.rotation -= (this.direction * this.directionY) * 0.13f;
                                    if (this.collideX)
                                    {
                                        this.ai[0] = 2f;
                                    }
                                    if (!this.collideX && (this.ai[0] == 2f))
                                    {
                                        this.directionY = -this.directionY;
                                        this.ai[1] = 0f;
                                        this.ai[0] = 1f;
                                    }
                                    if (this.collideY)
                                    {
                                        this.direction = -this.direction;
                                        this.ai[1] = 0f;
                                    }
                                }
                                this.velocity.X = num264 * this.direction;
                                this.velocity.Y = num264 * this.directionY;
                                float num265 = ((float) (270 - Main.mouseTextColor)) / 400f;
                                Lighting.addLight((((int) this.position.X) + (this.width / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.9f, 0.3f + num265, 0.2f);
                                return;
                            }
                            if (this.aiStyle == 0x16)
                            {
                                bool flag26 = false;
                                if (this.justHit)
                                {
                                    this.ai[2] = 0f;
                                }
                                if (this.ai[2] >= 0f)
                                {
                                    int num266 = 0x10;
                                    bool flag27 = false;
                                    bool flag28 = false;
                                    if ((this.position.X > (this.ai[0] - num266)) && (this.position.X < (this.ai[0] + num266)))
                                    {
                                        flag27 = true;
                                    }
                                    else if (((this.velocity.X < 0f) && (this.direction > 0)) || ((this.velocity.X > 0f) && (this.direction < 0)))
                                    {
                                        flag27 = true;
                                    }
                                    num266 += 0x18;
                                    if ((this.position.Y > (this.ai[1] - num266)) && (this.position.Y < (this.ai[1] + num266)))
                                    {
                                        flag28 = true;
                                    }
                                    if (flag27 && flag28)
                                    {
                                        this.ai[2]++;
                                        if ((this.ai[2] >= 30f) && (num266 == 0x10))
                                        {
                                            flag26 = true;
                                        }
                                        if (this.ai[2] >= 60f)
                                        {
                                            this.ai[2] = -200f;
                                            this.direction *= -1;
                                            this.velocity.X *= -1f;
                                            this.collideX = false;
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] = this.position.X;
                                        this.ai[1] = this.position.Y;
                                        this.ai[2] = 0f;
                                    }
                                    this.TargetClosest(true);
                                }
                                else
                                {
                                    this.ai[2]++;
                                    if ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) > (this.position.X + (this.width / 2)))
                                    {
                                        this.direction = -1;
                                    }
                                    else
                                    {
                                        this.direction = 1;
                                    }
                                }
                                int num267 = ((int) ((this.position.X + (this.width / 2)) / 16f)) + (this.direction * 2);
                                int num268 = (int) ((this.position.Y + this.height) / 16f);
                                bool flag29 = true;
                                bool flag30 = false;
                                int num269 = 3;
                                if (this.type == 0x7a)
                                {
                                    if (this.justHit)
                                    {
                                        this.ai[3] = 0f;
                                        this.localAI[1] = 0f;
                                    }
                                    float num270 = 7f;
                                    Vector2 vector27 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num271 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector27.X;
                                    float num272 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector27.Y;
                                    float num273 = (float) Math.Sqrt((double) ((num271 * num271) + (num272 * num272)));
                                    num273 = num270 / num273;
                                    num271 *= num273;
                                    num272 *= num273;
                                    if ((Main.netMode != 1) && (this.ai[3] == 32f))
                                    {
                                        int num274 = 0x19;
                                        int num275 = 0x54;
                                        Projectile.NewProjectile(vector27.X, vector27.Y, num271, num272, num275, num274, 0f, Main.myPlayer);
                                    }
                                    num269 = 8;
                                    if (this.ai[3] > 0f)
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 64f)
                                        {
                                            this.ai[3] = 0f;
                                        }
                                    }
                                    if ((Main.netMode != 1) && (this.ai[3] == 0f))
                                    {
                                        this.localAI[1]++;
                                        if ((this.localAI[1] > 120f) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                        {
                                            this.localAI[1] = 0f;
                                            this.ai[3] = 1f;
                                            this.netUpdate = true;
                                        }
                                    }
                                }
                                else if (this.type == 0x4b)
                                {
                                    num269 = 4;
                                    if (Main.rand.Next(6) == 0)
                                    {
                                        int num276 = Dust.NewDust(this.position, this.width, this.height, 0x37, 0f, 0f, 200, this.color, 1f);
                                        Dust dust15 = Main.dust[num276];
                                        dust15.velocity = (Vector2) (dust15.velocity * 0.3f);
                                    }
                                    if (Main.rand.Next(40) == 0)
                                    {
                                        Main.PlaySound(0x1b, (int) this.position.X, (int) this.position.Y, 1);
                                    }
                                }
                                for (int num277 = num268; num277 < (num268 + num269); num277++)
                                {
                                    if (Main.tile[num267, num277] == null)
                                    {
                                        Main.tile[num267, num277] = new Tile();
                                    }
                                    if ((Main.tile[num267, num277].active && Main.tileSolid[Main.tile[num267, num277].type]) || (Main.tile[num267, num277].liquid > 0))
                                    {
                                        if (num277 <= (num268 + 1))
                                        {
                                            flag30 = true;
                                        }
                                        flag29 = false;
                                        break;
                                    }
                                }
                                if (flag26)
                                {
                                    flag30 = false;
                                    flag29 = true;
                                }
                                if (flag29)
                                {
                                    if (this.type == 0x4b)
                                    {
                                        this.velocity.Y += 0.2f;
                                        if (this.velocity.Y > 2f)
                                        {
                                            this.velocity.Y = 2f;
                                        }
                                    }
                                    else
                                    {
                                        this.velocity.Y += 0.1f;
                                        if (this.velocity.Y > 3f)
                                        {
                                            this.velocity.Y = 3f;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.type == 0x4b)
                                    {
                                        if (((this.directionY < 0) && (this.velocity.Y > 0f)) || flag30)
                                        {
                                            this.velocity.Y -= 0.2f;
                                        }
                                    }
                                    else if ((this.directionY < 0) && (this.velocity.Y > 0f))
                                    {
                                        this.velocity.Y -= 0.1f;
                                    }
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                }
                                if ((this.type == 0x4b) && this.wet)
                                {
                                    this.velocity.Y -= 0.2f;
                                    if (this.velocity.Y < -2f)
                                    {
                                        this.velocity.Y = -2f;
                                    }
                                }
                                if (this.collideX)
                                {
                                    this.velocity.X = this.oldVelocity.X * -0.4f;
                                    if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 1f))
                                    {
                                        this.velocity.X = 1f;
                                    }
                                    if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -1f))
                                    {
                                        this.velocity.X = -1f;
                                    }
                                }
                                if (this.collideY)
                                {
                                    this.velocity.Y = this.oldVelocity.Y * -0.25f;
                                    if ((this.velocity.Y > 0f) && (this.velocity.Y < 1f))
                                    {
                                        this.velocity.Y = 1f;
                                    }
                                    if ((this.velocity.Y < 0f) && (this.velocity.Y > -1f))
                                    {
                                        this.velocity.Y = -1f;
                                    }
                                }
                                float num278 = 2f;
                                if (this.type == 0x4b)
                                {
                                    num278 = 3f;
                                }
                                if ((this.direction == -1) && (this.velocity.X > -num278))
                                {
                                    this.velocity.X -= 0.1f;
                                    if (this.velocity.X > num278)
                                    {
                                        this.velocity.X -= 0.1f;
                                    }
                                    else if (this.velocity.X > 0f)
                                    {
                                        this.velocity.X += 0.05f;
                                    }
                                    if (this.velocity.X < -num278)
                                    {
                                        this.velocity.X = -num278;
                                    }
                                }
                                else if ((this.direction == 1) && (this.velocity.X < num278))
                                {
                                    this.velocity.X += 0.1f;
                                    if (this.velocity.X < -num278)
                                    {
                                        this.velocity.X += 0.1f;
                                    }
                                    else if (this.velocity.X < 0f)
                                    {
                                        this.velocity.X -= 0.05f;
                                    }
                                    if (this.velocity.X > num278)
                                    {
                                        this.velocity.X = num278;
                                    }
                                }
                                if ((this.directionY == -1) && (this.velocity.Y > -1.5))
                                {
                                    this.velocity.Y -= 0.04f;
                                    if (this.velocity.Y > 1.5)
                                    {
                                        this.velocity.Y -= 0.05f;
                                    }
                                    else if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y += 0.03f;
                                    }
                                    if (this.velocity.Y < -1.5)
                                    {
                                        this.velocity.Y = -1.5f;
                                    }
                                }
                                else if ((this.directionY == 1) && (this.velocity.Y < 1.5))
                                {
                                    this.velocity.Y += 0.04f;
                                    if (this.velocity.Y < -1.5)
                                    {
                                        this.velocity.Y += 0.05f;
                                    }
                                    else if (this.velocity.Y < 0f)
                                    {
                                        this.velocity.Y -= 0.03f;
                                    }
                                    if (this.velocity.Y > 1.5)
                                    {
                                        this.velocity.Y = 1.5f;
                                    }
                                }
                                if (this.type == 0x7a)
                                {
                                    Lighting.addLight(((int) this.position.X) / 0x10, ((int) this.position.Y) / 0x10, 0.4f, 0f, 0.25f);
                                }
                                return;
                            }
                            if (this.aiStyle == 0x17)
                            {
                                this.noGravity = true;
                                this.noTileCollide = true;
                                if (this.type == 0x53)
                                {
                                    Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 0.2f, 0.05f, 0.3f);
                                }
                                else
                                {
                                    Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 0.05f, 0.2f, 0.3f);
                                }
                                if (((this.target < 0) || (this.target == 0xff)) || Main.player[this.target].dead)
                                {
                                    this.TargetClosest(true);
                                }
                                if (this.ai[0] == 0f)
                                {
                                    float num279 = 9f;
                                    Vector2 vector28 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num280 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector28.X;
                                    float num281 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector28.Y;
                                    float num282 = (float) Math.Sqrt((double) ((num280 * num280) + (num281 * num281)));
                                    num282 = num279 / num282;
                                    num280 *= num282;
                                    num281 *= num282;
                                    this.velocity.X = num280;
                                    this.velocity.Y = num281;
                                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 0.785f;
                                    this.ai[0] = 1f;
                                    this.ai[1] = 0f;
                                    return;
                                }
                                if (this.ai[0] != 1f)
                                {
                                    if (this.justHit)
                                    {
                                        this.ai[0] = 2f;
                                        this.ai[1] = 0f;
                                    }
                                    this.velocity = (Vector2) (this.velocity * 0.96f);
                                    this.ai[1]++;
                                    float num283 = this.ai[1] / 120f;
                                    num283 = 0.1f + (num283 * 0.4f);
                                    this.rotation += num283 * this.direction;
                                    if (this.ai[1] >= 120f)
                                    {
                                        this.netUpdate = true;
                                        this.ai[0] = 0f;
                                        this.ai[1] = 0f;
                                        return;
                                    }
                                }
                                else
                                {
                                    if (this.justHit)
                                    {
                                        this.ai[0] = 2f;
                                        this.ai[1] = 0f;
                                    }
                                    this.velocity = (Vector2) (this.velocity * 0.99f);
                                    this.ai[1]++;
                                    if (this.ai[1] >= 100f)
                                    {
                                        this.ai[0] = 2f;
                                        this.ai[1] = 0f;
                                        this.velocity.X = 0f;
                                        this.velocity.Y = 0f;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x18)
                            {
                                this.noGravity = true;
                                if (this.ai[0] == 0f)
                                {
                                    this.noGravity = false;
                                    this.TargetClosest(true);
                                    if (Main.netMode != 1)
                                    {
                                        if (((this.velocity.X != 0f) || (this.velocity.Y < 0f)) || (this.velocity.Y > 0.3))
                                        {
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                            this.direction = -this.direction;
                                        }
                                        else
                                        {
                                            Rectangle rectangle7 = new Rectangle((int) Main.player[this.target].position.X, (int) Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
                                            Rectangle rectangle8 = new Rectangle(((int) this.position.X) - 100, ((int) this.position.Y) - 100, this.width + 200, this.height + 200);
                                            if (rectangle8.Intersects(rectangle7) || (this.life < this.lifeMax))
                                            {
                                                this.ai[0] = 1f;
                                                this.velocity.Y -= 6f;
                                                this.netUpdate = true;
                                                this.direction = -this.direction;
                                            }
                                        }
                                    }
                                }
                                else if (!Main.player[this.target].dead)
                                {
                                    if (this.collideX)
                                    {
                                        this.direction *= -1;
                                        this.velocity.X = this.oldVelocity.X * -0.5f;
                                        if (((this.direction == -1) && (this.velocity.X > 0f)) && (this.velocity.X < 2f))
                                        {
                                            this.velocity.X = 2f;
                                        }
                                        if (((this.direction == 1) && (this.velocity.X < 0f)) && (this.velocity.X > -2f))
                                        {
                                            this.velocity.X = -2f;
                                        }
                                    }
                                    if (this.collideY)
                                    {
                                        this.velocity.Y = this.oldVelocity.Y * -0.5f;
                                        if ((this.velocity.Y > 0f) && (this.velocity.Y < 1f))
                                        {
                                            this.velocity.Y = 1f;
                                        }
                                        if ((this.velocity.Y < 0f) && (this.velocity.Y > -1f))
                                        {
                                            this.velocity.Y = -1f;
                                        }
                                    }
                                    if ((this.direction == -1) && (this.velocity.X > -3f))
                                    {
                                        this.velocity.X -= 0.1f;
                                        if (this.velocity.X > 3f)
                                        {
                                            this.velocity.X -= 0.1f;
                                        }
                                        else if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X -= 0.05f;
                                        }
                                        if (this.velocity.X < -3f)
                                        {
                                            this.velocity.X = -3f;
                                        }
                                    }
                                    else if ((this.direction == 1) && (this.velocity.X < 3f))
                                    {
                                        this.velocity.X += 0.1f;
                                        if (this.velocity.X < -3f)
                                        {
                                            this.velocity.X += 0.1f;
                                        }
                                        else if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X += 0.05f;
                                        }
                                        if (this.velocity.X > 3f)
                                        {
                                            this.velocity.X = 3f;
                                        }
                                    }
                                    int num284 = ((int) ((this.position.X + (this.width / 2)) / 16f)) + this.direction;
                                    int num285 = (int) ((this.position.Y + this.height) / 16f);
                                    bool flag31 = true;
                                    int num286 = 15;
                                    bool flag32 = false;
                                    for (int num287 = num285; num287 < (num285 + num286); num287++)
                                    {
                                        if (Main.tile[num284, num287] == null)
                                        {
                                            Main.tile[num284, num287] = new Tile();
                                        }
                                        if ((Main.tile[num284, num287].active && Main.tileSolid[Main.tile[num284, num287].type]) || (Main.tile[num284, num287].liquid > 0))
                                        {
                                            if (num287 < (num285 + 5))
                                            {
                                                flag32 = true;
                                            }
                                            flag31 = false;
                                            break;
                                        }
                                    }
                                    if (flag31)
                                    {
                                        this.velocity.Y += 0.1f;
                                    }
                                    else
                                    {
                                        this.velocity.Y -= 0.1f;
                                    }
                                    if (flag32)
                                    {
                                        this.velocity.Y -= 0.2f;
                                    }
                                    if (this.velocity.Y > 3f)
                                    {
                                        this.velocity.Y = 3f;
                                    }
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                }
                                if (this.wet)
                                {
                                    if (this.velocity.Y > 0f)
                                    {
                                        this.velocity.Y *= 0.95f;
                                    }
                                    this.velocity.Y -= 0.5f;
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                    this.TargetClosest(true);
                                }
                                return;
                            }
                            if (this.aiStyle == 0x19)
                            {
                                if (this.ai[3] == 0f)
                                {
                                    this.position.X += 8f;
                                    if ((this.position.Y / 16f) > (Main.maxTilesY - 200))
                                    {
                                        this.ai[3] = 3f;
                                    }
                                    else if ((this.position.Y / 16f) > Main.worldSurface)
                                    {
                                        this.ai[3] = 2f;
                                    }
                                    else
                                    {
                                        this.ai[3] = 1f;
                                    }
                                }
                                if (this.ai[0] != 0f)
                                {
                                    if (this.velocity.Y == 0f)
                                    {
                                        this.ai[2]++;
                                        int num288 = 20;
                                        if (this.ai[1] == 0f)
                                        {
                                            num288 = 12;
                                        }
                                        if (this.ai[2] < num288)
                                        {
                                            this.velocity.X *= 0.9f;
                                            return;
                                        }
                                        this.ai[2] = 0f;
                                        this.TargetClosest(true);
                                        this.spriteDirection = this.direction;
                                        this.ai[1]++;
                                        if (this.ai[1] == 2f)
                                        {
                                            this.velocity.X = this.direction * 2.5f;
                                            this.velocity.Y = -8f;
                                            this.ai[1] = 0f;
                                        }
                                        else
                                        {
                                            this.velocity.X = this.direction * 3.5f;
                                            this.velocity.Y = -4f;
                                        }
                                        this.netUpdate = true;
                                        return;
                                    }
                                    if ((this.direction == 1) && (this.velocity.X < 1f))
                                    {
                                        this.velocity.X += 0.1f;
                                        return;
                                    }
                                    if ((this.direction == -1) && (this.velocity.X > -1f))
                                    {
                                        this.velocity.X -= 0.1f;
                                        return;
                                    }
                                }
                                else
                                {
                                    this.TargetClosest(true);
                                    if (Main.netMode != 1)
                                    {
                                        if (((this.velocity.X != 0f) || (this.velocity.Y < 0f)) || (this.velocity.Y > 0.3))
                                        {
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                        Rectangle rectangle9 = new Rectangle((int) Main.player[this.target].position.X, (int) Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
                                        Rectangle rectangle10 = new Rectangle(((int) this.position.X) - 100, ((int) this.position.Y) - 100, this.width + 200, this.height + 200);
                                        if (rectangle10.Intersects(rectangle9) || (this.life < this.lifeMax))
                                        {
                                            this.ai[0] = 1f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1a)
                            {
                                int num289 = 30;
                                bool flag33 = false;
                                if ((this.velocity.Y == 0f) && (((this.velocity.X > 0f) && (this.direction < 0)) || ((this.velocity.X < 0f) && (this.direction > 0))))
                                {
                                    flag33 = true;
                                    this.ai[3]++;
                                }
                                if (((this.position.X == this.oldPosition.X) || (this.ai[3] >= num289)) || flag33)
                                {
                                    this.ai[3]++;
                                }
                                else if (this.ai[3] > 0f)
                                {
                                    this.ai[3]--;
                                }
                                if (this.ai[3] > (num289 * 10))
                                {
                                    this.ai[3] = 0f;
                                }
                                if (this.justHit)
                                {
                                    this.ai[3] = 0f;
                                }
                                if (this.ai[3] == num289)
                                {
                                    this.netUpdate = true;
                                }
                                if (this.ai[3] < num289)
                                {
                                    this.TargetClosest(true);
                                }
                                else
                                {
                                    if (this.velocity.X == 0f)
                                    {
                                        if (this.velocity.Y == 0f)
                                        {
                                            this.ai[0]++;
                                            if (this.ai[0] >= 2f)
                                            {
                                                this.direction *= -1;
                                                this.spriteDirection = this.direction;
                                                this.ai[0] = 0f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.ai[0] = 0f;
                                    }
                                    this.directionY = -1;
                                    if (this.direction == 0)
                                    {
                                        this.direction = 1;
                                    }
                                }
                                float num290 = 6f;
                                if ((((this.velocity.Y == 0f) || this.wet) || ((this.velocity.X <= 0f) && (this.direction < 0))) || ((this.velocity.X >= 0f) && (this.direction > 0)))
                                {
                                    if ((this.velocity.X < -num290) || (this.velocity.X > num290))
                                    {
                                        if (this.velocity.Y == 0f)
                                        {
                                            this.velocity = (Vector2) (this.velocity * 0.8f);
                                        }
                                    }
                                    else if ((this.velocity.X < num290) && (this.direction == 1))
                                    {
                                        this.velocity.X += 0.07f;
                                        if (this.velocity.X > num290)
                                        {
                                            this.velocity.X = num290;
                                        }
                                    }
                                    else if ((this.velocity.X > -num290) && (this.direction == -1))
                                    {
                                        this.velocity.X -= 0.07f;
                                        if (this.velocity.X < -num290)
                                        {
                                            this.velocity.X = -num290;
                                        }
                                    }
                                }
                                if (this.velocity.Y == 0f)
                                {
                                    int num291 = (int) ((((this.position.X + (this.width / 2)) + (((this.width / 2) + 2) * this.direction)) + (this.velocity.X * 5f)) / 16f);
                                    int num292 = (int) (((this.position.Y + this.height) - 15f) / 16f);
                                    if (Main.tile[num291, num292] == null)
                                    {
                                        Main.tile[num291, num292] = new Tile();
                                    }
                                    if (Main.tile[num291, num292 - 1] == null)
                                    {
                                        Main.tile[num291, num292 - 1] = new Tile();
                                    }
                                    if (Main.tile[num291, num292 - 2] == null)
                                    {
                                        Main.tile[num291, num292 - 2] = new Tile();
                                    }
                                    if (Main.tile[num291, num292 - 3] == null)
                                    {
                                        Main.tile[num291, num292 - 3] = new Tile();
                                    }
                                    if (Main.tile[num291, num292 + 1] == null)
                                    {
                                        Main.tile[num291, num292 + 1] = new Tile();
                                    }
                                    if (Main.tile[num291 + this.direction, num292 - 1] == null)
                                    {
                                        Main.tile[num291 + this.direction, num292 - 1] = new Tile();
                                    }
                                    if (Main.tile[num291 + this.direction, num292 + 1] == null)
                                    {
                                        Main.tile[num291 + this.direction, num292 + 1] = new Tile();
                                    }
                                    if (((this.velocity.X < 0f) && (this.spriteDirection == -1)) || ((this.velocity.X > 0f) && (this.spriteDirection == 1)))
                                    {
                                        if (Main.tile[num291, num292 - 2].active && Main.tileSolid[Main.tile[num291, num292 - 2].type])
                                        {
                                            if (Main.tile[num291, num292 - 3].active && Main.tileSolid[Main.tile[num291, num292 - 3].type])
                                            {
                                                this.velocity.Y = -8.5f;
                                                this.netUpdate = true;
                                                return;
                                            }
                                            this.velocity.Y = -7.5f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                        if (Main.tile[num291, num292 - 1].active && Main.tileSolid[Main.tile[num291, num292 - 1].type])
                                        {
                                            this.velocity.Y = -7f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                        if (Main.tile[num291, num292].active && Main.tileSolid[Main.tile[num291, num292].type])
                                        {
                                            this.velocity.Y = -6f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                        if ((((this.directionY < 0) || (Math.Abs(this.velocity.X) > 3f)) && (!Main.tile[num291, num292 + 1].active || !Main.tileSolid[Main.tile[num291, num292 + 1].type])) && (!Main.tile[num291 + this.direction, num292 + 1].active || !Main.tileSolid[Main.tile[num291 + this.direction, num292 + 1].type]))
                                        {
                                            this.velocity.Y = -8f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1b)
                            {
                                if ((this.position.X < 160f) || (this.position.X > ((Main.maxTilesX - 10) * 0x10)))
                                {
                                    this.active = false;
                                }
                                if (this.localAI[0] == 0f)
                                {
                                    this.localAI[0] = 1f;
                                    Main.wofB = -1;
                                    Main.wofT = -1;
                                }
                                this.ai[1]++;
                                if (this.ai[2] == 0f)
                                {
                                    if (this.life < (this.lifeMax * 0.5))
                                    {
                                        this.ai[1]++;
                                    }
                                    if (this.life < (this.lifeMax * 0.2))
                                    {
                                        this.ai[1]++;
                                    }
                                    if (this.ai[1] > 2700f)
                                    {
                                        this.ai[2] = 1f;
                                    }
                                }
                                if ((this.ai[2] > 0f) && (this.ai[1] > 60f))
                                {
                                    int num293 = 3;
                                    if (this.life < (this.lifeMax * 0.3))
                                    {
                                        num293++;
                                    }
                                    this.ai[2]++;
                                    this.ai[1] = 0f;
                                    if (this.ai[2] > num293)
                                    {
                                        this.ai[2] = 0f;
                                    }
                                    if (Main.netMode != 1)
                                    {
                                        int num294 = NewNPC(((int) this.position.X) + (this.width / 2), (int) ((this.position.Y + (this.height / 2)) + 20f), 0x75, 1);
                                        Main.npc[num294].velocity.X = this.direction * 8;
                                    }
                                }
                                this.localAI[3]++;
                                if (this.localAI[3] >= (600 + Main.rand.Next(0x3e8)))
                                {
                                    this.localAI[3] = -Main.rand.Next(200);
                                    Main.PlaySound(4, (int) this.position.X, (int) this.position.Y, 10);
                                }
                                Main.wof = this.whoAmI;
                                int num295 = (int) (this.position.X / 16f);
                                int num296 = (int) ((this.position.X + this.width) / 16f);
                                int num297 = (int) ((this.position.Y + (this.height / 2)) / 16f);
                                int num298 = 0;
                                int num299 = num297 + 7;
                                while ((num298 < 15) && (num299 > (Main.maxTilesY - 200)))
                                {
                                    num299++;
                                    for (int num300 = num295; num300 <= num296; num300++)
                                    {
                                        try
                                        {
                                            if (WorldGen.SolidTile(num300, num299) || (Main.tile[num300, num299].liquid > 0))
                                            {
                                                num298++;
                                            }
                                        }
                                        catch
                                        {
                                            num298 += 15;
                                        }
                                    }
                                }
                                num299 += 4;
                                if (Main.wofB == -1)
                                {
                                    Main.wofB = num299 * 0x10;
                                }
                                else if (Main.wofB > (num299 * 0x10))
                                {
                                    Main.wofB--;
                                    if (Main.wofB < (num299 * 0x10))
                                    {
                                        Main.wofB = num299 * 0x10;
                                    }
                                }
                                else if (Main.wofB < (num299 * 0x10))
                                {
                                    Main.wofB++;
                                    if (Main.wofB > (num299 * 0x10))
                                    {
                                        Main.wofB = num299 * 0x10;
                                    }
                                }
                                num298 = 0;
                                num299 = num297 - 7;
                                while ((num298 < 15) && (num299 < (Main.maxTilesY - 10)))
                                {
                                    num299--;
                                    for (int num301 = num295; num301 <= num296; num301++)
                                    {
                                        try
                                        {
                                            if (WorldGen.SolidTile(num301, num299) || (Main.tile[num301, num299].liquid > 0))
                                            {
                                                num298++;
                                            }
                                        }
                                        catch
                                        {
                                            num298 += 15;
                                        }
                                    }
                                }
                                num299 -= 4;
                                if (Main.wofT == -1)
                                {
                                    Main.wofT = num299 * 0x10;
                                }
                                else if (Main.wofT > (num299 * 0x10))
                                {
                                    Main.wofT--;
                                    if (Main.wofT < (num299 * 0x10))
                                    {
                                        Main.wofT = num299 * 0x10;
                                    }
                                }
                                else if (Main.wofT < (num299 * 0x10))
                                {
                                    Main.wofT++;
                                    if (Main.wofT > (num299 * 0x10))
                                    {
                                        Main.wofT = num299 * 0x10;
                                    }
                                }
                                float num302 = ((Main.wofB + Main.wofT) / 2) - (this.height / 2);
                                if (this.position.Y > (num302 + 1f))
                                {
                                    this.velocity.Y = -1f;
                                }
                                else if (this.position.Y < (num302 - 1f))
                                {
                                    this.velocity.Y = 1f;
                                }
                                this.velocity.Y = 0f;
                                this.position.Y = num302;
                                float num303 = 1.5f;
                                if (this.life < (this.lifeMax * 0.75))
                                {
                                    num303 += 0.25f;
                                }
                                if (this.life < (this.lifeMax * 0.5))
                                {
                                    num303 += 0.4f;
                                }
                                if (this.life < (this.lifeMax * 0.25))
                                {
                                    num303 += 0.5f;
                                }
                                if (this.life < (this.lifeMax * 0.1))
                                {
                                    num303 += 0.6f;
                                }
                                if (this.velocity.X == 0f)
                                {
                                    this.TargetClosest(true);
                                    this.velocity.X = this.direction;
                                }
                                if (this.velocity.X < 0f)
                                {
                                    this.velocity.X = -num303;
                                    this.direction = -1;
                                }
                                else
                                {
                                    this.velocity.X = num303;
                                    this.direction = 1;
                                }
                                this.spriteDirection = this.direction;
                                Vector2 vector29 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num304 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector29.X;
                                float num305 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector29.Y;
                                float num306 = (float) Math.Sqrt((double) ((num304 * num304) + (num305 * num305)));
                                num304 *= num306;
                                num305 *= num306;
                                if (this.direction > 0)
                                {
                                    if ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) > (this.position.X + (this.width / 2)))
                                    {
                                        this.rotation = ((float) Math.Atan2((double) -num305, (double) -num304)) + 3.14f;
                                    }
                                    else
                                    {
                                        this.rotation = 0f;
                                    }
                                }
                                else if ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) < (this.position.X + (this.width / 2)))
                                {
                                    this.rotation = ((float) Math.Atan2((double) num305, (double) num304)) + 3.14f;
                                }
                                else
                                {
                                    this.rotation = 0f;
                                }
                                if ((this.localAI[0] == 1f) && (Main.netMode != 1))
                                {
                                    this.localAI[0] = 2f;
                                    num302 = (Main.wofB + Main.wofT) / 2;
                                    num302 = (num302 + Main.wofT) / 2f;
                                    int num307 = NewNPC((int) this.position.X, (int) num302, 0x72, this.whoAmI);
                                    Main.npc[num307].ai[0] = 1f;
                                    num302 = (Main.wofB + Main.wofT) / 2;
                                    num302 = (num302 + Main.wofB) / 2f;
                                    num307 = NewNPC((int) this.position.X, (int) num302, 0x72, this.whoAmI);
                                    Main.npc[num307].ai[0] = -1f;
                                    num302 = (Main.wofB + Main.wofT) / 2;
                                    num302 = (num302 + Main.wofB) / 2f;
                                    for (int num308 = 0; num308 < 11; num308++)
                                    {
                                        num307 = NewNPC((int) this.position.X, (int) num302, 0x73, this.whoAmI);
                                        Main.npc[num307].ai[0] = (num308 * 0.1f) - 0.05f;
                                    }
                                    return;
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1c)
                            {
                                if (Main.wof < 0)
                                {
                                    this.active = false;
                                    return;
                                }
                                this.realLife = Main.wof;
                                this.TargetClosest(true);
                                this.position.X = Main.npc[Main.wof].position.X;
                                this.direction = Main.npc[Main.wof].direction;
                                this.spriteDirection = this.direction;
                                float num309 = (Main.wofB + Main.wofT) / 2;
                                if (this.ai[0] > 0f)
                                {
                                    num309 = (num309 + Main.wofT) / 2f;
                                }
                                else
                                {
                                    num309 = (num309 + Main.wofB) / 2f;
                                }
                                num309 -= this.height / 2;
                                if (this.position.Y > (num309 + 1f))
                                {
                                    this.velocity.Y = -1f;
                                }
                                else if (this.position.Y < (num309 - 1f))
                                {
                                    this.velocity.Y = 1f;
                                }
                                else
                                {
                                    this.velocity.Y = 0f;
                                    this.position.Y = num309;
                                }
                                if (this.velocity.Y > 5f)
                                {
                                    this.velocity.Y = 5f;
                                }
                                if (this.velocity.Y < -5f)
                                {
                                    this.velocity.Y = -5f;
                                }
                                Vector2 vector30 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num310 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector30.X;
                                float num311 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector30.Y;
                                float num312 = (float) Math.Sqrt((double) ((num310 * num310) + (num311 * num311)));
                                num310 *= num312;
                                num311 *= num312;
                                bool flag34 = true;
                                if (this.direction > 0)
                                {
                                    if ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) > (this.position.X + (this.width / 2)))
                                    {
                                        this.rotation = ((float) Math.Atan2((double) -num311, (double) -num310)) + 3.14f;
                                    }
                                    else
                                    {
                                        this.rotation = 0f;
                                        flag34 = false;
                                    }
                                }
                                else if ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) < (this.position.X + (this.width / 2)))
                                {
                                    this.rotation = ((float) Math.Atan2((double) num311, (double) num310)) + 3.14f;
                                }
                                else
                                {
                                    this.rotation = 0f;
                                    flag34 = false;
                                }
                                if (Main.netMode != 1)
                                {
                                    int num313 = 4;
                                    this.localAI[1]++;
                                    if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.75))
                                    {
                                        this.localAI[1]++;
                                        num313++;
                                    }
                                    if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.5))
                                    {
                                        this.localAI[1]++;
                                        num313++;
                                    }
                                    if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.25))
                                    {
                                        this.localAI[1]++;
                                        num313 += 2;
                                    }
                                    if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.1))
                                    {
                                        this.localAI[1] += 2f;
                                        num313 += 3;
                                    }
                                    if (this.localAI[2] != 0f)
                                    {
                                        if ((this.localAI[1] > 45f) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                        {
                                            this.localAI[1] = 0f;
                                            this.localAI[2]++;
                                            if (this.localAI[2] >= num313)
                                            {
                                                this.localAI[2] = 0f;
                                            }
                                            if (flag34)
                                            {
                                                float num314 = 9f;
                                                int num315 = 11;
                                                int num316 = 0x53;
                                                if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.5))
                                                {
                                                    num315++;
                                                    num314++;
                                                }
                                                if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.25))
                                                {
                                                    num315++;
                                                    num314++;
                                                }
                                                if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.1))
                                                {
                                                    num315 += 2;
                                                    num314 += 2f;
                                                }
                                                vector30 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                num310 = (Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector30.X;
                                                num311 = (Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector30.Y;
                                                num312 = (float) Math.Sqrt((double) ((num310 * num310) + (num311 * num311)));
                                                num312 = num314 / num312;
                                                num310 *= num312;
                                                num311 *= num312;
                                                vector30.X += num310;
                                                vector30.Y += num311;
                                                Projectile.NewProjectile(vector30.X, vector30.Y, num310, num311, num316, num315, 0f, Main.myPlayer);
                                                return;
                                            }
                                        }
                                    }
                                    else if (this.localAI[1] > 600f)
                                    {
                                        this.localAI[2] = 1f;
                                        this.localAI[1] = 0f;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1d)
                            {
                                if (this.justHit)
                                {
                                    this.ai[1] = 10f;
                                }
                                if (Main.wof < 0)
                                {
                                    this.active = false;
                                    return;
                                }
                                this.TargetClosest(true);
                                float num317 = 0.1f;
                                float num318 = 300f;
                                if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.25))
                                {
                                    this.damage = 0x4b;
                                    this.defense = 40;
                                    num318 = 900f;
                                }
                                else if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.5))
                                {
                                    this.damage = 60;
                                    this.defense = 30;
                                    num318 = 700f;
                                }
                                else if (Main.npc[Main.wof].life < (Main.npc[Main.wof].lifeMax * 0.75))
                                {
                                    this.damage = 0x2d;
                                    this.defense = 20;
                                    num318 = 500f;
                                }
                                float num319 = Main.npc[Main.wof].position.X + (Main.npc[Main.wof].width / 2);
                                float num320 = Main.npc[Main.wof].position.Y;
                                float num321 = Main.wofB - Main.wofT;
                                num320 = Main.wofT + (num321 * this.ai[0]);
                                this.ai[2]++;
                                if (this.ai[2] > 100f)
                                {
                                    num318 = (int) (num318 * 1.3f);
                                    if (this.ai[2] > 200f)
                                    {
                                        this.ai[2] = 0f;
                                    }
                                }
                                Vector2 vector31 = new Vector2(num319, num320);
                                float num322 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - (this.width / 2)) - vector31.X;
                                float num323 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - (this.height / 2)) - vector31.Y;
                                float num324 = (float) Math.Sqrt((double) ((num322 * num322) + (num323 * num323)));
                                if (this.ai[1] == 0f)
                                {
                                    if (num324 > num318)
                                    {
                                        num324 = num318 / num324;
                                        num322 *= num324;
                                        num323 *= num324;
                                    }
                                    if (this.position.X < (num319 + num322))
                                    {
                                        this.velocity.X += num317;
                                        if ((this.velocity.X < 0f) && (num322 > 0f))
                                        {
                                            this.velocity.X += num317 * 2.5f;
                                        }
                                    }
                                    else if (this.position.X > (num319 + num322))
                                    {
                                        this.velocity.X -= num317;
                                        if ((this.velocity.X > 0f) && (num322 < 0f))
                                        {
                                            this.velocity.X -= num317 * 2.5f;
                                        }
                                    }
                                    if (this.position.Y < (num320 + num323))
                                    {
                                        this.velocity.Y += num317;
                                        if ((this.velocity.Y < 0f) && (num323 > 0f))
                                        {
                                            this.velocity.Y += num317 * 2.5f;
                                        }
                                    }
                                    else if (this.position.Y > (num320 + num323))
                                    {
                                        this.velocity.Y -= num317;
                                        if ((this.velocity.Y > 0f) && (num323 < 0f))
                                        {
                                            this.velocity.Y -= num317 * 2.5f;
                                        }
                                    }
                                    if (this.velocity.X > 4f)
                                    {
                                        this.velocity.X = 4f;
                                    }
                                    if (this.velocity.X < -4f)
                                    {
                                        this.velocity.X = -4f;
                                    }
                                    if (this.velocity.Y > 4f)
                                    {
                                        this.velocity.Y = 4f;
                                    }
                                    if (this.velocity.Y < -4f)
                                    {
                                        this.velocity.Y = -4f;
                                    }
                                }
                                else if (this.ai[1] > 0f)
                                {
                                    this.ai[1]--;
                                }
                                else
                                {
                                    this.ai[1] = 0f;
                                }
                                if (num322 > 0f)
                                {
                                    this.spriteDirection = 1;
                                    this.rotation = (float) Math.Atan2((double) num323, (double) num322);
                                }
                                if (num322 < 0f)
                                {
                                    this.spriteDirection = -1;
                                    this.rotation = ((float) Math.Atan2((double) num323, (double) num322)) + 3.14f;
                                }
                                Lighting.addLight((((int) this.position.X) + (this.width / 2)) / 0x10, (((int) this.position.Y) + (this.height / 2)) / 0x10, 0.3f, 0.2f, 0.1f);
                                return;
                            }
                            if (this.aiStyle == 30)
                            {
                                if (((this.target < 0) || (this.target == 0xff)) || (Main.player[this.target].dead || !Main.player[this.target].active))
                                {
                                    this.TargetClosest(true);
                                }
                                bool flag35 = Main.player[this.target].dead;
                                float num325 = ((this.position.X + (this.width / 2)) - Main.player[this.target].position.X) - (Main.player[this.target].width / 2);
                                float num326 = (((this.position.Y + this.height) - 59f) - Main.player[this.target].position.Y) - (Main.player[this.target].height / 2);
                                float num327 = ((float) Math.Atan2((double) num326, (double) num325)) + 1.57f;
                                if (num327 < 0f)
                                {
                                    num327 += 6.283f;
                                }
                                else if (num327 > 6.283)
                                {
                                    num327 -= 6.283f;
                                }
                                float num328 = 0.1f;
                                if (this.rotation < num327)
                                {
                                    if ((num327 - this.rotation) > 3.1415)
                                    {
                                        this.rotation -= num328;
                                    }
                                    else
                                    {
                                        this.rotation += num328;
                                    }
                                }
                                else if (this.rotation > num327)
                                {
                                    if ((this.rotation - num327) > 3.1415)
                                    {
                                        this.rotation += num328;
                                    }
                                    else
                                    {
                                        this.rotation -= num328;
                                    }
                                }
                                if ((this.rotation > (num327 - num328)) && (this.rotation < (num327 + num328)))
                                {
                                    this.rotation = num327;
                                }
                                if (this.rotation < 0f)
                                {
                                    this.rotation += 6.283f;
                                }
                                else if (this.rotation > 6.283)
                                {
                                    this.rotation -= 6.283f;
                                }
                                if ((this.rotation > (num327 - num328)) && (this.rotation < (num327 + num328)))
                                {
                                    this.rotation = num327;
                                }
                                if (Main.rand.Next(5) == 0)
                                {
                                    color = new Color();
                                    int num329 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, color, 1f);
                                    Main.dust[num329].velocity.X *= 0.5f;
                                    Main.dust[num329].velocity.Y *= 0.1f;
                                }
                                if (!Main.dayTime && !flag35)
                                {
                                    if (this.ai[0] != 0f)
                                    {
                                        if ((this.ai[0] != 1f) && (this.ai[0] != 2f))
                                        {
                                            this.damage = (int) (this.defDamage * 1.5);
                                            this.defense = this.defDefense + 15;
                                            this.soundHit = 4;
                                            if (this.ai[1] != 0f)
                                            {
                                                int num354 = 1;
                                                if ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + Main.player[this.target].width))
                                                {
                                                    num354 = -1;
                                                }
                                                float num355 = 8f;
                                                float num356 = 0.2f;
                                                Vector2 vector35 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num357 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) + (num354 * 340)) - vector35.X;
                                                float num358 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector35.Y;
                                                float num359 = (float) Math.Sqrt((double) ((num357 * num357) + (num358 * num358)));
                                                num359 = num355 / num359;
                                                num357 *= num359;
                                                num358 *= num359;
                                                if (this.velocity.X < num357)
                                                {
                                                    this.velocity.X += num356;
                                                    if ((this.velocity.X < 0f) && (num357 > 0f))
                                                    {
                                                        this.velocity.X += num356;
                                                    }
                                                }
                                                else if (this.velocity.X > num357)
                                                {
                                                    this.velocity.X -= num356;
                                                    if ((this.velocity.X > 0f) && (num357 < 0f))
                                                    {
                                                        this.velocity.X -= num356;
                                                    }
                                                }
                                                if (this.velocity.Y < num358)
                                                {
                                                    this.velocity.Y += num356;
                                                    if ((this.velocity.Y < 0f) && (num358 > 0f))
                                                    {
                                                        this.velocity.Y += num356;
                                                    }
                                                }
                                                else if (this.velocity.Y > num358)
                                                {
                                                    this.velocity.Y -= num356;
                                                    if ((this.velocity.Y > 0f) && (num358 < 0f))
                                                    {
                                                        this.velocity.Y -= num356;
                                                    }
                                                }
                                                vector35 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                num357 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector35.X;
                                                num358 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector35.Y;
                                                this.rotation = ((float) Math.Atan2((double) num358, (double) num357)) - 1.57f;
                                                if (Main.netMode != 1)
                                                {
                                                    this.localAI[1]++;
                                                    if (this.life < (this.lifeMax * 0.75))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.5))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.25))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.1))
                                                    {
                                                        this.localAI[1] += 2f;
                                                    }
                                                    if ((this.localAI[1] > 45f) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                                    {
                                                        this.localAI[1] = 0f;
                                                        float num360 = 9f;
                                                        int num361 = 20;
                                                        int num362 = 100;
                                                        num359 = (float) Math.Sqrt((double) ((num357 * num357) + (num358 * num358)));
                                                        num359 = num360 / num359;
                                                        num357 *= num359;
                                                        num358 *= num359;
                                                        vector35.X += num357 * 15f;
                                                        vector35.Y += num358 * 15f;
                                                        Projectile.NewProjectile(vector35.X, vector35.Y, num357, num358, num362, num361, 0f, Main.myPlayer);
                                                    }
                                                }
                                                this.ai[2]++;
                                                if (this.ai[2] >= 200f)
                                                {
                                                    this.ai[1] = 0f;
                                                    this.ai[2] = 0f;
                                                    this.ai[3] = 0f;
                                                    this.TargetClosest(true);
                                                    this.netUpdate = true;
                                                    return;
                                                }
                                            }
                                            else
                                            {
                                                float num346 = 8f;
                                                float num347 = 0.15f;
                                                Vector2 vector34 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num348 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector34.X;
                                                float num349 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 300f) - vector34.Y;
                                                float num350 = (float) Math.Sqrt((double) ((num348 * num348) + (num349 * num349)));
                                                num350 = num346 / num350;
                                                num348 *= num350;
                                                num349 *= num350;
                                                if (this.velocity.X < num348)
                                                {
                                                    this.velocity.X += num347;
                                                    if ((this.velocity.X < 0f) && (num348 > 0f))
                                                    {
                                                        this.velocity.X += num347;
                                                    }
                                                }
                                                else if (this.velocity.X > num348)
                                                {
                                                    this.velocity.X -= num347;
                                                    if ((this.velocity.X > 0f) && (num348 < 0f))
                                                    {
                                                        this.velocity.X -= num347;
                                                    }
                                                }
                                                if (this.velocity.Y < num349)
                                                {
                                                    this.velocity.Y += num347;
                                                    if ((this.velocity.Y < 0f) && (num349 > 0f))
                                                    {
                                                        this.velocity.Y += num347;
                                                    }
                                                }
                                                else if (this.velocity.Y > num349)
                                                {
                                                    this.velocity.Y -= num347;
                                                    if ((this.velocity.Y > 0f) && (num349 < 0f))
                                                    {
                                                        this.velocity.Y -= num347;
                                                    }
                                                }
                                                this.ai[2]++;
                                                if (this.ai[2] >= 300f)
                                                {
                                                    this.ai[1] = 1f;
                                                    this.ai[2] = 0f;
                                                    this.ai[3] = 0f;
                                                    this.TargetClosest(true);
                                                    this.netUpdate = true;
                                                }
                                                vector34 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                num348 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector34.X;
                                                num349 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector34.Y;
                                                this.rotation = ((float) Math.Atan2((double) num349, (double) num348)) - 1.57f;
                                                if (Main.netMode != 1)
                                                {
                                                    this.localAI[1]++;
                                                    if (this.life < (this.lifeMax * 0.75))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.5))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.25))
                                                    {
                                                        this.localAI[1]++;
                                                    }
                                                    if (this.life < (this.lifeMax * 0.1))
                                                    {
                                                        this.localAI[1] += 2f;
                                                    }
                                                    if ((this.localAI[1] > 140f) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                                    {
                                                        this.localAI[1] = 0f;
                                                        float num351 = 9f;
                                                        int num352 = 0x19;
                                                        int num353 = 100;
                                                        num350 = (float) Math.Sqrt((double) ((num348 * num348) + (num349 * num349)));
                                                        num350 = num351 / num350;
                                                        num348 *= num350;
                                                        num349 *= num350;
                                                        vector34.X += num348 * 15f;
                                                        vector34.Y += num349 * 15f;
                                                        Projectile.NewProjectile(vector34.X, vector34.Y, num348, num349, num353, num352, 0f, Main.myPlayer);
                                                        return;
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (this.ai[0] == 1f)
                                            {
                                                this.ai[2] += 0.005f;
                                                if (this.ai[2] > 0.5)
                                                {
                                                    this.ai[2] = 0.5f;
                                                }
                                            }
                                            else
                                            {
                                                this.ai[2] -= 0.005f;
                                                if (this.ai[2] < 0f)
                                                {
                                                    this.ai[2] = 0f;
                                                }
                                            }
                                            this.rotation += this.ai[2];
                                            this.ai[1]++;
                                            if (this.ai[1] == 100f)
                                            {
                                                this.ai[0]++;
                                                this.ai[1] = 0f;
                                                if (this.ai[0] == 3f)
                                                {
                                                    this.ai[2] = 0f;
                                                }
                                                else
                                                {
                                                    Main.PlaySound(3, (int) this.position.X, (int) this.position.Y, 1);
                                                    for (int num344 = 0; num344 < 2; num344++)
                                                    {
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 0x8f, 1f);
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 7, 1f);
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 6, 1f);
                                                    }
                                                    for (int num345 = 0; num345 < 20; num345++)
                                                    {
                                                        color = new Color();
                                                        Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, color, 1f);
                                                    }
                                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                                }
                                            }
                                            Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, new Color(), 1f);
                                            this.velocity.X *= 0.98f;
                                            this.velocity.Y *= 0.98f;
                                            if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                            {
                                                this.velocity.X = 0f;
                                            }
                                            if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                            {
                                                this.velocity.Y = 0f;
                                                return;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (this.ai[1] == 0f)
                                        {
                                            float num330 = 7f;
                                            float num331 = 0.1f;
                                            int num332 = 1;
                                            if ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + Main.player[this.target].width))
                                            {
                                                num332 = -1;
                                            }
                                            Vector2 vector32 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num333 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) + (num332 * 300)) - vector32.X;
                                            float num334 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 300f) - vector32.Y;
                                            float num335 = (float) Math.Sqrt((double) ((num333 * num333) + (num334 * num334)));
                                            float num336 = num335;
                                            num335 = num330 / num335;
                                            num333 *= num335;
                                            num334 *= num335;
                                            if (this.velocity.X < num333)
                                            {
                                                this.velocity.X += num331;
                                                if ((this.velocity.X < 0f) && (num333 > 0f))
                                                {
                                                    this.velocity.X += num331;
                                                }
                                            }
                                            else if (this.velocity.X > num333)
                                            {
                                                this.velocity.X -= num331;
                                                if ((this.velocity.X > 0f) && (num333 < 0f))
                                                {
                                                    this.velocity.X -= num331;
                                                }
                                            }
                                            if (this.velocity.Y < num334)
                                            {
                                                this.velocity.Y += num331;
                                                if ((this.velocity.Y < 0f) && (num334 > 0f))
                                                {
                                                    this.velocity.Y += num331;
                                                }
                                            }
                                            else if (this.velocity.Y > num334)
                                            {
                                                this.velocity.Y -= num331;
                                                if ((this.velocity.Y > 0f) && (num334 < 0f))
                                                {
                                                    this.velocity.Y -= num331;
                                                }
                                            }
                                            this.ai[2]++;
                                            if (this.ai[2] >= 600f)
                                            {
                                                this.ai[1] = 1f;
                                                this.ai[2] = 0f;
                                                this.ai[3] = 0f;
                                                this.target = 0xff;
                                                this.netUpdate = true;
                                            }
                                            else if (((this.position.Y + this.height) < Main.player[this.target].position.Y) && (num336 < 400f))
                                            {
                                                if (!Main.player[this.target].dead)
                                                {
                                                    this.ai[3]++;
                                                }
                                                if (this.ai[3] >= 60f)
                                                {
                                                    this.ai[3] = 0f;
                                                    vector32 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                    num333 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector32.X;
                                                    num334 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector32.Y;
                                                    if (Main.netMode != 1)
                                                    {
                                                        float num337 = 9f;
                                                        int num338 = 20;
                                                        int num339 = 0x53;
                                                        num335 = (float) Math.Sqrt((double) ((num333 * num333) + (num334 * num334)));
                                                        num335 = num337 / num335;
                                                        num333 *= num335;
                                                        num334 *= num335;
                                                        num333 += Main.rand.Next(-40, 0x29) * 0.08f;
                                                        num334 += Main.rand.Next(-40, 0x29) * 0.08f;
                                                        vector32.X += num333 * 15f;
                                                        vector32.Y += num334 * 15f;
                                                        Projectile.NewProjectile(vector32.X, vector32.Y, num333, num334, num339, num338, 0f, Main.myPlayer);
                                                    }
                                                }
                                            }
                                        }
                                        else if (this.ai[1] == 1f)
                                        {
                                            this.rotation = num327;
                                            float num340 = 12f;
                                            Vector2 vector33 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num341 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector33.X;
                                            float num342 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector33.Y;
                                            float num343 = (float) Math.Sqrt((double) ((num341 * num341) + (num342 * num342)));
                                            num343 = num340 / num343;
                                            this.velocity.X = num341 * num343;
                                            this.velocity.Y = num342 * num343;
                                            this.ai[1] = 2f;
                                        }
                                        else if (this.ai[1] == 2f)
                                        {
                                            this.ai[2]++;
                                            if (this.ai[2] >= 25f)
                                            {
                                                this.velocity.X *= 0.96f;
                                                this.velocity.Y *= 0.96f;
                                                if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                                {
                                                    this.velocity.X = 0f;
                                                }
                                                if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                                {
                                                    this.velocity.Y = 0f;
                                                }
                                            }
                                            else
                                            {
                                                this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                                            }
                                            if (this.ai[2] >= 70f)
                                            {
                                                this.ai[3]++;
                                                this.ai[2] = 0f;
                                                this.target = 0xff;
                                                this.rotation = num327;
                                                if (this.ai[3] >= 4f)
                                                {
                                                    this.ai[1] = 0f;
                                                    this.ai[3] = 0f;
                                                }
                                                else
                                                {
                                                    this.ai[1] = 1f;
                                                }
                                            }
                                        }
                                        if (this.life < (this.lifeMax * 0.5))
                                        {
                                            this.ai[0] = 1f;
                                            this.ai[1] = 0f;
                                            this.ai[2] = 0f;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    this.velocity.Y -= 0.04f;
                                    if (this.timeLeft > 10)
                                    {
                                        this.timeLeft = 10;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x1f)
                            {
                                if (((this.target < 0) || (this.target == 0xff)) || (Main.player[this.target].dead || !Main.player[this.target].active))
                                {
                                    this.TargetClosest(true);
                                }
                                bool flag36 = Main.player[this.target].dead;
                                float num363 = ((this.position.X + (this.width / 2)) - Main.player[this.target].position.X) - (Main.player[this.target].width / 2);
                                float num364 = (((this.position.Y + this.height) - 59f) - Main.player[this.target].position.Y) - (Main.player[this.target].height / 2);
                                float num365 = ((float) Math.Atan2((double) num364, (double) num363)) + 1.57f;
                                if (num365 < 0f)
                                {
                                    num365 += 6.283f;
                                }
                                else if (num365 > 6.283)
                                {
                                    num365 -= 6.283f;
                                }
                                float num366 = 0.15f;
                                if (this.rotation < num365)
                                {
                                    if ((num365 - this.rotation) > 3.1415)
                                    {
                                        this.rotation -= num366;
                                    }
                                    else
                                    {
                                        this.rotation += num366;
                                    }
                                }
                                else if (this.rotation > num365)
                                {
                                    if ((this.rotation - num365) > 3.1415)
                                    {
                                        this.rotation += num366;
                                    }
                                    else
                                    {
                                        this.rotation -= num366;
                                    }
                                }
                                if ((this.rotation > (num365 - num366)) && (this.rotation < (num365 + num366)))
                                {
                                    this.rotation = num365;
                                }
                                if (this.rotation < 0f)
                                {
                                    this.rotation += 6.283f;
                                }
                                else if (this.rotation > 6.283)
                                {
                                    this.rotation -= 6.283f;
                                }
                                if ((this.rotation > (num365 - num366)) && (this.rotation < (num365 + num366)))
                                {
                                    this.rotation = num365;
                                }
                                if (Main.rand.Next(5) == 0)
                                {
                                    color = new Color();
                                    int num367 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + (this.height * 0.25f)), this.width, (int) (this.height * 0.5f), 5, this.velocity.X, 2f, 0, color, 1f);
                                    Main.dust[num367].velocity.X *= 0.5f;
                                    Main.dust[num367].velocity.Y *= 0.1f;
                                }
                                if (!Main.dayTime && !flag36)
                                {
                                    if (this.ai[0] != 0f)
                                    {
                                        if ((this.ai[0] != 1f) && (this.ai[0] != 2f))
                                        {
                                            this.soundHit = 4;
                                            this.damage = (int) (this.defDamage * 1.5);
                                            this.defense = this.defDefense + 0x19;
                                            if (this.ai[1] != 0f)
                                            {
                                                if (this.ai[1] == 1f)
                                                {
                                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                                    this.rotation = num365;
                                                    float num392 = 14f;
                                                    Vector2 vector39 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                    float num393 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector39.X;
                                                    float num394 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector39.Y;
                                                    float num395 = (float) Math.Sqrt((double) ((num393 * num393) + (num394 * num394)));
                                                    num395 = num392 / num395;
                                                    this.velocity.X = num393 * num395;
                                                    this.velocity.Y = num394 * num395;
                                                    this.ai[1] = 2f;
                                                    return;
                                                }
                                                if (this.ai[1] == 2f)
                                                {
                                                    this.ai[2]++;
                                                    if (this.ai[2] >= 50f)
                                                    {
                                                        this.velocity.X *= 0.93f;
                                                        this.velocity.Y *= 0.93f;
                                                        if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                                        {
                                                            this.velocity.X = 0f;
                                                        }
                                                        if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                                        {
                                                            this.velocity.Y = 0f;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                                                    }
                                                    if (this.ai[2] >= 80f)
                                                    {
                                                        this.ai[3]++;
                                                        this.ai[2] = 0f;
                                                        this.target = 0xff;
                                                        this.rotation = num365;
                                                        if (this.ai[3] >= 6f)
                                                        {
                                                            this.ai[1] = 0f;
                                                            this.ai[3] = 0f;
                                                            return;
                                                        }
                                                        this.ai[1] = 1f;
                                                        return;
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                float num383 = 4f;
                                                float num384 = 0.1f;
                                                int num385 = 1;
                                                if ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + Main.player[this.target].width))
                                                {
                                                    num385 = -1;
                                                }
                                                Vector2 vector38 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num386 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) + (num385 * 180)) - vector38.X;
                                                float num387 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector38.Y;
                                                float num388 = (float) Math.Sqrt((double) ((num386 * num386) + (num387 * num387)));
                                                num388 = num383 / num388;
                                                num386 *= num388;
                                                num387 *= num388;
                                                if (this.velocity.X < num386)
                                                {
                                                    this.velocity.X += num384;
                                                    if ((this.velocity.X < 0f) && (num386 > 0f))
                                                    {
                                                        this.velocity.X += num384;
                                                    }
                                                }
                                                else if (this.velocity.X > num386)
                                                {
                                                    this.velocity.X -= num384;
                                                    if ((this.velocity.X > 0f) && (num386 < 0f))
                                                    {
                                                        this.velocity.X -= num384;
                                                    }
                                                }
                                                if (this.velocity.Y < num387)
                                                {
                                                    this.velocity.Y += num384;
                                                    if ((this.velocity.Y < 0f) && (num387 > 0f))
                                                    {
                                                        this.velocity.Y += num384;
                                                    }
                                                }
                                                else if (this.velocity.Y > num387)
                                                {
                                                    this.velocity.Y -= num384;
                                                    if ((this.velocity.Y > 0f) && (num387 < 0f))
                                                    {
                                                        this.velocity.Y -= num384;
                                                    }
                                                }
                                                this.ai[2]++;
                                                if (this.ai[2] >= 400f)
                                                {
                                                    this.ai[1] = 1f;
                                                    this.ai[2] = 0f;
                                                    this.ai[3] = 0f;
                                                    this.target = 0xff;
                                                    this.netUpdate = true;
                                                }
                                                if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                                {
                                                    this.localAI[2]++;
                                                    if (this.localAI[2] > 22f)
                                                    {
                                                        this.localAI[2] = 0f;
                                                        Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 0x22);
                                                    }
                                                    if (Main.netMode != 1)
                                                    {
                                                        this.localAI[1]++;
                                                        if (this.life < (this.lifeMax * 0.75))
                                                        {
                                                            this.localAI[1]++;
                                                        }
                                                        if (this.life < (this.lifeMax * 0.5))
                                                        {
                                                            this.localAI[1]++;
                                                        }
                                                        if (this.life < (this.lifeMax * 0.25))
                                                        {
                                                            this.localAI[1]++;
                                                        }
                                                        if (this.life < (this.lifeMax * 0.1))
                                                        {
                                                            this.localAI[1] += 2f;
                                                        }
                                                        if (this.localAI[1] > 8f)
                                                        {
                                                            this.localAI[1] = 0f;
                                                            float num389 = 6f;
                                                            int num390 = 30;
                                                            int num391 = 0x65;
                                                            vector38 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                            num386 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector38.X;
                                                            num387 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector38.Y;
                                                            num388 = (float) Math.Sqrt((double) ((num386 * num386) + (num387 * num387)));
                                                            num388 = num389 / num388;
                                                            num386 *= num388;
                                                            num387 *= num388;
                                                            num387 += Main.rand.Next(-40, 0x29) * 0.01f;
                                                            num386 += Main.rand.Next(-40, 0x29) * 0.01f;
                                                            num387 += this.velocity.Y * 0.5f;
                                                            num386 += this.velocity.X * 0.5f;
                                                            vector38.X -= num386 * 1f;
                                                            vector38.Y -= num387 * 1f;
                                                            Projectile.NewProjectile(vector38.X, vector38.Y, num386, num387, num391, num390, 0f, Main.myPlayer);
                                                            return;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (this.ai[0] == 1f)
                                            {
                                                this.ai[2] += 0.005f;
                                                if (this.ai[2] > 0.5)
                                                {
                                                    this.ai[2] = 0.5f;
                                                }
                                            }
                                            else
                                            {
                                                this.ai[2] -= 0.005f;
                                                if (this.ai[2] < 0f)
                                                {
                                                    this.ai[2] = 0f;
                                                }
                                            }
                                            this.rotation += this.ai[2];
                                            this.ai[1]++;
                                            if (this.ai[1] == 100f)
                                            {
                                                this.ai[0]++;
                                                this.ai[1] = 0f;
                                                if (this.ai[0] == 3f)
                                                {
                                                    this.ai[2] = 0f;
                                                }
                                                else
                                                {
                                                    Main.PlaySound(3, (int) this.position.X, (int) this.position.Y, 1);
                                                    for (int num381 = 0; num381 < 2; num381++)
                                                    {
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 0x90, 1f);
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 7, 1f);
                                                        Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 6, 1f);
                                                    }
                                                    for (int num382 = 0; num382 < 20; num382++)
                                                    {
                                                        color = new Color();
                                                        Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, color, 1f);
                                                    }
                                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                                }
                                            }
                                            Dust.NewDust(this.position, this.width, this.height, 5, Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f, 0, new Color(), 1f);
                                            this.velocity.X *= 0.98f;
                                            this.velocity.Y *= 0.98f;
                                            if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                            {
                                                this.velocity.X = 0f;
                                            }
                                            if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                            {
                                                this.velocity.Y = 0f;
                                                return;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (this.ai[1] == 0f)
                                        {
                                            this.TargetClosest(true);
                                            float num368 = 12f;
                                            float num369 = 0.4f;
                                            int num370 = 1;
                                            if ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + Main.player[this.target].width))
                                            {
                                                num370 = -1;
                                            }
                                            Vector2 vector36 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num371 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) + (num370 * 400)) - vector36.X;
                                            float num372 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector36.Y;
                                            float num373 = (float) Math.Sqrt((double) ((num371 * num371) + (num372 * num372)));
                                            num373 = num368 / num373;
                                            num371 *= num373;
                                            num372 *= num373;
                                            if (this.velocity.X < num371)
                                            {
                                                this.velocity.X += num369;
                                                if ((this.velocity.X < 0f) && (num371 > 0f))
                                                {
                                                    this.velocity.X += num369;
                                                }
                                            }
                                            else if (this.velocity.X > num371)
                                            {
                                                this.velocity.X -= num369;
                                                if ((this.velocity.X > 0f) && (num371 < 0f))
                                                {
                                                    this.velocity.X -= num369;
                                                }
                                            }
                                            if (this.velocity.Y < num372)
                                            {
                                                this.velocity.Y += num369;
                                                if ((this.velocity.Y < 0f) && (num372 > 0f))
                                                {
                                                    this.velocity.Y += num369;
                                                }
                                            }
                                            else if (this.velocity.Y > num372)
                                            {
                                                this.velocity.Y -= num369;
                                                if ((this.velocity.Y > 0f) && (num372 < 0f))
                                                {
                                                    this.velocity.Y -= num369;
                                                }
                                            }
                                            this.ai[2]++;
                                            if (this.ai[2] >= 600f)
                                            {
                                                this.ai[1] = 1f;
                                                this.ai[2] = 0f;
                                                this.ai[3] = 0f;
                                                this.target = 0xff;
                                                this.netUpdate = true;
                                            }
                                            else
                                            {
                                                if (!Main.player[this.target].dead)
                                                {
                                                    this.ai[3]++;
                                                }
                                                if (this.ai[3] >= 60f)
                                                {
                                                    this.ai[3] = 0f;
                                                    vector36 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                    num371 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector36.X;
                                                    num372 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector36.Y;
                                                    if (Main.netMode != 1)
                                                    {
                                                        float num374 = 12f;
                                                        int num375 = 0x19;
                                                        int num376 = 0x60;
                                                        num373 = (float) Math.Sqrt((double) ((num371 * num371) + (num372 * num372)));
                                                        num373 = num374 / num373;
                                                        num371 *= num373;
                                                        num372 *= num373;
                                                        num371 += Main.rand.Next(-40, 0x29) * 0.05f;
                                                        num372 += Main.rand.Next(-40, 0x29) * 0.05f;
                                                        vector36.X += num371 * 4f;
                                                        vector36.Y += num372 * 4f;
                                                        Projectile.NewProjectile(vector36.X, vector36.Y, num371, num372, num376, num375, 0f, Main.myPlayer);
                                                    }
                                                }
                                            }
                                        }
                                        else if (this.ai[1] == 1f)
                                        {
                                            this.rotation = num365;
                                            float num377 = 13f;
                                            Vector2 vector37 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            float num378 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector37.X;
                                            float num379 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector37.Y;
                                            float num380 = (float) Math.Sqrt((double) ((num378 * num378) + (num379 * num379)));
                                            num380 = num377 / num380;
                                            this.velocity.X = num378 * num380;
                                            this.velocity.Y = num379 * num380;
                                            this.ai[1] = 2f;
                                        }
                                        else if (this.ai[1] == 2f)
                                        {
                                            this.ai[2]++;
                                            if (this.ai[2] >= 8f)
                                            {
                                                this.velocity.X *= 0.9f;
                                                this.velocity.Y *= 0.9f;
                                                if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                                                {
                                                    this.velocity.X = 0f;
                                                }
                                                if ((this.velocity.Y > -0.1) && (this.velocity.Y < 0.1))
                                                {
                                                    this.velocity.Y = 0f;
                                                }
                                            }
                                            else
                                            {
                                                this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) - 1.57f;
                                            }
                                            if (this.ai[2] >= 42f)
                                            {
                                                this.ai[3]++;
                                                this.ai[2] = 0f;
                                                this.target = 0xff;
                                                this.rotation = num365;
                                                if (this.ai[3] >= 10f)
                                                {
                                                    this.ai[1] = 0f;
                                                    this.ai[3] = 0f;
                                                }
                                                else
                                                {
                                                    this.ai[1] = 1f;
                                                }
                                            }
                                        }
                                        if (this.life < (this.lifeMax * 0.5))
                                        {
                                            this.ai[0] = 1f;
                                            this.ai[1] = 0f;
                                            this.ai[2] = 0f;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    this.velocity.Y -= 0.04f;
                                    if (this.timeLeft > 10)
                                    {
                                        this.timeLeft = 10;
                                        return;
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x20)
                            {
                                this.damage = this.defDamage;
                                this.defense = this.defDefense;
                                if ((this.ai[0] == 0f) && (Main.netMode != 1))
                                {
                                    this.TargetClosest(true);
                                    this.ai[0] = 1f;
                                    if (this.type != 0x44)
                                    {
                                        int num396 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 0x80, this.whoAmI);
                                        Main.npc[num396].ai[0] = -1f;
                                        Main.npc[num396].ai[1] = this.whoAmI;
                                        Main.npc[num396].target = this.target;
                                        Main.npc[num396].netUpdate = true;
                                        num396 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 0x81, this.whoAmI);
                                        Main.npc[num396].ai[0] = 1f;
                                        Main.npc[num396].ai[1] = this.whoAmI;
                                        Main.npc[num396].target = this.target;
                                        Main.npc[num396].netUpdate = true;
                                        num396 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 130, this.whoAmI);
                                        Main.npc[num396].ai[0] = -1f;
                                        Main.npc[num396].ai[1] = this.whoAmI;
                                        Main.npc[num396].target = this.target;
                                        Main.npc[num396].ai[3] = 150f;
                                        Main.npc[num396].netUpdate = true;
                                        num396 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + (this.height / 2), 0x83, this.whoAmI);
                                        Main.npc[num396].ai[0] = 1f;
                                        Main.npc[num396].ai[1] = this.whoAmI;
                                        Main.npc[num396].target = this.target;
                                        Main.npc[num396].netUpdate = true;
                                        Main.npc[num396].ai[3] = 150f;
                                    }
                                }
                                if (((this.type == 0x44) && (this.ai[1] != 3f)) && (this.ai[1] != 2f))
                                {
                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                    this.ai[1] = 2f;
                                }
                                if ((Main.player[this.target].dead || (Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) > 6000f)) || (Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y)) > 6000f))
                                {
                                    this.TargetClosest(true);
                                    if ((Main.player[this.target].dead || (Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) > 6000f)) || (Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y)) > 6000f))
                                    {
                                        this.ai[1] = 3f;
                                    }
                                }
                                if ((Main.dayTime && (this.ai[1] != 3f)) && (this.ai[1] != 2f))
                                {
                                    this.ai[1] = 2f;
                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                }
                                if (this.ai[1] != 0f)
                                {
                                    if (this.ai[1] == 1f)
                                    {
                                        this.defense *= 2;
                                        this.damage *= 2;
                                        this.ai[2]++;
                                        if (this.ai[2] == 2f)
                                        {
                                            Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                        }
                                        if (this.ai[2] >= 400f)
                                        {
                                            this.ai[2] = 0f;
                                            this.ai[1] = 0f;
                                        }
                                        this.rotation += this.direction * 0.3f;
                                        Vector2 vector40 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num397 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector40.X;
                                        float num398 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector40.Y;
                                        float num399 = (float) Math.Sqrt((double) ((num397 * num397) + (num398 * num398)));
                                        num399 = 2f / num399;
                                        this.velocity.X = num397 * num399;
                                        this.velocity.Y = num398 * num399;
                                        return;
                                    }
                                    if (this.ai[1] == 2f)
                                    {
                                        this.damage = 0x270f;
                                        this.defense = 0x270f;
                                        this.rotation += this.direction * 0.3f;
                                        Vector2 vector41 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num400 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector41.X;
                                        float num401 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector41.Y;
                                        float num402 = (float) Math.Sqrt((double) ((num400 * num400) + (num401 * num401)));
                                        num402 = 8f / num402;
                                        this.velocity.X = num400 * num402;
                                        this.velocity.Y = num401 * num402;
                                        return;
                                    }
                                    if (this.ai[1] == 3f)
                                    {
                                        this.velocity.Y += 0.1f;
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y *= 0.95f;
                                        }
                                        this.velocity.X *= 0.95f;
                                        if (this.timeLeft > 500)
                                        {
                                            this.timeLeft = 500;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    this.ai[2]++;
                                    if (this.ai[2] >= 600f)
                                    {
                                        this.ai[2] = 0f;
                                        this.ai[1] = 1f;
                                        this.TargetClosest(true);
                                        this.netUpdate = true;
                                    }
                                    this.rotation = this.velocity.X / 15f;
                                    if (this.position.Y > (Main.player[this.target].position.Y - 200f))
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.98f;
                                        }
                                        this.velocity.Y -= 0.1f;
                                        if (this.velocity.Y > 2f)
                                        {
                                            this.velocity.Y = 2f;
                                        }
                                    }
                                    else if (this.position.Y < (Main.player[this.target].position.Y - 500f))
                                    {
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y *= 0.98f;
                                        }
                                        this.velocity.Y += 0.1f;
                                        if (this.velocity.Y < -2f)
                                        {
                                            this.velocity.Y = -2f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) > ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) + 100f))
                                    {
                                        if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X *= 0.98f;
                                        }
                                        this.velocity.X -= 0.1f;
                                        if (this.velocity.X > 8f)
                                        {
                                            this.velocity.X = 8f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) < ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - 100f))
                                    {
                                        if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X *= 0.98f;
                                        }
                                        this.velocity.X += 0.1f;
                                        if (this.velocity.X < -8f)
                                        {
                                            this.velocity.X = -8f;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x21)
                            {
                                Vector2 vector42 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num403 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector42.X;
                                float num404 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector42.Y;
                                float num405 = (float) Math.Sqrt((double) ((num403 * num403) + (num404 * num404)));
                                if (this.ai[2] != 99f)
                                {
                                    if (num405 > 800f)
                                    {
                                        this.ai[2] = 99f;
                                    }
                                }
                                else if (num405 < 400f)
                                {
                                    this.ai[2] = 0f;
                                }
                                this.spriteDirection = -((int) this.ai[0]);
                                if (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != 0x20))
                                {
                                    this.ai[2] += 10f;
                                    if ((this.ai[2] > 50f) || (Main.netMode != 2))
                                    {
                                        this.life = -1;
                                        this.HitEffect(0, 10.0);
                                        this.active = false;
                                    }
                                }
                                if (this.ai[2] != 99f)
                                {
                                    if ((this.ai[2] == 0f) || (this.ai[2] == 3f))
                                    {
                                        if ((Main.npc[(int) this.ai[1]].ai[1] == 3f) && (this.timeLeft > 10))
                                        {
                                            this.timeLeft = 10;
                                        }
                                        if (Main.npc[(int) this.ai[1]].ai[1] != 0f)
                                        {
                                            this.TargetClosest(true);
                                            if (Main.player[this.target].dead)
                                            {
                                                this.velocity.Y += 0.1f;
                                                if (this.velocity.Y > 16f)
                                                {
                                                    this.velocity.Y = 16f;
                                                }
                                            }
                                            else
                                            {
                                                Vector2 vector43 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num406 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector43.X;
                                                float num407 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector43.Y;
                                                float num408 = (float) Math.Sqrt((double) ((num406 * num406) + (num407 * num407)));
                                                num408 = 7f / num408;
                                                num406 *= num408;
                                                num407 *= num408;
                                                this.rotation = ((float) Math.Atan2((double) num407, (double) num406)) - 1.57f;
                                                if (this.velocity.X > num406)
                                                {
                                                    if (this.velocity.X > 0f)
                                                    {
                                                        this.velocity.X *= 0.97f;
                                                    }
                                                    this.velocity.X -= 0.05f;
                                                }
                                                if (this.velocity.X < num406)
                                                {
                                                    if (this.velocity.X < 0f)
                                                    {
                                                        this.velocity.X *= 0.97f;
                                                    }
                                                    this.velocity.X += 0.05f;
                                                }
                                                if (this.velocity.Y > num407)
                                                {
                                                    if (this.velocity.Y > 0f)
                                                    {
                                                        this.velocity.Y *= 0.97f;
                                                    }
                                                    this.velocity.Y -= 0.05f;
                                                }
                                                if (this.velocity.Y < num407)
                                                {
                                                    if (this.velocity.Y < 0f)
                                                    {
                                                        this.velocity.Y *= 0.97f;
                                                    }
                                                    this.velocity.Y += 0.05f;
                                                }
                                            }
                                            this.ai[3]++;
                                            if (this.ai[3] >= 600f)
                                            {
                                                this.ai[2] = 0f;
                                                this.ai[3] = 0f;
                                                this.netUpdate = true;
                                            }
                                        }
                                        else
                                        {
                                            this.ai[3]++;
                                            if (this.ai[3] >= 300f)
                                            {
                                                this.ai[2]++;
                                                this.ai[3] = 0f;
                                                this.netUpdate = true;
                                            }
                                            if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y + 320f))
                                            {
                                                if (this.velocity.Y > 0f)
                                                {
                                                    this.velocity.Y *= 0.96f;
                                                }
                                                this.velocity.Y -= 0.04f;
                                                if (this.velocity.Y > 3f)
                                                {
                                                    this.velocity.Y = 3f;
                                                }
                                            }
                                            else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y + 260f))
                                            {
                                                if (this.velocity.Y < 0f)
                                                {
                                                    this.velocity.Y *= 0.96f;
                                                }
                                                this.velocity.Y += 0.04f;
                                                if (this.velocity.Y < -3f)
                                                {
                                                    this.velocity.Y = -3f;
                                                }
                                            }
                                            if ((this.position.X + (this.width / 2)) > (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                            {
                                                if (this.velocity.X > 0f)
                                                {
                                                    this.velocity.X *= 0.96f;
                                                }
                                                this.velocity.X -= 0.3f;
                                                if (this.velocity.X > 12f)
                                                {
                                                    this.velocity.X = 12f;
                                                }
                                            }
                                            if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - 250f))
                                            {
                                                if (this.velocity.X < 0f)
                                                {
                                                    this.velocity.X *= 0.96f;
                                                }
                                                this.velocity.X += 0.3f;
                                                if (this.velocity.X < -12f)
                                                {
                                                    this.velocity.X = -12f;
                                                }
                                            }
                                        }
                                        Vector2 vector44 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num409 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector44.X;
                                        float num410 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector44.Y;
                                        Math.Sqrt((double) ((num409 * num409) + (num410 * num410)));
                                        this.rotation = ((float) Math.Atan2((double) num410, (double) num409)) + 1.57f;
                                        return;
                                    }
                                    if (this.ai[2] != 1f)
                                    {
                                        if (this.ai[2] != 2f)
                                        {
                                            if (this.ai[2] == 4f)
                                            {
                                                this.TargetClosest(true);
                                                Vector2 vector46 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num414 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector46.X;
                                                float num415 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector46.Y;
                                                float num416 = (float) Math.Sqrt((double) ((num414 * num414) + (num415 * num415)));
                                                num416 = 7f / num416;
                                                num414 *= num416;
                                                num415 *= num416;
                                                if (this.velocity.X > num414)
                                                {
                                                    if (this.velocity.X > 0f)
                                                    {
                                                        this.velocity.X *= 0.97f;
                                                    }
                                                    this.velocity.X -= 0.05f;
                                                }
                                                if (this.velocity.X < num414)
                                                {
                                                    if (this.velocity.X < 0f)
                                                    {
                                                        this.velocity.X *= 0.97f;
                                                    }
                                                    this.velocity.X += 0.05f;
                                                }
                                                if (this.velocity.Y > num415)
                                                {
                                                    if (this.velocity.Y > 0f)
                                                    {
                                                        this.velocity.Y *= 0.97f;
                                                    }
                                                    this.velocity.Y -= 0.05f;
                                                }
                                                if (this.velocity.Y < num415)
                                                {
                                                    if (this.velocity.Y < 0f)
                                                    {
                                                        this.velocity.Y *= 0.97f;
                                                    }
                                                    this.velocity.Y += 0.05f;
                                                }
                                                this.ai[3]++;
                                                if (this.ai[3] >= 600f)
                                                {
                                                    this.ai[2] = 0f;
                                                    this.ai[3] = 0f;
                                                    this.netUpdate = true;
                                                }
                                                vector46 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                num414 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector46.X;
                                                num415 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector46.Y;
                                                num416 = (float) Math.Sqrt((double) ((num414 * num414) + (num415 * num415)));
                                                this.rotation = ((float) Math.Atan2((double) num415, (double) num414)) + 1.57f;
                                                return;
                                            }
                                            if ((this.ai[2] == 5f) && (((this.velocity.X > 0f) && ((this.position.X + (this.width / 2)) > (Main.player[this.target].position.X + (Main.player[this.target].width / 2)))) || ((this.velocity.X < 0f) && ((this.position.X + (this.width / 2)) < (Main.player[this.target].position.X + (Main.player[this.target].width / 2))))))
                                            {
                                                this.ai[2] = 0f;
                                                return;
                                            }
                                        }
                                        else if ((this.position.Y > Main.player[this.target].position.Y) || (this.velocity.Y < 0f))
                                        {
                                            this.ai[2] = 3f;
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        Vector2 vector45 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num411 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector45.X;
                                        float num412 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector45.Y;
                                        float num413 = (float) Math.Sqrt((double) ((num411 * num411) + (num412 * num412)));
                                        this.rotation = ((float) Math.Atan2((double) num412, (double) num411)) + 1.57f;
                                        this.velocity.X *= 0.95f;
                                        this.velocity.Y -= 0.1f;
                                        if (this.velocity.Y < -8f)
                                        {
                                            this.velocity.Y = -8f;
                                        }
                                        if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 200f))
                                        {
                                            this.TargetClosest(true);
                                            this.ai[2] = 2f;
                                            vector45 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            num411 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector45.X;
                                            num412 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector45.Y;
                                            num413 = (float) Math.Sqrt((double) ((num411 * num411) + (num412 * num412)));
                                            num413 = 22f / num413;
                                            this.velocity.X = num411 * num413;
                                            this.velocity.Y = num412 * num413;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.position.Y > Main.npc[(int) this.ai[1]].position.Y)
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.96f;
                                        }
                                        this.velocity.Y -= 0.1f;
                                        if (this.velocity.Y > 8f)
                                        {
                                            this.velocity.Y = 8f;
                                        }
                                    }
                                    else if (this.position.Y < Main.npc[(int) this.ai[1]].position.Y)
                                    {
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y *= 0.96f;
                                        }
                                        this.velocity.Y += 0.1f;
                                        if (this.velocity.Y < -8f)
                                        {
                                            this.velocity.Y = -8f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) > (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                    {
                                        if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X *= 0.96f;
                                        }
                                        this.velocity.X -= 0.5f;
                                        if (this.velocity.X > 12f)
                                        {
                                            this.velocity.X = 12f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) < (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                    {
                                        if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X *= 0.96f;
                                        }
                                        this.velocity.X += 0.5f;
                                        if (this.velocity.X < -12f)
                                        {
                                            this.velocity.X = -12f;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x22)
                            {
                                this.spriteDirection = -((int) this.ai[0]);
                                Vector2 vector47 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num417 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector47.X;
                                float num418 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector47.Y;
                                float num419 = (float) Math.Sqrt((double) ((num417 * num417) + (num418 * num418)));
                                if (this.ai[2] != 99f)
                                {
                                    if (num419 > 800f)
                                    {
                                        this.ai[2] = 99f;
                                    }
                                }
                                else if (num419 < 400f)
                                {
                                    this.ai[2] = 0f;
                                }
                                if (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != 0x20))
                                {
                                    this.ai[2] += 10f;
                                    if ((this.ai[2] > 50f) || (Main.netMode != 2))
                                    {
                                        this.life = -1;
                                        this.HitEffect(0, 10.0);
                                        this.active = false;
                                    }
                                }
                                if (this.ai[2] != 99f)
                                {
                                    if ((this.ai[2] == 0f) || (this.ai[2] == 3f))
                                    {
                                        if ((Main.npc[(int) this.ai[1]].ai[1] == 3f) && (this.timeLeft > 10))
                                        {
                                            this.timeLeft = 10;
                                        }
                                        if (Main.npc[(int) this.ai[1]].ai[1] != 0f)
                                        {
                                            this.TargetClosest(true);
                                            this.TargetClosest(true);
                                            if (Main.player[this.target].dead)
                                            {
                                                this.velocity.Y += 0.1f;
                                                if (this.velocity.Y > 16f)
                                                {
                                                    this.velocity.Y = 16f;
                                                }
                                            }
                                            else
                                            {
                                                Vector2 vector48 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num420 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector48.X;
                                                float num421 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector48.Y;
                                                float num422 = (float) Math.Sqrt((double) ((num420 * num420) + (num421 * num421)));
                                                num422 = 12f / num422;
                                                num420 *= num422;
                                                num421 *= num422;
                                                this.rotation = ((float) Math.Atan2((double) num421, (double) num420)) - 1.57f;
                                                if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < 2f)
                                                {
                                                    this.rotation = ((float) Math.Atan2((double) num421, (double) num420)) - 1.57f;
                                                    this.velocity.X = num420;
                                                    this.velocity.Y = num421;
                                                    this.netUpdate = true;
                                                }
                                                else
                                                {
                                                    this.velocity = (Vector2) (this.velocity * 0.97f);
                                                }
                                                this.ai[3]++;
                                                if (this.ai[3] >= 600f)
                                                {
                                                    this.ai[2] = 0f;
                                                    this.ai[3] = 0f;
                                                    this.netUpdate = true;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            this.ai[3]++;
                                            if (this.ai[3] >= 600f)
                                            {
                                                this.ai[2]++;
                                                this.ai[3] = 0f;
                                                this.netUpdate = true;
                                            }
                                            if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y + 300f))
                                            {
                                                if (this.velocity.Y > 0f)
                                                {
                                                    this.velocity.Y *= 0.96f;
                                                }
                                                this.velocity.Y -= 0.1f;
                                                if (this.velocity.Y > 3f)
                                                {
                                                    this.velocity.Y = 3f;
                                                }
                                            }
                                            else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y + 230f))
                                            {
                                                if (this.velocity.Y < 0f)
                                                {
                                                    this.velocity.Y *= 0.96f;
                                                }
                                                this.velocity.Y += 0.1f;
                                                if (this.velocity.Y < -3f)
                                                {
                                                    this.velocity.Y = -3f;
                                                }
                                            }
                                            if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) + 250f))
                                            {
                                                if (this.velocity.X > 0f)
                                                {
                                                    this.velocity.X *= 0.94f;
                                                }
                                                this.velocity.X -= 0.3f;
                                                if (this.velocity.X > 9f)
                                                {
                                                    this.velocity.X = 9f;
                                                }
                                            }
                                            if ((this.position.X + (this.width / 2)) < (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                            {
                                                if (this.velocity.X < 0f)
                                                {
                                                    this.velocity.X *= 0.94f;
                                                }
                                                this.velocity.X += 0.2f;
                                                if (this.velocity.X < -8f)
                                                {
                                                    this.velocity.X = -8f;
                                                }
                                            }
                                        }
                                        Vector2 vector49 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num423 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector49.X;
                                        float num424 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector49.Y;
                                        Math.Sqrt((double) ((num423 * num423) + (num424 * num424)));
                                        this.rotation = ((float) Math.Atan2((double) num424, (double) num423)) + 1.57f;
                                        return;
                                    }
                                    if (this.ai[2] != 1f)
                                    {
                                        if (this.ai[2] != 2f)
                                        {
                                            if (this.ai[2] != 4f)
                                            {
                                                if ((this.ai[2] == 5f) && ((this.position.X + (this.width / 2)) < ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - 100f)))
                                                {
                                                    if (this.ai[3] >= 4f)
                                                    {
                                                        this.ai[2] = 0f;
                                                        this.ai[3] = 0f;
                                                        return;
                                                    }
                                                    this.ai[2] = 4f;
                                                    this.ai[3]++;
                                                    return;
                                                }
                                            }
                                            else
                                            {
                                                Vector2 vector51 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                float num428 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector51.X;
                                                float num429 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector51.Y;
                                                float num430 = (float) Math.Sqrt((double) ((num428 * num428) + (num429 * num429)));
                                                this.rotation = ((float) Math.Atan2((double) num429, (double) num428)) + 1.57f;
                                                this.velocity.Y = ((this.velocity.Y * 5f) + Main.npc[(int) this.ai[1]].velocity.Y) / 6f;
                                                this.velocity.X += 0.5f;
                                                if (this.velocity.X > 12f)
                                                {
                                                    this.velocity.X = 12f;
                                                }
                                                if (((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - 500f)) || ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) + 500f)))
                                                {
                                                    this.TargetClosest(true);
                                                    this.ai[2] = 5f;
                                                    vector51 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                                    num428 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector51.X;
                                                    num429 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector51.Y;
                                                    num430 = (float) Math.Sqrt((double) ((num428 * num428) + (num429 * num429)));
                                                    num430 = 17f / num430;
                                                    this.velocity.X = num428 * num430;
                                                    this.velocity.Y = num429 * num430;
                                                    this.netUpdate = true;
                                                    return;
                                                }
                                            }
                                        }
                                        else if ((this.position.Y > Main.player[this.target].position.Y) || (this.velocity.Y < 0f))
                                        {
                                            if (this.ai[3] >= 4f)
                                            {
                                                this.ai[2] = 3f;
                                                this.ai[3] = 0f;
                                                return;
                                            }
                                            this.ai[2] = 1f;
                                            this.ai[3]++;
                                            return;
                                        }
                                    }
                                    else
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.9f;
                                        }
                                        Vector2 vector50 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num425 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (280f * this.ai[0])) - vector50.X;
                                        float num426 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector50.Y;
                                        float num427 = (float) Math.Sqrt((double) ((num425 * num425) + (num426 * num426)));
                                        this.rotation = ((float) Math.Atan2((double) num426, (double) num425)) + 1.57f;
                                        this.velocity.X = ((this.velocity.X * 5f) + Main.npc[(int) this.ai[1]].velocity.X) / 6f;
                                        this.velocity.X += 0.5f;
                                        this.velocity.Y -= 0.5f;
                                        if (this.velocity.Y < -9f)
                                        {
                                            this.velocity.Y = -9f;
                                        }
                                        if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 280f))
                                        {
                                            this.TargetClosest(true);
                                            this.ai[2] = 2f;
                                            vector50 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                            num425 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector50.X;
                                            num426 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector50.Y;
                                            num427 = (float) Math.Sqrt((double) ((num425 * num425) + (num426 * num426)));
                                            num427 = 20f / num427;
                                            this.velocity.X = num425 * num427;
                                            this.velocity.Y = num426 * num427;
                                            this.netUpdate = true;
                                            return;
                                        }
                                    }
                                }
                                else
                                {
                                    if (this.position.Y > Main.npc[(int) this.ai[1]].position.Y)
                                    {
                                        if (this.velocity.Y > 0f)
                                        {
                                            this.velocity.Y *= 0.96f;
                                        }
                                        this.velocity.Y -= 0.1f;
                                        if (this.velocity.Y > 8f)
                                        {
                                            this.velocity.Y = 8f;
                                        }
                                    }
                                    else if (this.position.Y < Main.npc[(int) this.ai[1]].position.Y)
                                    {
                                        if (this.velocity.Y < 0f)
                                        {
                                            this.velocity.Y *= 0.96f;
                                        }
                                        this.velocity.Y += 0.1f;
                                        if (this.velocity.Y < -8f)
                                        {
                                            this.velocity.Y = -8f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) > (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                    {
                                        if (this.velocity.X > 0f)
                                        {
                                            this.velocity.X *= 0.96f;
                                        }
                                        this.velocity.X -= 0.5f;
                                        if (this.velocity.X > 12f)
                                        {
                                            this.velocity.X = 12f;
                                        }
                                    }
                                    if ((this.position.X + (this.width / 2)) < (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)))
                                    {
                                        if (this.velocity.X < 0f)
                                        {
                                            this.velocity.X *= 0.96f;
                                        }
                                        this.velocity.X += 0.5f;
                                        if (this.velocity.X < -12f)
                                        {
                                            this.velocity.X = -12f;
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x23)
                            {
                                this.spriteDirection = -((int) this.ai[0]);
                                if (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != 0x20))
                                {
                                    this.ai[2] += 10f;
                                    if ((this.ai[2] > 50f) || (Main.netMode != 2))
                                    {
                                        this.life = -1;
                                        this.HitEffect(0, 10.0);
                                        this.active = false;
                                    }
                                }
                                if (this.ai[2] != 0f)
                                {
                                    if (this.ai[2] == 1f)
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 300f)
                                        {
                                            this.localAI[0] = 0f;
                                            this.ai[2] = 0f;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                        }
                                        Vector2 vector53 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num437 = (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - vector53.X;
                                        float num438 = Main.npc[(int) this.ai[1]].position.Y - vector53.Y;
                                        num438 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 80f) - vector53.Y;
                                        float num439 = (float) Math.Sqrt((double) ((num437 * num437) + (num438 * num438)));
                                        num439 = 6f / num439;
                                        num437 *= num439;
                                        num438 *= num439;
                                        if (this.velocity.X > num437)
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.9f;
                                            }
                                            this.velocity.X -= 0.04f;
                                        }
                                        if (this.velocity.X < num437)
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.9f;
                                            }
                                            this.velocity.X += 0.04f;
                                        }
                                        if (this.velocity.Y > num438)
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.9f;
                                            }
                                            this.velocity.Y -= 0.08f;
                                        }
                                        if (this.velocity.Y < num438)
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.9f;
                                            }
                                            this.velocity.Y += 0.08f;
                                        }
                                        this.TargetClosest(true);
                                        vector53 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        num437 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector53.X;
                                        num438 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector53.Y;
                                        num439 = (float) Math.Sqrt((double) ((num437 * num437) + (num438 * num438)));
                                        this.rotation = ((float) Math.Atan2((double) num438, (double) num437)) - 1.57f;
                                        if (Main.netMode != 1)
                                        {
                                            this.localAI[0]++;
                                            if (this.localAI[0] > 40f)
                                            {
                                                this.localAI[0] = 0f;
                                                float num440 = 10f;
                                                int num441 = 0;
                                                int num442 = 0x66;
                                                num439 = num440 / num439;
                                                num437 *= num439;
                                                num438 *= num439;
                                                num437 += Main.rand.Next(-40, 0x29) * 0.01f;
                                                num438 += Main.rand.Next(-40, 0x29) * 0.01f;
                                                vector53.X += num437 * 4f;
                                                vector53.Y += num438 * 4f;
                                                Projectile.NewProjectile(vector53.X, vector53.Y, num437, num438, num442, num441, 0f, Main.myPlayer);
                                                return;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    if ((Main.npc[(int) this.ai[1]].ai[1] == 3f) && (this.timeLeft > 10))
                                    {
                                        this.timeLeft = 10;
                                    }
                                    if (Main.npc[(int) this.ai[1]].ai[1] != 0f)
                                    {
                                        this.localAI[0] += 2f;
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.07f;
                                            if (this.velocity.Y > 6f)
                                            {
                                                this.velocity.Y = 6f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.07f;
                                            if (this.velocity.Y < -6f)
                                            {
                                                this.velocity.Y = -6f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.1f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.1f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 1100f)
                                        {
                                            this.localAI[0] = 0f;
                                            this.ai[2] = 1f;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                        }
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y - 150f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.04f;
                                            if (this.velocity.Y > 3f)
                                            {
                                                this.velocity.Y = 3f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 150f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.04f;
                                            if (this.velocity.Y < -3f)
                                            {
                                                this.velocity.Y = -3f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) + 200f))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.2f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) + 160f))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.2f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    Vector2 vector52 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num431 = ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (200f * this.ai[0])) - vector52.X;
                                    float num432 = (Main.npc[(int) this.ai[1]].position.Y + 230f) - vector52.Y;
                                    float num433 = (float) Math.Sqrt((double) ((num431 * num431) + (num432 * num432)));
                                    this.rotation = ((float) Math.Atan2((double) num432, (double) num431)) + 1.57f;
                                    if (Main.netMode != 1)
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 140f)
                                        {
                                            this.localAI[0] = 0f;
                                            float num434 = 12f;
                                            int num435 = 0;
                                            int num436 = 0x66;
                                            num433 = num434 / num433;
                                            num431 = -num431 * num433;
                                            num432 = -num432 * num433;
                                            num431 += Main.rand.Next(-40, 0x29) * 0.01f;
                                            num432 += Main.rand.Next(-40, 0x29) * 0.01f;
                                            vector52.X += num431 * 4f;
                                            vector52.Y += num432 * 4f;
                                            Projectile.NewProjectile(vector52.X, vector52.Y, num431, num432, num436, num435, 0f, Main.myPlayer);
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x24)
                            {
                                this.spriteDirection = -((int) this.ai[0]);
                                if (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != 0x20))
                                {
                                    this.ai[2] += 10f;
                                    if ((this.ai[2] > 50f) || (Main.netMode != 2))
                                    {
                                        this.life = -1;
                                        this.HitEffect(0, 10.0);
                                        this.active = false;
                                    }
                                }
                                if ((this.ai[2] != 0f) && (this.ai[2] != 3f))
                                {
                                    if (this.ai[2] == 1f)
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 200f)
                                        {
                                            this.localAI[0] = 0f;
                                            this.ai[2] = 0f;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                        }
                                        Vector2 vector55 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        float num449 = ((Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - 350f) - vector55.X;
                                        float num450 = ((Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - 20f) - vector55.Y;
                                        float num451 = (float) Math.Sqrt((double) ((num449 * num449) + (num450 * num450)));
                                        num451 = 7f / num451;
                                        num449 *= num451;
                                        num450 *= num451;
                                        if (this.velocity.X > num449)
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.9f;
                                            }
                                            this.velocity.X -= 0.1f;
                                        }
                                        if (this.velocity.X < num449)
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.9f;
                                            }
                                            this.velocity.X += 0.1f;
                                        }
                                        if (this.velocity.Y > num450)
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.9f;
                                            }
                                            this.velocity.Y -= 0.03f;
                                        }
                                        if (this.velocity.Y < num450)
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.9f;
                                            }
                                            this.velocity.Y += 0.03f;
                                        }
                                        this.TargetClosest(true);
                                        vector55 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        num449 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector55.X;
                                        num450 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector55.Y;
                                        num451 = (float) Math.Sqrt((double) ((num449 * num449) + (num450 * num450)));
                                        this.rotation = ((float) Math.Atan2((double) num450, (double) num449)) - 1.57f;
                                        if (Main.netMode == 1)
                                        {
                                            this.localAI[0]++;
                                            if (this.localAI[0] > 80f)
                                            {
                                                this.localAI[0] = 0f;
                                                float num452 = 10f;
                                                int num453 = 0x19;
                                                int num454 = 100;
                                                num451 = num452 / num451;
                                                num449 *= num451;
                                                num450 *= num451;
                                                num449 += Main.rand.Next(-40, 0x29) * 0.05f;
                                                num450 += Main.rand.Next(-40, 0x29) * 0.05f;
                                                vector55.X += num449 * 8f;
                                                vector55.Y += num450 * 8f;
                                                Projectile.NewProjectile(vector55.X, vector55.Y, num449, num450, num454, num453, 0f, Main.myPlayer);
                                                return;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    if ((Main.npc[(int) this.ai[1]].ai[1] == 3f) && (this.timeLeft > 10))
                                    {
                                        this.timeLeft = 10;
                                    }
                                    if (Main.npc[(int) this.ai[1]].ai[1] != 0f)
                                    {
                                        this.localAI[0] += 3f;
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.07f;
                                            if (this.velocity.Y > 6f)
                                            {
                                                this.velocity.Y = 6f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.07f;
                                            if (this.velocity.Y < -6f)
                                            {
                                                this.velocity.Y = -6f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.1f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (120f * this.ai[0])))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.1f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        this.ai[3]++;
                                        if (this.ai[3] >= 800f)
                                        {
                                            this.ai[2]++;
                                            this.ai[3] = 0f;
                                            this.netUpdate = true;
                                        }
                                        if (this.position.Y > (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y > 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y -= 0.1f;
                                            if (this.velocity.Y > 3f)
                                            {
                                                this.velocity.Y = 3f;
                                            }
                                        }
                                        else if (this.position.Y < (Main.npc[(int) this.ai[1]].position.Y - 100f))
                                        {
                                            if (this.velocity.Y < 0f)
                                            {
                                                this.velocity.Y *= 0.96f;
                                            }
                                            this.velocity.Y += 0.1f;
                                            if (this.velocity.Y < -3f)
                                            {
                                                this.velocity.Y = -3f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) > ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (180f * this.ai[0])))
                                        {
                                            if (this.velocity.X > 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X -= 0.14f;
                                            if (this.velocity.X > 8f)
                                            {
                                                this.velocity.X = 8f;
                                            }
                                        }
                                        if ((this.position.X + (this.width / 2)) < ((Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - (180f * this.ai[0])))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X *= 0.96f;
                                            }
                                            this.velocity.X += 0.14f;
                                            if (this.velocity.X < -8f)
                                            {
                                                this.velocity.X = -8f;
                                            }
                                        }
                                    }
                                    this.TargetClosest(true);
                                    Vector2 vector54 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                    float num443 = (Main.player[this.target].position.X + (Main.player[this.target].width / 2)) - vector54.X;
                                    float num444 = (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)) - vector54.Y;
                                    float num445 = (float) Math.Sqrt((double) ((num443 * num443) + (num444 * num444)));
                                    this.rotation = ((float) Math.Atan2((double) num444, (double) num443)) - 1.57f;
                                    if (Main.netMode != 1)
                                    {
                                        this.localAI[0]++;
                                        if (this.localAI[0] > 200f)
                                        {
                                            this.localAI[0] = 0f;
                                            float num446 = 8f;
                                            int num447 = 0x19;
                                            int num448 = 100;
                                            num445 = num446 / num445;
                                            num443 *= num445;
                                            num444 *= num445;
                                            num443 += Main.rand.Next(-40, 0x29) * 0.05f;
                                            num444 += Main.rand.Next(-40, 0x29) * 0.05f;
                                            vector54.X += num443 * 8f;
                                            vector54.Y += num444 * 8f;
                                            Projectile.NewProjectile(vector54.X, vector54.Y, num443, num444, num448, num447, 0f, Main.myPlayer);
                                            return;
                                        }
                                    }
                                }
                                return;
                            }
                            if (this.aiStyle == 0x25)
                            {
                                if (this.ai[3] > 0f)
                                {
                                    this.realLife = (int) this.ai[3];
                                }
                                if (((this.target < 0) || (this.target == 0xff)) || Main.player[this.target].dead)
                                {
                                    this.TargetClosest(true);
                                }
                                if (this.type > 0x86)
                                {
                                    bool flag37 = false;
                                    if (this.ai[1] <= 0f)
                                    {
                                        flag37 = true;
                                    }
                                    else if (Main.npc[(int) this.ai[1]].life <= 0)
                                    {
                                        flag37 = true;
                                    }
                                    if (flag37)
                                    {
                                        this.life = 0;
                                        this.HitEffect(0, 10.0);
                                        this.checkDead();
                                    }
                                }
                                if (Main.netMode != 1)
                                {
                                    if ((this.ai[0] == 0f) && (this.type == 0x86))
                                    {
                                        this.ai[3] = this.whoAmI;
                                        this.realLife = this.whoAmI;
                                        int num455 = 0;
                                        int whoAmI = this.whoAmI;
                                        int num457 = 80;
                                        for (int num458 = 0; num458 <= num457; num458++)
                                        {
                                            int num459 = 0x87;
                                            if (num458 == num457)
                                            {
                                                num459 = 0x88;
                                            }
                                            num455 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, num459, this.whoAmI);
                                            Main.npc[num455].ai[3] = this.whoAmI;
                                            Main.npc[num455].realLife = this.whoAmI;
                                            Main.npc[num455].ai[1] = whoAmI;
                                            Main.npc[whoAmI].ai[0] = num455;
                                            NetMessage.SendData(0x17, -1, -1, "", num455, 0f, 0f, 0f, 0);
                                            whoAmI = num455;
                                        }
                                    }
                                    if (this.type == 0x87)
                                    {
                                        this.localAI[0] += Main.rand.Next(4);
                                        if (this.localAI[0] >= Main.rand.Next(0x578, 0x6590))
                                        {
                                            this.localAI[0] = 0f;
                                            this.TargetClosest(true);
                                            if (Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                                            {
                                                float num460 = 8f;
                                                Vector2 vector56 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height / 2));
                                                float num461 = ((Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector56.X) + Main.rand.Next(-20, 0x15);
                                                float num462 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector56.Y) + Main.rand.Next(-20, 0x15);
                                                float num463 = (float) Math.Sqrt((double) ((num461 * num461) + (num462 * num462)));
                                                num463 = num460 / num463;
                                                num461 *= num463;
                                                num462 *= num463;
                                                num461 += Main.rand.Next(-20, 0x15) * 0.05f;
                                                num462 += Main.rand.Next(-20, 0x15) * 0.05f;
                                                int num464 = 0x16;
                                                int num465 = 100;
                                                vector56.X += num461 * 5f;
                                                vector56.Y += num462 * 5f;
                                                int num466 = Projectile.NewProjectile(vector56.X, vector56.Y, num461, num462, num465, num464, 0f, Main.myPlayer);
                                                Main.projectile[num466].timeLeft = 300;
                                                this.netUpdate = true;
                                            }
                                        }
                                    }
                                }
                                int num467 = ((int) (this.position.X / 16f)) - 1;
                                int maxTilesX = ((int) ((this.position.X + this.width) / 16f)) + 2;
                                int num469 = ((int) (this.position.Y / 16f)) - 1;
                                int maxTilesY = ((int) ((this.position.Y + this.height) / 16f)) + 2;
                                if (num467 < 0)
                                {
                                    num467 = 0;
                                }
                                if (maxTilesX > Main.maxTilesX)
                                {
                                    maxTilesX = Main.maxTilesX;
                                }
                                if (num469 < 0)
                                {
                                    num469 = 0;
                                }
                                if (maxTilesY > Main.maxTilesY)
                                {
                                    maxTilesY = Main.maxTilesY;
                                }
                                bool flag38 = false;
                                if (!flag38)
                                {
                                    for (int num471 = num467; num471 < maxTilesX; num471++)
                                    {
                                        for (int num472 = num469; num472 < maxTilesY; num472++)
                                        {
                                            if ((Main.tile[num471, num472] != null) && ((Main.tile[num471, num472].active && (Main.tileSolid[Main.tile[num471, num472].type] || (Main.tileSolidTop[Main.tile[num471, num472].type] && (Main.tile[num471, num472].frameY == 0)))) || (Main.tile[num471, num472].liquid > 0x40)))
                                            {
                                                Vector2 vector57;
                                                vector57.X = num471 * 0x10;
                                                vector57.Y = num472 * 0x10;
                                                if ((((this.position.X + this.width) > vector57.X) && (this.position.X < (vector57.X + 16f))) && (((this.position.Y + this.height) > vector57.Y) && (this.position.Y < (vector57.Y + 16f))))
                                                {
                                                    flag38 = true;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                                if (!flag38)
                                {
                                    if ((this.type != 0x87) || (this.ai[2] != 1f))
                                    {
                                        Lighting.addLight((int) ((this.position.X + (this.width / 2)) / 16f), (int) ((this.position.Y + (this.height / 2)) / 16f), 0.3f, 0.1f, 0.05f);
                                    }
                                    this.localAI[1] = 1f;
                                    if (this.type == 0x86)
                                    {
                                        Rectangle rectangle11 = new Rectangle((int) this.position.X, (int) this.position.Y, this.width, this.height);
                                        int num473 = 0x3e8;
                                        bool flag39 = true;
                                        if (this.position.Y > Main.player[this.target].position.Y)
                                        {
                                            for (int num474 = 0; num474 < 0xff; num474++)
                                            {
                                                if (Main.player[num474].active)
                                                {
                                                    Rectangle rectangle12 = new Rectangle(((int) Main.player[num474].position.X) - num473, ((int) Main.player[num474].position.Y) - num473, num473 * 2, num473 * 2);
                                                    if (rectangle11.Intersects(rectangle12))
                                                    {
                                                        flag39 = false;
                                                        break;
                                                    }
                                                }
                                            }
                                            if (flag39)
                                            {
                                                flag38 = true;
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    this.localAI[1] = 0f;
                                }
                                float num475 = 16f;
                                if (Main.dayTime || Main.player[this.target].dead)
                                {
                                    flag38 = false;
                                    this.velocity.Y++;
                                    if (this.position.Y > (Main.worldSurface * 16.0))
                                    {
                                        this.velocity.Y++;
                                        num475 = 32f;
                                    }
                                    if (this.position.Y > (Main.rockLayer * 16.0))
                                    {
                                        for (int num476 = 0; num476 < 200; num476++)
                                        {
                                            if (Main.npc[num476].aiStyle == this.aiStyle)
                                            {
                                                Main.npc[num476].active = false;
                                            }
                                        }
                                    }
                                }
                                float num477 = 0.1f;
                                float num478 = 0.15f;
                                Vector2 vector58 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num479 = Main.player[this.target].position.X + (Main.player[this.target].width / 2);
                                float num480 = Main.player[this.target].position.Y + (Main.player[this.target].height / 2);
                                num479 = ((int) (num479 / 16f)) * 0x10;
                                num480 = ((int) (num480 / 16f)) * 0x10;
                                vector58.X = ((int) (vector58.X / 16f)) * 0x10;
                                vector58.Y = ((int) (vector58.Y / 16f)) * 0x10;
                                num479 -= vector58.X;
                                num480 -= vector58.Y;
                                float num481 = (float) Math.Sqrt((double) ((num479 * num479) + (num480 * num480)));
                                if ((this.ai[1] > 0f) && (this.ai[1] < Main.npc.Length))
                                {
                                    try
                                    {
                                        vector58 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                        num479 = (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - vector58.X;
                                        num480 = (Main.npc[(int) this.ai[1]].position.Y + (Main.npc[(int) this.ai[1]].height / 2)) - vector58.Y;
                                    }
                                    catch
                                    {
                                    }
                                    this.rotation = ((float) Math.Atan2((double) num480, (double) num479)) + 1.57f;
                                    num481 = (float) Math.Sqrt((double) ((num479 * num479) + (num480 * num480)));
                                    int num482 = (int) (44f * this.scale);
                                    num481 = (num481 - num482) / num481;
                                    num479 *= num481;
                                    num480 *= num481;
                                    this.velocity = new Vector2();
                                    this.position.X += num479;
                                    this.position.Y += num480;
                                }
                                else
                                {
                                    if (!flag38)
                                    {
                                        this.TargetClosest(true);
                                        this.velocity.Y += 0.15f;
                                        if (this.velocity.Y > num475)
                                        {
                                            this.velocity.Y = num475;
                                        }
                                        if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num475 * 0.4))
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X -= num477 * 1.1f;
                                            }
                                            else
                                            {
                                                this.velocity.X += num477 * 1.1f;
                                            }
                                        }
                                        else if (this.velocity.Y == num475)
                                        {
                                            if (this.velocity.X < num479)
                                            {
                                                this.velocity.X += num477;
                                            }
                                            else if (this.velocity.X > num479)
                                            {
                                                this.velocity.X -= num477;
                                            }
                                        }
                                        else if (this.velocity.Y > 4f)
                                        {
                                            if (this.velocity.X < 0f)
                                            {
                                                this.velocity.X += num477 * 0.9f;
                                            }
                                            else
                                            {
                                                this.velocity.X -= num477 * 0.9f;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (this.soundDelay == 0)
                                        {
                                            float num483 = num481 / 40f;
                                            if (num483 < 10f)
                                            {
                                                num483 = 10f;
                                            }
                                            if (num483 > 20f)
                                            {
                                                num483 = 20f;
                                            }
                                            this.soundDelay = (int) num483;
                                            Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 1);
                                        }
                                        num481 = (float) Math.Sqrt((double) ((num479 * num479) + (num480 * num480)));
                                        float num484 = Math.Abs(num479);
                                        float num485 = Math.Abs(num480);
                                        float num486 = num475 / num481;
                                        num479 *= num486;
                                        num480 *= num486;
                                        if ((((this.velocity.X > 0f) && (num479 > 0f)) || ((this.velocity.X < 0f) && (num479 < 0f))) && (((this.velocity.Y > 0f) && (num480 > 0f)) || ((this.velocity.Y < 0f) && (num480 < 0f))))
                                        {
                                            if (this.velocity.X < num479)
                                            {
                                                this.velocity.X += num478;
                                            }
                                            else if (this.velocity.X > num479)
                                            {
                                                this.velocity.X -= num478;
                                            }
                                            if (this.velocity.Y < num480)
                                            {
                                                this.velocity.Y += num478;
                                            }
                                            else if (this.velocity.Y > num480)
                                            {
                                                this.velocity.Y -= num478;
                                            }
                                        }
                                        if ((((this.velocity.X > 0f) && (num479 > 0f)) || ((this.velocity.X < 0f) && (num479 < 0f))) || (((this.velocity.Y > 0f) && (num480 > 0f)) || ((this.velocity.Y < 0f) && (num480 < 0f))))
                                        {
                                            if (this.velocity.X < num479)
                                            {
                                                this.velocity.X += num477;
                                            }
                                            else if (this.velocity.X > num479)
                                            {
                                                this.velocity.X -= num477;
                                            }
                                            if (this.velocity.Y < num480)
                                            {
                                                this.velocity.Y += num477;
                                            }
                                            else if (this.velocity.Y > num480)
                                            {
                                                this.velocity.Y -= num477;
                                            }
                                            if ((Math.Abs(num480) < (num475 * 0.2)) && (((this.velocity.X > 0f) && (num479 < 0f)) || ((this.velocity.X < 0f) && (num479 > 0f))))
                                            {
                                                if (this.velocity.Y > 0f)
                                                {
                                                    this.velocity.Y += num477 * 2f;
                                                }
                                                else
                                                {
                                                    this.velocity.Y -= num477 * 2f;
                                                }
                                            }
                                            if ((Math.Abs(num479) < (num475 * 0.2)) && (((this.velocity.Y > 0f) && (num480 < 0f)) || ((this.velocity.Y < 0f) && (num480 > 0f))))
                                            {
                                                if (this.velocity.X > 0f)
                                                {
                                                    this.velocity.X += num477 * 2f;
                                                }
                                                else
                                                {
                                                    this.velocity.X -= num477 * 2f;
                                                }
                                            }
                                        }
                                        else if (num484 > num485)
                                        {
                                            if (this.velocity.X < num479)
                                            {
                                                this.velocity.X += num477 * 1.1f;
                                            }
                                            else if (this.velocity.X > num479)
                                            {
                                                this.velocity.X -= num477 * 1.1f;
                                            }
                                            if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num475 * 0.5))
                                            {
                                                if (this.velocity.Y > 0f)
                                                {
                                                    this.velocity.Y += num477;
                                                }
                                                else
                                                {
                                                    this.velocity.Y -= num477;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (this.velocity.Y < num480)
                                            {
                                                this.velocity.Y += num477 * 1.1f;
                                            }
                                            else if (this.velocity.Y > num480)
                                            {
                                                this.velocity.Y -= num477 * 1.1f;
                                            }
                                            if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num475 * 0.5))
                                            {
                                                if (this.velocity.X > 0f)
                                                {
                                                    this.velocity.X += num477;
                                                }
                                                else
                                                {
                                                    this.velocity.X -= num477;
                                                }
                                            }
                                        }
                                    }
                                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 1.57f;
                                    if (this.type == 0x86)
                                    {
                                        if (flag38)
                                        {
                                            if (this.localAI[0] != 1f)
                                            {
                                                this.netUpdate = true;
                                            }
                                            this.localAI[0] = 1f;
                                        }
                                        else
                                        {
                                            if (this.localAI[0] != 0f)
                                            {
                                                this.netUpdate = true;
                                            }
                                            this.localAI[0] = 0f;
                                        }
                                        if (((((this.velocity.X > 0f) && (this.oldVelocity.X < 0f)) || ((this.velocity.X < 0f) && (this.oldVelocity.X > 0f))) || (((this.velocity.Y > 0f) && (this.oldVelocity.Y < 0f)) || ((this.velocity.Y < 0f) && (this.oldVelocity.Y > 0f)))) && !this.justHit)
                                        {
                                            this.netUpdate = true;
                                        }
                                    }
                                }
                            }
                            return;
                        }
                        this.TargetClosest(true);
                        this.velocity.X *= 0.93f;
                        if ((this.velocity.X > -0.1) && (this.velocity.X < 0.1))
                        {
                            this.velocity.X = 0f;
                        }
                        if (this.ai[0] == 0f)
                        {
                            this.ai[0] = 500f;
                        }
                        if ((this.ai[2] != 0f) && (this.ai[3] != 0f))
                        {
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 8);
                            for (int num143 = 0; num143 < 50; num143++)
                            {
                                if ((this.type == 0x1d) || (this.type == 0x2d))
                                {
                                    color = new Color();
                                    int num144 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1b, 0f, 0f, 100, color, (float) Main.rand.Next(1, 3));
                                    Dust dust2 = Main.dust[num144];
                                    dust2.velocity = (Vector2) (dust2.velocity * 3f);
                                    if (Main.dust[num144].scale > 1f)
                                    {
                                        Main.dust[num144].noGravity = true;
                                    }
                                }
                                else if (this.type == 0x20)
                                {
                                    color = new Color();
                                    int num145 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1d, 0f, 0f, 100, color, 2.5f);
                                    Dust dust3 = Main.dust[num145];
                                    dust3.velocity = (Vector2) (dust3.velocity * 3f);
                                    Main.dust[num145].noGravity = true;
                                }
                                else
                                {
                                    color = new Color();
                                    int num146 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color, 2.5f);
                                    Dust dust4 = Main.dust[num146];
                                    dust4.velocity = (Vector2) (dust4.velocity * 3f);
                                    Main.dust[num146].noGravity = true;
                                }
                            }
                            this.position.X = ((this.ai[2] * 16f) - (this.width / 2)) + 8f;
                            this.position.Y = (this.ai[3] * 16f) - this.height;
                            this.velocity.X = 0f;
                            this.velocity.Y = 0f;
                            this.ai[2] = 0f;
                            this.ai[3] = 0f;
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 8);
                            for (int num147 = 0; num147 < 50; num147++)
                            {
                                if ((this.type == 0x1d) || (this.type == 0x2d))
                                {
                                    color = new Color();
                                    int num148 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1b, 0f, 0f, 100, color, (float) Main.rand.Next(1, 3));
                                    Dust dust5 = Main.dust[num148];
                                    dust5.velocity = (Vector2) (dust5.velocity * 3f);
                                    if (Main.dust[num148].scale > 1f)
                                    {
                                        Main.dust[num148].noGravity = true;
                                    }
                                }
                                else if (this.type == 0x20)
                                {
                                    color = new Color();
                                    int num149 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1d, 0f, 0f, 100, color, 2.5f);
                                    Dust dust6 = Main.dust[num149];
                                    dust6.velocity = (Vector2) (dust6.velocity * 3f);
                                    Main.dust[num149].noGravity = true;
                                }
                                else
                                {
                                    color = new Color();
                                    int num150 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color, 2.5f);
                                    Dust dust7 = Main.dust[num150];
                                    dust7.velocity = (Vector2) (dust7.velocity * 3f);
                                    Main.dust[num150].noGravity = true;
                                }
                            }
                        }
                        this.ai[0]++;
                        if (((this.ai[0] == 100f) || (this.ai[0] == 200f)) || (this.ai[0] == 300f))
                        {
                            this.ai[1] = 30f;
                            this.netUpdate = true;
                            goto Label_9E34;
                        }
                        if ((this.ai[0] < 650f) || (Main.netMode == 1))
                        {
                            goto Label_9E34;
                        }
                        this.ai[0] = 1f;
                        int num151 = ((int) Main.player[this.target].position.X) / 0x10;
                        int num152 = ((int) Main.player[this.target].position.Y) / 0x10;
                        int num153 = ((int) this.position.X) / 0x10;
                        int num154 = ((int) this.position.Y) / 0x10;
                        int num155 = 20;
                        int num156 = 0;
                        bool flag20 = false;
                        if ((Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) + Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y))) > 2000f)
                        {
                            num156 = 100;
                            flag20 = true;
                        }
                    Label_9E20:
                        while (!flag20 && (num156 < 100))
                        {
                            num156++;
                            int num157 = Main.rand.Next(num151 - num155, num151 + num155);
                            for (int num159 = Main.rand.Next(num152 - num155, num152 + num155); num159 < (num152 + num155); num159++)
                            {
                                if (((((num159 < (num152 - 4)) || (num159 > (num152 + 4))) || ((num157 < (num151 - 4)) || (num157 > (num151 + 4)))) && (((num159 < (num154 - 1)) || (num159 > (num154 + 1))) || ((num157 < (num153 - 1)) || (num157 > (num153 + 1))))) && Main.tile[num157, num159].active)
                                {
                                    bool flag21 = true;
                                    if ((this.type == 0x20) && (Main.tile[num157, num159 - 1].wall == 0))
                                    {
                                        flag21 = false;
                                    }
                                    else if (Main.tile[num157, num159 - 1].lava)
                                    {
                                        flag21 = false;
                                    }
                                    if ((flag21 && Main.tileSolid[Main.tile[num157, num159].type]) && !Collision.SolidTiles(num157 - 1, num157 + 1, num159 - 4, num159 - 1))
                                    {
                                        this.ai[1] = 20f;
                                        this.ai[2] = num157;
                                        this.ai[3] = num159;
                                        flag20 = true;
                                        goto Label_9E20;
                                    }
                                }
                            }
                        }
                        this.netUpdate = true;
                        goto Label_9E34;
                    }
                    int num135 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                    int num136 = ((int) ((this.position.Y + this.height) + 1f)) / 0x10;
                    if (this.type == 0x6b)
                    {
                        savedGoblin = true;
                    }
                    if (this.type == 0x6c)
                    {
                        savedWizard = true;
                    }
                    if (this.type == 0x7c)
                    {
                        savedMech = true;
                    }
                    if ((this.type == 0x2e) && (this.target == 0xff))
                    {
                        this.TargetClosest(true);
                    }
                    bool flag16 = false;
                    this.directionY = -1;
                    if (this.direction == 0)
                    {
                        this.direction = 1;
                    }
                    for (int num137 = 0; num137 < 0xff; num137++)
                    {
                        if (Main.player[num137].active && (Main.player[num137].talkNPC == this.whoAmI))
                        {
                            flag16 = true;
                            if (this.ai[0] != 0f)
                            {
                                this.netUpdate = true;
                            }
                            this.ai[0] = 0f;
                            this.ai[1] = 300f;
                            this.ai[2] = 100f;
                            if ((Main.player[num137].position.X + (Main.player[num137].width / 2)) < (this.position.X + (this.width / 2)))
                            {
                                this.direction = -1;
                            }
                            else
                            {
                                this.direction = 1;
                            }
                        }
                    }
                    if (this.ai[3] > 0f)
                    {
                        this.life = -1;
                        this.HitEffect(0, 10.0);
                        this.active = false;
                        if (this.type == 0x25)
                        {
                            Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                        }
                    }
                    if ((this.type == 0x25) && (Main.netMode != 1))
                    {
                        this.homeless = false;
                        this.homeTileX = Main.dungeonX;
                        this.homeTileY = Main.dungeonY;
                        if (downedBoss3)
                        {
                            this.ai[3] = 1f;
                            this.netUpdate = true;
                        }
                    }
                    int homeTileY = this.homeTileY;
                    if ((Main.netMode != 1) && (this.homeTileY > 0))
                    {
                        while (!WorldGen.SolidTile(this.homeTileX, homeTileY))
                        {
                            if (homeTileY >= (Main.maxTilesY - 20))
                            {
                                break;
                            }
                            homeTileY++;
                        }
                    }
                    if (((((Main.netMode != 1) && this.townNPC) && (!Main.dayTime || Main.tileDungeon[Main.tile[num135, num136].type])) && ((num135 != this.homeTileX) || (num136 != homeTileY))) && !this.homeless)
                    {
                        bool flag17 = true;
                        for (int num139 = 0; num139 < 2; num139++)
                        {
                            Rectangle rectangle3 = new Rectangle(((((int) this.position.X) + (this.width / 2)) - (sWidth / 2)) - safeRangeX, ((((int) this.position.Y) + (this.height / 2)) - (sHeight / 2)) - safeRangeY, sWidth + (safeRangeX * 2), sHeight + (safeRangeY * 2));
                            if (num139 == 1)
                            {
                                rectangle3 = new Rectangle((((this.homeTileX * 0x10) + 8) - (sWidth / 2)) - safeRangeX, (((homeTileY * 0x10) + 8) - (sHeight / 2)) - safeRangeY, sWidth + (safeRangeX * 2), sHeight + (safeRangeY * 2));
                            }
                            for (int num140 = 0; num140 < 0xff; num140++)
                            {
                                if (Main.player[num140].active)
                                {
                                    Rectangle rectangle4 = new Rectangle((int) Main.player[num140].position.X, (int) Main.player[num140].position.Y, Main.player[num140].width, Main.player[num140].height);
                                    if (rectangle4.Intersects(rectangle3))
                                    {
                                        flag17 = false;
                                        break;
                                    }
                                }
                                if (!flag17)
                                {
                                    break;
                                }
                            }
                        }
                        if (flag17)
                        {
                            if ((this.type == 0x25) || !Collision.SolidTiles(this.homeTileX - 1, this.homeTileX + 1, homeTileY - 3, homeTileY - 1))
                            {
                                this.velocity.X = 0f;
                                this.velocity.Y = 0f;
                                this.position.X = ((this.homeTileX * 0x10) + 8) - (this.width / 2);
                                this.position.Y = ((homeTileY * 0x10) - this.height) - 0.1f;
                                this.netUpdate = true;
                            }
                            else
                            {
                                this.homeless = true;
                                WorldGen.QuickFindHome(this.whoAmI);
                            }
                        }
                    }
                    if (this.ai[0] == 0f)
                    {
                        if (this.ai[2] > 0f)
                        {
                            this.ai[2]--;
                        }
                        if ((!Main.dayTime && !flag16) && (this.type != 0x2e))
                        {
                            if (Main.netMode != 1)
                            {
                                if ((num135 == this.homeTileX) && (num136 == homeTileY))
                                {
                                    if (this.velocity.X != 0f)
                                    {
                                        this.netUpdate = true;
                                    }
                                    if (this.velocity.X > 0.1)
                                    {
                                        this.velocity.X -= 0.1f;
                                    }
                                    else if (this.velocity.X < -0.1)
                                    {
                                        this.velocity.X += 0.1f;
                                    }
                                    else
                                    {
                                        this.velocity.X = 0f;
                                    }
                                }
                                else if (!flag16)
                                {
                                    if (num135 > this.homeTileX)
                                    {
                                        this.direction = -1;
                                    }
                                    else
                                    {
                                        this.direction = 1;
                                    }
                                    this.ai[0] = 1f;
                                    this.ai[1] = 200 + Main.rand.Next(200);
                                    this.ai[2] = 0f;
                                    this.netUpdate = true;
                                }
                            }
                        }
                        else
                        {
                            if (this.velocity.X > 0.1)
                            {
                                this.velocity.X -= 0.1f;
                            }
                            else if (this.velocity.X < -0.1)
                            {
                                this.velocity.X += 0.1f;
                            }
                            else
                            {
                                this.velocity.X = 0f;
                            }
                            if (Main.netMode != 1)
                            {
                                if (this.ai[1] > 0f)
                                {
                                    this.ai[1]--;
                                }
                                if (this.ai[1] <= 0f)
                                {
                                    this.ai[0] = 1f;
                                    this.ai[1] = 200 + Main.rand.Next(200);
                                    if (this.type == 0x2e)
                                    {
                                        this.ai[1] += Main.rand.Next(200, 400);
                                    }
                                    this.ai[2] = 0f;
                                    this.netUpdate = true;
                                }
                            }
                        }
                        if ((Main.netMode != 1) && (Main.dayTime || ((num135 == this.homeTileX) && (num136 == homeTileY))))
                        {
                            if ((num135 >= (this.homeTileX - 0x19)) && (num135 <= (this.homeTileX + 0x19)))
                            {
                                if ((Main.rand.Next(80) == 0) && (this.ai[2] == 0f))
                                {
                                    this.ai[2] = 200f;
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                    return;
                                }
                            }
                            else if (this.ai[2] == 0f)
                            {
                                if ((num135 < (this.homeTileX - 50)) && (this.direction == -1))
                                {
                                    this.direction = 1;
                                    this.netUpdate = true;
                                    return;
                                }
                                if ((num135 > (this.homeTileX + 50)) && (this.direction == 1))
                                {
                                    this.direction = -1;
                                    this.netUpdate = true;
                                    return;
                                }
                            }
                        }
                        return;
                    }
                    if (this.ai[0] == 1f)
                    {
                        if ((((Main.netMode != 1) && !Main.dayTime) && ((num135 == this.homeTileX) && (num136 == this.homeTileY))) && (this.type != 0x2e))
                        {
                            this.ai[0] = 0f;
                            this.ai[1] = 200 + Main.rand.Next(200);
                            this.ai[2] = 60f;
                            this.netUpdate = true;
                            return;
                        }
                        if ((((Main.netMode != 1) && !this.homeless) && !Main.tileDungeon[Main.tile[num135, num136].type]) && ((num135 < (this.homeTileX - 0x23)) || (num135 > (this.homeTileX + 0x23))))
                        {
                            if ((this.position.X < (this.homeTileX * 0x10)) && (this.direction == -1))
                            {
                                this.ai[1] -= 5f;
                            }
                            else if ((this.position.X > (this.homeTileX * 0x10)) && (this.direction == 1))
                            {
                                this.ai[1] -= 5f;
                            }
                        }
                        this.ai[1]--;
                        if (this.ai[1] <= 0f)
                        {
                            this.ai[0] = 0f;
                            this.ai[1] = 300 + Main.rand.Next(300);
                            if (this.type == 0x2e)
                            {
                                this.ai[1] -= Main.rand.Next(100);
                            }
                            this.ai[2] = 60f;
                            this.netUpdate = true;
                        }
                        if (this.closeDoor && ((((this.position.X + (this.width / 2)) / 16f) > (this.doorX + 2)) || (((this.position.X + (this.width / 2)) / 16f) < (this.doorX - 2))))
                        {
                            if (WorldGen.CloseDoor(this.doorX, this.doorY, false))
                            {
                                this.closeDoor = false;
                                NetMessage.SendData(0x13, -1, -1, "", 1, (float) this.doorX, (float) this.doorY, (float) this.direction, 0);
                            }
                            if (((((this.position.X + (this.width / 2)) / 16f) > (this.doorX + 4)) || (((this.position.X + (this.width / 2)) / 16f) < (this.doorX - 4))) || ((((this.position.Y + (this.height / 2)) / 16f) > (this.doorY + 4)) || (((this.position.Y + (this.height / 2)) / 16f) < (this.doorY - 4))))
                            {
                                this.closeDoor = false;
                            }
                        }
                        if ((this.velocity.X < -1f) || (this.velocity.X > 1f))
                        {
                            if (this.velocity.Y == 0f)
                            {
                                this.velocity = (Vector2) (this.velocity * 0.8f);
                            }
                        }
                        else if ((this.velocity.X < 1.15) && (this.direction == 1))
                        {
                            this.velocity.X += 0.07f;
                            if (this.velocity.X > 1f)
                            {
                                this.velocity.X = 1f;
                            }
                        }
                        else if ((this.velocity.X > -1f) && (this.direction == -1))
                        {
                            this.velocity.X -= 0.07f;
                            if (this.velocity.X > 1f)
                            {
                                this.velocity.X = 1f;
                            }
                        }
                        if (this.velocity.Y != 0f)
                        {
                            return;
                        }
                        if (this.position.X == this.ai[2])
                        {
                            this.direction *= -1;
                        }
                        this.ai[2] = -1f;
                        int num141 = (int) (((this.position.X + (this.width / 2)) + (15 * this.direction)) / 16f);
                        int num142 = (int) (((this.position.Y + this.height) - 16f) / 16f);
                        if (Main.tile[num141, num142] == null)
                        {
                            Main.tile[num141, num142] = new Tile();
                        }
                        if (Main.tile[num141, num142 - 1] == null)
                        {
                            Main.tile[num141, num142 - 1] = new Tile();
                        }
                        if (Main.tile[num141, num142 - 2] == null)
                        {
                            Main.tile[num141, num142 - 2] = new Tile();
                        }
                        if (Main.tile[num141, num142 - 3] == null)
                        {
                            Main.tile[num141, num142 - 3] = new Tile();
                        }
                        if (Main.tile[num141, num142 + 1] == null)
                        {
                            Main.tile[num141, num142 + 1] = new Tile();
                        }
                        if (Main.tile[num141 + this.direction, num142 - 1] == null)
                        {
                            Main.tile[num141 + this.direction, num142 - 1] = new Tile();
                        }
                        if (Main.tile[num141 + this.direction, num142 + 1] == null)
                        {
                            Main.tile[num141 + this.direction, num142 + 1] = new Tile();
                        }
                        if (((this.townNPC && Main.tile[num141, num142 - 2].active) && (Main.tile[num141, num142 - 2].type == 10)) && ((Main.rand.Next(10) == 0) || !Main.dayTime))
                        {
                            if (Main.netMode != 1)
                            {
                                if (WorldGen.OpenDoor(num141, num142 - 2, this.direction))
                                {
                                    this.closeDoor = true;
                                    this.doorX = num141;
                                    this.doorY = num142 - 2;
                                    NetMessage.SendData(0x13, -1, -1, "", 0, (float) num141, (float) (num142 - 2), (float) this.direction, 0);
                                    this.netUpdate = true;
                                    this.ai[1] += 80f;
                                    return;
                                }
                                if (WorldGen.OpenDoor(num141, num142 - 2, -this.direction))
                                {
                                    this.closeDoor = true;
                                    this.doorX = num141;
                                    this.doorY = num142 - 2;
                                    NetMessage.SendData(0x13, -1, -1, "", 0, (float) num141, (float) (num142 - 2), (float) -this.direction, 0);
                                    this.netUpdate = true;
                                    this.ai[1] += 80f;
                                    return;
                                }
                                this.direction *= -1;
                                this.netUpdate = true;
                                return;
                            }
                            return;
                        }
                        if (((this.velocity.X < 0f) && (this.spriteDirection == -1)) || ((this.velocity.X > 0f) && (this.spriteDirection == 1)))
                        {
                            if ((Main.tile[num141, num142 - 2].active && Main.tileSolid[Main.tile[num141, num142 - 2].type]) && !Main.tileSolidTop[Main.tile[num141, num142 - 2].type])
                            {
                                if (((this.direction == 1) && !Collision.SolidTiles(num141 - 2, num141 - 1, num142 - 5, num142 - 1)) || ((this.direction == -1) && !Collision.SolidTiles(num141 + 1, num141 + 2, num142 - 5, num142 - 1)))
                                {
                                    if (!Collision.SolidTiles(num141, num141, num142 - 5, num142 - 3))
                                    {
                                        this.velocity.Y = -6f;
                                        this.netUpdate = true;
                                    }
                                    else
                                    {
                                        this.direction *= -1;
                                        this.netUpdate = true;
                                    }
                                }
                                else
                                {
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                }
                            }
                            else if ((Main.tile[num141, num142 - 1].active && Main.tileSolid[Main.tile[num141, num142 - 1].type]) && !Main.tileSolidTop[Main.tile[num141, num142 - 1].type])
                            {
                                if (((this.direction == 1) && !Collision.SolidTiles(num141 - 2, num141 - 1, num142 - 4, num142 - 1)) || ((this.direction == -1) && !Collision.SolidTiles(num141 + 1, num141 + 2, num142 - 4, num142 - 1)))
                                {
                                    if (!Collision.SolidTiles(num141, num141, num142 - 4, num142 - 2))
                                    {
                                        this.velocity.Y = -5f;
                                        this.netUpdate = true;
                                    }
                                    else
                                    {
                                        this.direction *= -1;
                                        this.netUpdate = true;
                                    }
                                }
                                else
                                {
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                }
                            }
                            else if ((Main.tile[num141, num142].active && Main.tileSolid[Main.tile[num141, num142].type]) && !Main.tileSolidTop[Main.tile[num141, num142].type])
                            {
                                if (((this.direction == 1) && !Collision.SolidTiles(num141 - 2, num141, num142 - 3, num142 - 1)) || ((this.direction == -1) && !Collision.SolidTiles(num141, num141 + 2, num142 - 3, num142 - 1)))
                                {
                                    this.velocity.Y = -3.6f;
                                    this.netUpdate = true;
                                }
                                else
                                {
                                    this.direction *= -1;
                                    this.netUpdate = true;
                                }
                            }
                            try
                            {
                                if (Main.tile[num141, num142 + 1] == null)
                                {
                                    Main.tile[num141, num142 + 1] = new Tile();
                                }
                                if (Main.tile[num141 - this.direction, num142 + 1] == null)
                                {
                                    Main.tile[num141 - this.direction, num142 + 1] = new Tile();
                                }
                                if (Main.tile[num141, num142 + 2] == null)
                                {
                                    Main.tile[num141, num142 + 2] = new Tile();
                                }
                                if (Main.tile[num141 - this.direction, num142 + 2] == null)
                                {
                                    Main.tile[num141 - this.direction, num142 + 2] = new Tile();
                                }
                                if (Main.tile[num141, num142 + 3] == null)
                                {
                                    Main.tile[num141, num142 + 3] = new Tile();
                                }
                                if (Main.tile[num141 - this.direction, num142 + 3] == null)
                                {
                                    Main.tile[num141 - this.direction, num142 + 3] = new Tile();
                                }
                                if (Main.tile[num141, num142 + 4] == null)
                                {
                                    Main.tile[num141, num142 + 4] = new Tile();
                                }
                                if (Main.tile[num141 - this.direction, num142 + 4] == null)
                                {
                                    Main.tile[num141 - this.direction, num142 + 4] = new Tile();
                                }
                                else if (((((((num135 >= (this.homeTileX - 0x23)) && (num135 <= (this.homeTileX + 0x23))) && (!Main.tile[num141, num142 + 1].active || !Main.tileSolid[Main.tile[num141, num142 + 1].type])) && (!Main.tile[num141 - this.direction, num142 + 1].active || !Main.tileSolid[Main.tile[num141 - this.direction, num142 + 1].type])) && ((!Main.tile[num141, num142 + 2].active || !Main.tileSolid[Main.tile[num141, num142 + 2].type]) && (!Main.tile[num141 - this.direction, num142 + 2].active || !Main.tileSolid[Main.tile[num141 - this.direction, num142 + 2].type]))) && (((!Main.tile[num141, num142 + 3].active || !Main.tileSolid[Main.tile[num141, num142 + 3].type]) && (!Main.tile[num141 - this.direction, num142 + 3].active || !Main.tileSolid[Main.tile[num141 - this.direction, num142 + 3].type])) && ((!Main.tile[num141, num142 + 4].active || !Main.tileSolid[Main.tile[num141, num142 + 4].type]) && (!Main.tile[num141 - this.direction, num142 + 4].active || !Main.tileSolid[Main.tile[num141 - this.direction, num142 + 4].type])))) && (this.type != 0x2e))
                                {
                                    this.direction *= -1;
                                    this.velocity.X *= -1f;
                                    this.netUpdate = true;
                                }
                            }
                            catch
                            {
                            }
                            if (this.velocity.Y < 0f)
                            {
                                this.ai[2] = this.position.X;
                            }
                        }
                        if ((this.velocity.Y < 0f) && this.wet)
                        {
                            this.velocity.Y *= 1.2f;
                        }
                        if ((this.velocity.Y >= 0f) || (this.type != 0x2e))
                        {
                            return;
                        }
                        this.velocity.Y *= 1.2f;
                    }
                    return;
                }
                if ((this.type == 0x75) && (this.localAI[1] == 0f))
                {
                    this.localAI[1] = 1f;
                    Main.PlaySound(4, (int) this.position.X, (int) this.position.Y, 13);
                    int num100 = 1;
                    if (this.velocity.X < 0f)
                    {
                        num100 = -1;
                    }
                    for (int num101 = 0; num101 < 20; num101++)
                    {
                        color = new Color();
                        Dust.NewDust(new Vector2(this.position.X - 20f, this.position.Y - 20f), this.width + 40, this.height + 40, 5, (float) (num100 * 8), -1f, 0, color, 1f);
                    }
                }
                if ((this.type >= 13) && (this.type <= 15))
                {
                    this.realLife = -1;
                }
                else if (this.ai[3] > 0f)
                {
                    this.realLife = (int) this.ai[3];
                }
                if (((this.target < 0) || (this.target == 0xff)) || Main.player[this.target].dead)
                {
                    this.TargetClosest(true);
                }
                if (Main.player[this.target].dead && (this.timeLeft > 300))
                {
                    this.timeLeft = 300;
                }
                if (Main.netMode == 1)
                {
                    goto Label_6D73;
                }
                if ((this.type == 0x57) && (this.ai[0] == 0f))
                {
                    this.ai[3] = this.whoAmI;
                    this.realLife = this.whoAmI;
                    int num102 = 0;
                    int num103 = this.whoAmI;
                    for (int num104 = 0; num104 < 14; num104++)
                    {
                        int num105 = 0x59;
                        switch (num104)
                        {
                            case 1:
                            case 8:
                                num105 = 0x58;
                                break;

                            case 11:
                                num105 = 90;
                                break;

                            case 12:
                                num105 = 0x5b;
                                break;

                            case 13:
                                num105 = 0x5c;
                                break;
                        }
                        num102 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, num105, this.whoAmI);
                        Main.npc[num102].ai[3] = this.whoAmI;
                        Main.npc[num102].realLife = this.whoAmI;
                        Main.npc[num102].ai[1] = num103;
                        Main.npc[num103].ai[0] = num102;
                        NetMessage.SendData(0x17, -1, -1, "", num102, 0f, 0f, 0f, 0);
                        num103 = num102;
                    }
                }
                if ((((((this.type == 7) || (this.type == 8)) || ((this.type == 10) || (this.type == 11))) || (((this.type == 13) || (this.type == 14)) || ((this.type == 0x27) || (this.type == 40)))) || ((((this.type == 0x5f) || (this.type == 0x60)) || ((this.type == 0x62) || (this.type == 0x63))) || ((this.type == 0x75) || (this.type == 0x76)))) && (this.ai[0] == 0f))
                {
                    if ((((this.type == 7) || (this.type == 10)) || ((this.type == 13) || (this.type == 0x27))) || (((this.type == 0x5f) || (this.type == 0x62)) || (this.type == 0x75)))
                    {
                        if ((this.type < 13) || (this.type > 15))
                        {
                            this.ai[3] = this.whoAmI;
                            this.realLife = this.whoAmI;
                        }
                        this.ai[2] = Main.rand.Next(8, 13);
                        if (this.type == 10)
                        {
                            this.ai[2] = Main.rand.Next(4, 7);
                        }
                        if (this.type == 13)
                        {
                            this.ai[2] = Main.rand.Next(0x2d, 0x38);
                        }
                        if (this.type == 0x27)
                        {
                            this.ai[2] = Main.rand.Next(12, 0x13);
                        }
                        if (this.type == 0x5f)
                        {
                            this.ai[2] = Main.rand.Next(6, 12);
                        }
                        if (this.type == 0x62)
                        {
                            this.ai[2] = Main.rand.Next(20, 0x1a);
                        }
                        if (this.type == 0x75)
                        {
                            this.ai[2] = Main.rand.Next(3, 6);
                        }
                        this.ai[0] = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, this.type + 1, this.whoAmI);
                    }
                    else if (((((this.type == 8) || (this.type == 11)) || ((this.type == 14) || (this.type == 40))) || (((this.type == 0x60) || (this.type == 0x63)) || (this.type == 0x76))) && (this.ai[2] > 0f))
                    {
                        this.ai[0] = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, this.type, this.whoAmI);
                    }
                    else
                    {
                        this.ai[0] = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, this.type + 1, this.whoAmI);
                    }
                    if ((this.type < 13) || (this.type > 15))
                    {
                        Main.npc[(int) this.ai[0]].ai[3] = this.ai[3];
                        Main.npc[(int) this.ai[0]].realLife = this.realLife;
                    }
                    Main.npc[(int) this.ai[0]].ai[1] = this.whoAmI;
                    Main.npc[(int) this.ai[0]].ai[2] = this.ai[2] - 1f;
                    this.netUpdate = true;
                }
                if (((((((this.type == 8) || (this.type == 9)) || ((this.type == 11) || (this.type == 12))) || (((this.type == 40) || (this.type == 0x29)) || ((this.type == 0x60) || (this.type == 0x61)))) || (((this.type == 0x63) || (this.type == 100)) || ((this.type > 0x57) && (this.type <= 0x5c)))) || ((this.type == 0x76) || (this.type == 0x77))) && (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != this.aiStyle)))
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                if (((((((this.type == 7) || (this.type == 8)) || ((this.type == 10) || (this.type == 11))) || (((this.type == 0x27) || (this.type == 40)) || ((this.type == 0x5f) || (this.type == 0x60)))) || (((this.type == 0x62) || (this.type == 0x63)) || ((this.type >= 0x57) && (this.type < 0x5c)))) || ((this.type == 0x75) || (this.type == 0x76))) && (!Main.npc[(int) this.ai[0]].active || (Main.npc[(int) this.ai[0]].aiStyle != this.aiStyle)))
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                if (((this.type != 13) && (this.type != 14)) && (this.type != 15))
                {
                    goto Label_6D3F;
                }
                if (!Main.npc[(int) this.ai[1]].active && !Main.npc[(int) this.ai[0]].active)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                if ((this.type == 13) && !Main.npc[(int) this.ai[0]].active)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                if ((this.type == 15) && !Main.npc[(int) this.ai[1]].active)
                {
                    this.life = 0;
                    this.HitEffect(0, 10.0);
                    this.active = false;
                }
                if ((this.type == 14) && (!Main.npc[(int) this.ai[1]].active || (Main.npc[(int) this.ai[1]].aiStyle != this.aiStyle)))
                {
                    this.type = 13;
                    int num106 = this.whoAmI;
                    float num107 = ((float) this.life) / ((float) this.lifeMax);
                    float num108 = this.ai[0];
                    this.SetDefaults(this.type, -1f);
                    this.life = (int) (this.lifeMax * num107);
                    this.ai[0] = num108;
                    this.TargetClosest(true);
                    this.netUpdate = true;
                    this.whoAmI = num106;
                }
                if ((this.type == 14) && (!Main.npc[(int) this.ai[0]].active || (Main.npc[(int) this.ai[0]].aiStyle != this.aiStyle)))
                {
                    int num109 = this.whoAmI;
                    float num110 = ((float) this.life) / ((float) this.lifeMax);
                    float num111 = this.ai[1];
                    this.SetDefaults(this.type, -1f);
                    this.life = (int) (this.lifeMax * num110);
                    this.ai[1] = num111;
                    this.TargetClosest(true);
                    this.netUpdate = true;
                    this.whoAmI = num109;
                }
                if (this.life != 0)
                {
                    goto Label_6D3F;
                }
                flag11 = true;
                for (int j = 0; j < 200; j++)
                {
                    if (Main.npc[j].active && (((Main.npc[j].type == 13) || (Main.npc[j].type == 14)) || (Main.npc[j].type == 15)))
                    {
                        flag11 = false;
                        break;
                    }
                }
            }
            else
            {
                int num6 = 60;
                if (this.type == 120)
                {
                    num6 = 20;
                    if (this.ai[3] == -120f)
                    {
                        this.velocity = (Vector2) (this.velocity * 0f);
                        this.ai[3] = 0f;
                        Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 8);
                        Vector2 vector = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                        float num7 = (this.oldPos[2].X + (this.width * 0.5f)) - vector.X;
                        float num8 = (this.oldPos[2].Y + (this.height * 0.5f)) - vector.Y;
                        float num9 = (float) Math.Sqrt((double) ((num7 * num7) + (num8 * num8)));
                        num9 = 2f / num9;
                        num7 *= num9;
                        num8 *= num9;
                        for (int num10 = 0; num10 < 20; num10++)
                        {
                            color = new Color();
                            int num11 = Dust.NewDust(this.position, this.width, this.height, 0x47, num7, num8, 200, color, 2f);
                            Main.dust[num11].noGravity = true;
                            Main.dust[num11].velocity.X *= 2f;
                        }
                        for (int num12 = 0; num12 < 20; num12++)
                        {
                            color = new Color();
                            int num13 = Dust.NewDust(this.oldPos[2], this.width, this.height, 0x47, -num7, -num8, 200, color, 2f);
                            Main.dust[num13].noGravity = true;
                            Main.dust[num13].velocity.X *= 2f;
                        }
                    }
                }
                bool flag2 = false;
                bool flag3 = true;
                if ((((this.type == 0x2f) || (this.type == 0x43)) || ((this.type == 0x6d) || (this.type == 110))) || ((this.type == 0x6f) || (this.type == 120)))
                {
                    flag3 = false;
                }
                if (((this.type != 110) && (this.type != 0x6f)) || (this.ai[2] <= 0f))
                {
                    if ((this.velocity.Y == 0f) && (((this.velocity.X > 0f) && (this.direction < 0)) || ((this.velocity.X < 0f) && (this.direction > 0))))
                    {
                        flag2 = true;
                    }
                    if (((this.position.X == this.oldPosition.X) || (this.ai[3] >= num6)) || flag2)
                    {
                        this.ai[3]++;
                    }
                    else if ((Math.Abs(this.velocity.X) > 0.9) && (this.ai[3] > 0f))
                    {
                        this.ai[3]--;
                    }
                    if (this.ai[3] > (num6 * 10))
                    {
                        this.ai[3] = 0f;
                    }
                    if (this.justHit)
                    {
                        this.ai[3] = 0f;
                    }
                    if (this.ai[3] == num6)
                    {
                        this.netUpdate = true;
                    }
                }
                if (((((!Main.dayTime || (this.position.Y > (Main.worldSurface * 16.0))) || ((this.type == 0x1a) || (this.type == 0x1b))) || (((this.type == 0x1c) || (this.type == 0x1f)) || ((this.type == 0x2f) || (this.type == 0x43)))) || ((((this.type == 0x49) || (this.type == 0x4d)) || ((this.type == 0x4e) || (this.type == 0x4f))) || (((this.type == 80) || (this.type == 110)) || ((this.type == 0x6f) || (this.type == 120))))) && (this.ai[3] < num6))
                {
                    if (((((this.type == 3) || (this.type == 0x15)) || ((this.type == 0x1f) || (this.type == 0x4d))) || ((this.type == 110) || (this.type == 0x84))) && (Main.rand.Next(0x3e8) == 0))
                    {
                        Main.PlaySound(14, (int) this.position.X, (int) this.position.Y, 1);
                    }
                    if ((((this.type == 0x4e) || (this.type == 0x4f)) || (this.type == 80)) && (Main.rand.Next(500) == 0))
                    {
                        Main.PlaySound(0x1a, (int) this.position.X, (int) this.position.Y, 1);
                    }
                    this.TargetClosest(true);
                }
                else if (((this.type != 110) && (this.type != 0x6f)) || (this.ai[2] <= 0f))
                {
                    if ((Main.dayTime && ((this.position.Y / 16f) < Main.worldSurface)) && (this.timeLeft > 10))
                    {
                        this.timeLeft = 10;
                    }
                    if (this.velocity.X == 0f)
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.ai[0]++;
                            if (this.ai[0] >= 2f)
                            {
                                this.direction *= -1;
                                this.spriteDirection = this.direction;
                                this.ai[0] = 0f;
                            }
                        }
                    }
                    else
                    {
                        this.ai[0] = 0f;
                    }
                    if (this.direction == 0)
                    {
                        this.direction = 1;
                    }
                }
                if (this.type == 120)
                {
                    if ((this.velocity.X < -3f) || (this.velocity.X > 3f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.8f);
                        }
                    }
                    else if ((this.velocity.X < 3f) && (this.direction == 1))
                    {
                        if ((this.velocity.Y == 0f) && (this.velocity.X < 0f))
                        {
                            this.velocity.X *= 0.99f;
                        }
                        this.velocity.X += 0.07f;
                        if (this.velocity.X > 3f)
                        {
                            this.velocity.X = 3f;
                        }
                    }
                    else if ((this.velocity.X > -3f) && (this.direction == -1))
                    {
                        if ((this.velocity.Y == 0f) && (this.velocity.X > 0f))
                        {
                            this.velocity.X *= 0.99f;
                        }
                        this.velocity.X -= 0.07f;
                        if (this.velocity.X < -3f)
                        {
                            this.velocity.X = -3f;
                        }
                    }
                }
                else if (((this.type == 0x1b) || (this.type == 0x4d)) || (this.type == 0x68))
                {
                    if ((this.velocity.X < -2f) || (this.velocity.X > 2f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.8f);
                        }
                    }
                    else if ((this.velocity.X < 2f) && (this.direction == 1))
                    {
                        this.velocity.X += 0.07f;
                        if (this.velocity.X > 2f)
                        {
                            this.velocity.X = 2f;
                        }
                    }
                    else if ((this.velocity.X > -2f) && (this.direction == -1))
                    {
                        this.velocity.X -= 0.07f;
                        if (this.velocity.X < -2f)
                        {
                            this.velocity.X = -2f;
                        }
                    }
                }
                else if (this.type == 0x6d)
                {
                    if ((this.velocity.X < -2f) || (this.velocity.X > 2f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.8f);
                        }
                    }
                    else if ((this.velocity.X < 2f) && (this.direction == 1))
                    {
                        this.velocity.X += 0.04f;
                        if (this.velocity.X > 2f)
                        {
                            this.velocity.X = 2f;
                        }
                    }
                    else if ((this.velocity.X > -2f) && (this.direction == -1))
                    {
                        this.velocity.X -= 0.04f;
                        if (this.velocity.X < -2f)
                        {
                            this.velocity.X = -2f;
                        }
                    }
                }
                else if ((((this.type == 0x15) || (this.type == 0x1a)) || ((this.type == 0x1f) || (this.type == 0x2f))) || ((this.type == 0x49) || (this.type == 140)))
                {
                    if ((this.velocity.X < -1.5f) || (this.velocity.X > 1.5f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.8f);
                        }
                    }
                    else if ((this.velocity.X < 1.5f) && (this.direction == 1))
                    {
                        this.velocity.X += 0.07f;
                        if (this.velocity.X > 1.5f)
                        {
                            this.velocity.X = 1.5f;
                        }
                    }
                    else if ((this.velocity.X > -1.5f) && (this.direction == -1))
                    {
                        this.velocity.X -= 0.07f;
                        if (this.velocity.X < -1.5f)
                        {
                            this.velocity.X = -1.5f;
                        }
                    }
                }
                else if (this.type == 0x43)
                {
                    if ((this.velocity.X < -0.5f) || (this.velocity.X > 0.5f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.7f);
                        }
                    }
                    else if ((this.velocity.X < 0.5f) && (this.direction == 1))
                    {
                        this.velocity.X += 0.03f;
                        if (this.velocity.X > 0.5f)
                        {
                            this.velocity.X = 0.5f;
                        }
                    }
                    else if ((this.velocity.X > -0.5f) && (this.direction == -1))
                    {
                        this.velocity.X -= 0.03f;
                        if (this.velocity.X < -0.5f)
                        {
                            this.velocity.X = -0.5f;
                        }
                    }
                }
                else if (((this.type == 0x4e) || (this.type == 0x4f)) || (this.type == 80))
                {
                    float num14 = 1f;
                    float num15 = 0.05f;
                    if (this.life < (this.lifeMax / 2))
                    {
                        num14 = 2f;
                        num15 = 0.1f;
                    }
                    if (this.type == 0x4f)
                    {
                        num14 *= 1.5f;
                    }
                    if ((this.velocity.X < -num14) || (this.velocity.X > num14))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.7f);
                        }
                    }
                    else if ((this.velocity.X < num14) && (this.direction == 1))
                    {
                        this.velocity.X += num15;
                        if (this.velocity.X > num14)
                        {
                            this.velocity.X = num14;
                        }
                    }
                    else if ((this.velocity.X > -num14) && (this.direction == -1))
                    {
                        this.velocity.X -= num15;
                        if (this.velocity.X < -num14)
                        {
                            this.velocity.X = -num14;
                        }
                    }
                }
                else if ((this.type != 110) && (this.type != 0x6f))
                {
                    if ((this.velocity.X < -1f) || (this.velocity.X > 1f))
                    {
                        if (this.velocity.Y == 0f)
                        {
                            this.velocity = (Vector2) (this.velocity * 0.8f);
                        }
                    }
                    else if ((this.velocity.X < 1f) && (this.direction == 1))
                    {
                        this.velocity.X += 0.07f;
                        if (this.velocity.X > 1f)
                        {
                            this.velocity.X = 1f;
                        }
                    }
                    else if ((this.velocity.X > -1f) && (this.direction == -1))
                    {
                        this.velocity.X -= 0.07f;
                        if (this.velocity.X < -1f)
                        {
                            this.velocity.X = -1f;
                        }
                    }
                }
                if ((this.type == 110) || (this.type == 0x6f))
                {
                    if (this.confused)
                    {
                        this.ai[2] = 0f;
                    }
                    else
                    {
                        if (this.ai[1] > 0f)
                        {
                            this.ai[1]--;
                        }
                        if (this.justHit)
                        {
                            this.ai[1] = 30f;
                            this.ai[2] = 0f;
                        }
                        int num16 = 70;
                        if (this.type == 0x6f)
                        {
                            num16 = 180;
                        }
                        if (this.ai[2] > 0f)
                        {
                            this.TargetClosest(true);
                            if (this.ai[1] == (num16 / 2))
                            {
                                float num17 = 11f;
                                if (this.type == 0x6f)
                                {
                                    num17 = 9f;
                                }
                                Vector2 vector2 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                                float num18 = (Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector2.X;
                                float num19 = Math.Abs(num18) * 0.1f;
                                float num20 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector2.Y) - num19;
                                num18 += Main.rand.Next(-40, 0x29);
                                num20 += Main.rand.Next(-40, 0x29);
                                float num21 = (float) Math.Sqrt((double) ((num18 * num18) + (num20 * num20)));
                                this.netUpdate = true;
                                num21 = num17 / num21;
                                num18 *= num21;
                                num20 *= num21;
                                int num22 = 0x23;
                                if (this.type == 0x6f)
                                {
                                    num22 = 11;
                                }
                                int num23 = 0x52;
                                if (this.type == 0x6f)
                                {
                                    num23 = 0x51;
                                }
                                vector2.X += num18;
                                vector2.Y += num20;
                                if (Main.netMode != 1)
                                {
                                    Projectile.NewProjectile(vector2.X, vector2.Y, num18, num20, num23, num22, 0f, Main.myPlayer);
                                }
                                if (Math.Abs(num20) > (Math.Abs(num18) * 2f))
                                {
                                    if (num20 > 0f)
                                    {
                                        this.ai[2] = 1f;
                                    }
                                    else
                                    {
                                        this.ai[2] = 5f;
                                    }
                                }
                                else if (Math.Abs(num18) > (Math.Abs(num20) * 2f))
                                {
                                    this.ai[2] = 3f;
                                }
                                else if (num20 > 0f)
                                {
                                    this.ai[2] = 2f;
                                }
                                else
                                {
                                    this.ai[2] = 4f;
                                }
                            }
                            if ((this.velocity.Y != 0f) || (this.ai[1] <= 0f))
                            {
                                this.ai[2] = 0f;
                                this.ai[1] = 0f;
                            }
                            else
                            {
                                this.velocity.X *= 0.9f;
                                this.spriteDirection = this.direction;
                            }
                        }
                        if ((((this.ai[2] <= 0f) && (this.velocity.Y == 0f)) && ((this.ai[1] <= 0f) && !Main.player[this.target].dead)) && Collision.CanHit(this.position, this.width, this.height, Main.player[this.target].position, Main.player[this.target].width, Main.player[this.target].height))
                        {
                            float num24 = 10f;
                            Vector2 vector3 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                            float num25 = (Main.player[this.target].position.X + (Main.player[this.target].width * 0.5f)) - vector3.X;
                            float num26 = Math.Abs(num25) * 0.1f;
                            float num27 = ((Main.player[this.target].position.Y + (Main.player[this.target].height * 0.5f)) - vector3.Y) - num26;
                            num25 += Main.rand.Next(-40, 0x29);
                            num27 += Main.rand.Next(-40, 0x29);
                            float num28 = (float) Math.Sqrt((double) ((num25 * num25) + (num27 * num27)));
                            if (num28 < 700f)
                            {
                                this.netUpdate = true;
                                this.velocity.X *= 0.5f;
                                num28 = num24 / num28;
                                num25 *= num28;
                                num27 *= num28;
                                this.ai[2] = 3f;
                                this.ai[1] = num16;
                                if (Math.Abs(num27) > (Math.Abs(num25) * 2f))
                                {
                                    if (num27 > 0f)
                                    {
                                        this.ai[2] = 1f;
                                    }
                                    else
                                    {
                                        this.ai[2] = 5f;
                                    }
                                }
                                else if (Math.Abs(num25) > (Math.Abs(num27) * 2f))
                                {
                                    this.ai[2] = 3f;
                                }
                                else if (num27 > 0f)
                                {
                                    this.ai[2] = 2f;
                                }
                                else
                                {
                                    this.ai[2] = 4f;
                                }
                            }
                        }
                        if (this.ai[2] <= 0f)
                        {
                            if ((this.velocity.X < -1f) || (this.velocity.X > 1f))
                            {
                                if (this.velocity.Y == 0f)
                                {
                                    this.velocity = (Vector2) (this.velocity * 0.8f);
                                }
                            }
                            else if ((this.velocity.X < 1f) && (this.direction == 1))
                            {
                                this.velocity.X += 0.07f;
                                if (this.velocity.X > 1f)
                                {
                                    this.velocity.X = 1f;
                                }
                            }
                            else if ((this.velocity.X > -1f) && (this.direction == -1))
                            {
                                this.velocity.X -= 0.07f;
                                if (this.velocity.X < -1f)
                                {
                                    this.velocity.X = -1f;
                                }
                            }
                        }
                    }
                }
                if ((this.type == 0x6d) && (Main.netMode != 1))
                {
                    if (this.justHit)
                    {
                        this.ai[2] = 0f;
                    }
                    this.ai[2]++;
                    if (this.ai[2] > 450f)
                    {
                        Vector2 vector4 = new Vector2((this.position.X + (this.width * 0.5f)) - (this.direction * 0x18), this.position.Y + 4f);
                        int num29 = 3 * this.direction;
                        int num30 = -5;
                        int num31 = Projectile.NewProjectile(vector4.X, vector4.Y, (float) num29, (float) num30, 0x4b, 0, 0f, Main.myPlayer);
                        Main.projectile[num31].timeLeft = 300;
                        this.ai[2] = 0f;
                    }
                }
                bool flag4 = false;
                if (this.velocity.Y == 0f)
                {
                    int num32 = ((int) ((this.position.Y + this.height) + 8f)) / 0x10;
                    int num33 = ((int) this.position.X) / 0x10;
                    int num34 = (((int) this.position.X) + this.width) / 0x10;
                    for (int num35 = num33; num35 <= num34; num35++)
                    {
                        if (Main.tile[num35, num32] == null)
                        {
                            return;
                        }
                        if (Main.tile[num35, num32].active && Main.tileSolid[Main.tile[num35, num32].type])
                        {
                            flag4 = true;
                            break;
                        }
                    }
                }
                if (flag4)
                {
                    int num36 = (int) (((this.position.X + (this.width / 2)) + (15 * this.direction)) / 16f);
                    int num37 = (int) (((this.position.Y + this.height) - 15f) / 16f);
                    if (this.type == 0x6d)
                    {
                        num36 = (int) (((this.position.X + (this.width / 2)) + (((this.width / 2) + 0x10) * this.direction)) / 16f);
                    }
                    if (Main.tile[num36, num37] == null)
                    {
                        Main.tile[num36, num37] = new Tile();
                    }
                    if (Main.tile[num36, num37 - 1] == null)
                    {
                        Main.tile[num36, num37 - 1] = new Tile();
                    }
                    if (Main.tile[num36, num37 - 2] == null)
                    {
                        Main.tile[num36, num37 - 2] = new Tile();
                    }
                    if (Main.tile[num36, num37 - 3] == null)
                    {
                        Main.tile[num36, num37 - 3] = new Tile();
                    }
                    if (Main.tile[num36, num37 + 1] == null)
                    {
                        Main.tile[num36, num37 + 1] = new Tile();
                    }
                    if (Main.tile[num36 + this.direction, num37 - 1] == null)
                    {
                        Main.tile[num36 + this.direction, num37 - 1] = new Tile();
                    }
                    if (Main.tile[num36 + this.direction, num37 + 1] == null)
                    {
                        Main.tile[num36 + this.direction, num37 + 1] = new Tile();
                    }
                    if ((Main.tile[num36, num37 - 1].active && (Main.tile[num36, num37 - 1].type == 10)) && flag3)
                    {
                        this.ai[2]++;
                        this.ai[3] = 0f;
                        if (this.ai[2] >= 60f)
                        {
                            if (!Main.bloodMoon && ((this.type == 3) || (this.type == 0x84)))
                            {
                                this.ai[1] = 0f;
                            }
                            this.velocity.X = 0.5f * -this.direction;
                            this.ai[1]++;
                            if (this.type == 0x1b)
                            {
                                this.ai[1]++;
                            }
                            if (this.type == 0x1f)
                            {
                                this.ai[1] += 6f;
                            }
                            this.ai[2] = 0f;
                            bool flag5 = false;
                            if (this.ai[1] >= 10f)
                            {
                                flag5 = true;
                                this.ai[1] = 10f;
                            }
                            WorldGen.KillTile(num36, num37 - 1, true, false, false);
                            if (((Main.netMode != 1) || !flag5) && (flag5 && (Main.netMode != 1)))
                            {
                                if (this.type == 0x1a)
                                {
                                    WorldGen.KillTile(num36, num37 - 1, false, false, false);
                                    if (Main.netMode == 2)
                                    {
                                        NetMessage.SendData(0x11, -1, -1, "", 0, (float) num36, (float) (num37 - 1), 0f, 0);
                                    }
                                }
                                else
                                {
                                    bool flag6 = WorldGen.OpenDoor(num36, num37, this.direction);
                                    if (!flag6)
                                    {
                                        this.ai[3] = num6;
                                        this.netUpdate = true;
                                    }
                                    if ((Main.netMode == 2) && flag6)
                                    {
                                        NetMessage.SendData(0x13, -1, -1, "", 0, (float) num36, (float) num37, (float) this.direction, 0);
                                    }
                                }
                            }
                        }
                    }
                    else
                    {
                        if (((this.velocity.X < 0f) && (this.spriteDirection == -1)) || ((this.velocity.X > 0f) && (this.spriteDirection == 1)))
                        {
                            if (Main.tile[num36, num37 - 2].active && Main.tileSolid[Main.tile[num36, num37 - 2].type])
                            {
                                if (Main.tile[num36, num37 - 3].active && Main.tileSolid[Main.tile[num36, num37 - 3].type])
                                {
                                    this.velocity.Y = -8f;
                                    this.netUpdate = true;
                                }
                                else
                                {
                                    this.velocity.Y = -7f;
                                    this.netUpdate = true;
                                }
                            }
                            else if (Main.tile[num36, num37 - 1].active && Main.tileSolid[Main.tile[num36, num37 - 1].type])
                            {
                                this.velocity.Y = -6f;
                                this.netUpdate = true;
                            }
                            else if (Main.tile[num36, num37].active && Main.tileSolid[Main.tile[num36, num37].type])
                            {
                                this.velocity.Y = -5f;
                                this.netUpdate = true;
                            }
                            else if ((((this.directionY < 0) && (this.type != 0x43)) && (!Main.tile[num36, num37 + 1].active || !Main.tileSolid[Main.tile[num36, num37 + 1].type])) && (!Main.tile[num36 + this.direction, num37 + 1].active || !Main.tileSolid[Main.tile[num36 + this.direction, num37 + 1].type]))
                            {
                                this.velocity.Y = -8f;
                                this.velocity.X *= 1.5f;
                                this.netUpdate = true;
                            }
                            else if (flag3)
                            {
                                this.ai[1] = 0f;
                                this.ai[2] = 0f;
                            }
                        }
                        if (((((this.type == 0x1f) || (this.type == 0x2f)) || ((this.type == 0x4d) || (this.type == 0x68))) && (((this.velocity.Y == 0f) && (Math.Abs((float) ((this.position.X + (this.width / 2)) - (Main.player[this.target].position.X + (Main.player[this.target].width / 2)))) < 100f)) && (Math.Abs((float) ((this.position.Y + (this.height / 2)) - (Main.player[this.target].position.Y + (Main.player[this.target].height / 2)))) < 50f))) && (((this.direction > 0) && (this.velocity.X >= 1f)) || ((this.direction < 0) && (this.velocity.X <= -1f))))
                        {
                            this.velocity.X *= 2f;
                            if (this.velocity.X > 3f)
                            {
                                this.velocity.X = 3f;
                            }
                            if (this.velocity.X < -3f)
                            {
                                this.velocity.X = -3f;
                            }
                            this.velocity.Y = -4f;
                            this.netUpdate = true;
                        }
                        if ((this.type == 120) && (this.velocity.Y < 0f))
                        {
                            this.velocity.Y *= 1.1f;
                        }
                    }
                }
                else if (flag3)
                {
                    this.ai[1] = 0f;
                    this.ai[2] = 0f;
                }
                if (((Main.netMode != 1) && (this.type == 120)) && (this.ai[3] >= num6))
                {
                    int num38 = ((int) Main.player[this.target].position.X) / 0x10;
                    int num39 = ((int) Main.player[this.target].position.Y) / 0x10;
                    int num40 = ((int) this.position.X) / 0x10;
                    int num41 = ((int) this.position.Y) / 0x10;
                    int num42 = 20;
                    int num43 = 0;
                    bool flag7 = false;
                    if ((Math.Abs((float) (this.position.X - Main.player[this.target].position.X)) + Math.Abs((float) (this.position.Y - Main.player[this.target].position.Y))) > 2000f)
                    {
                        num43 = 100;
                        flag7 = true;
                    }
                    while (!flag7 && (num43 < 100))
                    {
                        num43++;
                        int num44 = Main.rand.Next(num38 - num42, num38 + num42);
                        for (int num46 = Main.rand.Next(num39 - num42, num39 + num42); num46 < (num39 + num42); num46++)
                        {
                            if (((((num46 < (num39 - 4)) || (num46 > (num39 + 4))) || ((num44 < (num38 - 4)) || (num44 > (num38 + 4)))) && (((num46 < (num41 - 1)) || (num46 > (num41 + 1))) || ((num44 < (num40 - 1)) || (num44 > (num40 + 1))))) && Main.tile[num44, num46].active)
                            {
                                bool flag8 = true;
                                if ((this.type == 0x20) && (Main.tile[num44, num46 - 1].wall == 0))
                                {
                                    flag8 = false;
                                }
                                else if (Main.tile[num44, num46 - 1].lava)
                                {
                                    flag8 = false;
                                }
                                if ((flag8 && Main.tileSolid[Main.tile[num44, num46].type]) && !Collision.SolidTiles(num44 - 1, num44 + 1, num46 - 4, num46 - 1))
                                {
                                    this.position.X = (num44 * 0x10) - (this.width / 2);
                                    this.position.Y = (num46 * 0x10) - this.height;
                                    this.netUpdate = true;
                                    this.ai[3] = -120f;
                                }
                            }
                        }
                    }
                }
                return;
            }
            if (flag11)
            {
                this.boss = true;
                this.NPCLoot();
            }
        Label_6D3F:
            if (!this.active && (Main.netMode == 2))
            {
                NetMessage.SendData(0x1c, -1, -1, "", this.whoAmI, -1f, 0f, 0f, 0);
            }
        Label_6D73:
            num113 = ((int) (this.position.X / 16f)) - 1;
            int num114 = ((int) ((this.position.X + this.width) / 16f)) + 2;
            int num115 = ((int) (this.position.Y / 16f)) - 1;
            int num116 = ((int) ((this.position.Y + this.height) / 16f)) + 2;
            if (num113 < 0)
            {
                num113 = 0;
            }
            if (num114 > Main.maxTilesX)
            {
                num114 = Main.maxTilesX;
            }
            if (num115 < 0)
            {
                num115 = 0;
            }
            if (num116 > Main.maxTilesY)
            {
                num116 = Main.maxTilesY;
            }
            bool flag12 = false;
            if ((this.type >= 0x57) && (this.type <= 0x5c))
            {
                flag12 = true;
            }
            if (!flag12)
            {
                for (int num117 = num113; num117 < num114; num117++)
                {
                    for (int num118 = num115; num118 < num116; num118++)
                    {
                        if ((Main.tile[num117, num118] != null) && ((Main.tile[num117, num118].active && (Main.tileSolid[Main.tile[num117, num118].type] || (Main.tileSolidTop[Main.tile[num117, num118].type] && (Main.tile[num117, num118].frameY == 0)))) || (Main.tile[num117, num118].liquid > 0x40)))
                        {
                            Vector2 vector13;
                            vector13.X = num117 * 0x10;
                            vector13.Y = num118 * 0x10;
                            if ((((this.position.X + this.width) > vector13.X) && (this.position.X < (vector13.X + 16f))) && (((this.position.Y + this.height) > vector13.Y) && (this.position.Y < (vector13.Y + 16f))))
                            {
                                flag12 = true;
                                if (((Main.rand.Next(100) == 0) && (this.type != 0x75)) && Main.tile[num117, num118].active)
                                {
                                    WorldGen.KillTile(num117, num118, true, true, false);
                                }
                                if ((Main.netMode != 1) && (Main.tile[num117, num118].type == 2))
                                {
                                    byte num1 = Main.tile[num117, num118 - 1].type;
                                }
                            }
                        }
                    }
                }
            }
            if (!flag12 && ((((this.type == 7) || (this.type == 10)) || ((this.type == 13) || (this.type == 0x27))) || (((this.type == 0x5f) || (this.type == 0x62)) || (this.type == 0x75))))
            {
                Rectangle rectangle = new Rectangle((int) this.position.X, (int) this.position.Y, this.width, this.height);
                int num119 = 0x3e8;
                bool flag13 = true;
                for (int num120 = 0; num120 < 0xff; num120++)
                {
                    if (Main.player[num120].active)
                    {
                        Rectangle rectangle2 = new Rectangle(((int) Main.player[num120].position.X) - num119, ((int) Main.player[num120].position.Y) - num119, num119 * 2, num119 * 2);
                        if (rectangle.Intersects(rectangle2))
                        {
                            flag13 = false;
                            break;
                        }
                    }
                }
                if (flag13)
                {
                    flag12 = true;
                }
            }
            if ((this.type >= 0x57) && (this.type <= 0x5c))
            {
                if (this.velocity.X < 0f)
                {
                    this.spriteDirection = 1;
                }
                else if (this.velocity.X > 0f)
                {
                    this.spriteDirection = -1;
                }
            }
            float num121 = 8f;
            float num122 = 0.07f;
            if (this.type == 0x5f)
            {
                num121 = 5.5f;
                num122 = 0.045f;
            }
            if (this.type == 10)
            {
                num121 = 6f;
                num122 = 0.05f;
            }
            if (this.type == 13)
            {
                num121 = 10f;
                num122 = 0.07f;
            }
            if (this.type == 0x57)
            {
                num121 = 11f;
                num122 = 0.25f;
            }
            if ((this.type == 0x75) && (Main.wof >= 0))
            {
                float num123 = ((float) Main.npc[Main.wof].life) / ((float) Main.npc[Main.wof].lifeMax);
                if (num123 < 0.5)
                {
                    num121++;
                    num122 += 0.1f;
                }
                if (num123 < 0.25)
                {
                    num121++;
                    num122 += 0.1f;
                }
                if (num123 < 0.1)
                {
                    num121 += 2f;
                    num122 += 0.1f;
                }
            }
            Vector2 vector14 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
            float num124 = Main.player[this.target].position.X + (Main.player[this.target].width / 2);
            float num125 = Main.player[this.target].position.Y + (Main.player[this.target].height / 2);
            num124 = ((int) (num124 / 16f)) * 0x10;
            num125 = ((int) (num125 / 16f)) * 0x10;
            vector14.X = ((int) (vector14.X / 16f)) * 0x10;
            vector14.Y = ((int) (vector14.Y / 16f)) * 0x10;
            num124 -= vector14.X;
            num125 -= vector14.Y;
            float num126 = (float) Math.Sqrt((double) ((num124 * num124) + (num125 * num125)));
            if ((this.ai[1] > 0f) && (this.ai[1] < Main.npc.Length))
            {
                try
                {
                    vector14 = new Vector2(this.position.X + (this.width * 0.5f), this.position.Y + (this.height * 0.5f));
                    num124 = (Main.npc[(int) this.ai[1]].position.X + (Main.npc[(int) this.ai[1]].width / 2)) - vector14.X;
                    num125 = (Main.npc[(int) this.ai[1]].position.Y + (Main.npc[(int) this.ai[1]].height / 2)) - vector14.Y;
                }
                catch
                {
                }
                this.rotation = ((float) Math.Atan2((double) num125, (double) num124)) + 1.57f;
                num126 = (float) Math.Sqrt((double) ((num124 * num124) + (num125 * num125)));
                int width = this.width;
                if ((this.type >= 0x57) && (this.type <= 0x5c))
                {
                    width = 0x2a;
                }
                num126 = (num126 - width) / num126;
                num124 *= num126;
                num125 *= num126;
                this.velocity = new Vector2();
                this.position.X += num124;
                this.position.Y += num125;
                if ((this.type >= 0x57) && (this.type <= 0x5c))
                {
                    if (num124 < 0f)
                    {
                        this.spriteDirection = 1;
                        return;
                    }
                    if (num124 > 0f)
                    {
                        this.spriteDirection = -1;
                        return;
                    }
                }
                return;
            }
            if (!flag12)
            {
                this.TargetClosest(true);
                this.velocity.Y += 0.11f;
                if (this.velocity.Y > num121)
                {
                    this.velocity.Y = num121;
                }
                if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num121 * 0.4))
                {
                    if (this.velocity.X < 0f)
                    {
                        this.velocity.X -= num122 * 1.1f;
                    }
                    else
                    {
                        this.velocity.X += num122 * 1.1f;
                    }
                }
                else if (this.velocity.Y == num121)
                {
                    if (this.velocity.X < num124)
                    {
                        this.velocity.X += num122;
                    }
                    else if (this.velocity.X > num124)
                    {
                        this.velocity.X -= num122;
                    }
                }
                else if (this.velocity.Y > 4f)
                {
                    if (this.velocity.X < 0f)
                    {
                        this.velocity.X += num122 * 0.9f;
                    }
                    else
                    {
                        this.velocity.X -= num122 * 0.9f;
                    }
                }
            }
            else
            {
                if (((this.type != 0x57) && (this.type != 0x75)) && (this.soundDelay == 0))
                {
                    float num128 = num126 / 40f;
                    if (num128 < 10f)
                    {
                        num128 = 10f;
                    }
                    if (num128 > 20f)
                    {
                        num128 = 20f;
                    }
                    this.soundDelay = (int) num128;
                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 1);
                }
                num126 = (float) Math.Sqrt((double) ((num124 * num124) + (num125 * num125)));
                float num129 = Math.Abs(num124);
                float num130 = Math.Abs(num125);
                float num131 = num121 / num126;
                num124 *= num131;
                num125 *= num131;
                if (((this.type == 13) || (this.type == 7)) && !Main.player[this.target].zoneEvil)
                {
                    bool flag14 = true;
                    for (int num132 = 0; num132 < 0xff; num132++)
                    {
                        if ((Main.player[num132].active && !Main.player[num132].dead) && Main.player[num132].zoneEvil)
                        {
                            flag14 = false;
                        }
                    }
                    if (flag14)
                    {
                        if ((Main.netMode != 1) && ((this.position.Y / 16f) > ((Main.rockLayer + Main.maxTilesY) / 2.0)))
                        {
                            int num134;
                            this.active = false;
                            for (int num133 = (int) this.ai[0]; ((num133 > 0) && (num133 < 200)) && (Main.npc[num133].active && (Main.npc[num133].aiStyle == this.aiStyle)); num133 = num134)
                            {
                                num134 = (int) Main.npc[num133].ai[0];
                                Main.npc[num133].active = false;
                                this.life = 0;
                                if (Main.netMode == 2)
                                {
                                    NetMessage.SendData(0x17, -1, -1, "", num133, 0f, 0f, 0f, 0);
                                }
                            }
                            if (Main.netMode == 2)
                            {
                                NetMessage.SendData(0x17, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
                            }
                        }
                        num124 = 0f;
                        num125 = num121;
                    }
                }
                bool flag15 = false;
                if (this.type == 0x57)
                {
                    if (((((this.velocity.X > 0f) && (num124 < 0f)) || ((this.velocity.X < 0f) && (num124 > 0f))) || (((this.velocity.Y > 0f) && (num125 < 0f)) || ((this.velocity.Y < 0f) && (num125 > 0f)))) && (((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) > (num122 / 2f)) && (num126 < 300f)))
                    {
                        flag15 = true;
                        if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < num121)
                        {
                            this.velocity = (Vector2) (this.velocity * 1.1f);
                        }
                    }
                    if (((this.position.Y > Main.player[this.target].position.Y) || ((Main.player[this.target].position.Y / 16f) > Main.worldSurface)) || Main.player[this.target].dead)
                    {
                        flag15 = true;
                        if (Math.Abs(this.velocity.X) < (num121 / 2f))
                        {
                            if (this.velocity.X == 0f)
                            {
                                this.velocity.X -= this.direction;
                            }
                            this.velocity.X *= 1.1f;
                        }
                        else if (this.velocity.Y > -num121)
                        {
                            this.velocity.Y -= num122;
                        }
                    }
                }
                if (!flag15)
                {
                    if ((((this.velocity.X > 0f) && (num124 > 0f)) || ((this.velocity.X < 0f) && (num124 < 0f))) || (((this.velocity.Y > 0f) && (num125 > 0f)) || ((this.velocity.Y < 0f) && (num125 < 0f))))
                    {
                        if (this.velocity.X < num124)
                        {
                            this.velocity.X += num122;
                        }
                        else if (this.velocity.X > num124)
                        {
                            this.velocity.X -= num122;
                        }
                        if (this.velocity.Y < num125)
                        {
                            this.velocity.Y += num122;
                        }
                        else if (this.velocity.Y > num125)
                        {
                            this.velocity.Y -= num122;
                        }
                        if ((Math.Abs(num125) < (num121 * 0.2)) && (((this.velocity.X > 0f) && (num124 < 0f)) || ((this.velocity.X < 0f) && (num124 > 0f))))
                        {
                            if (this.velocity.Y > 0f)
                            {
                                this.velocity.Y += num122 * 2f;
                            }
                            else
                            {
                                this.velocity.Y -= num122 * 2f;
                            }
                        }
                        if ((Math.Abs(num124) < (num121 * 0.2)) && (((this.velocity.Y > 0f) && (num125 < 0f)) || ((this.velocity.Y < 0f) && (num125 > 0f))))
                        {
                            if (this.velocity.X > 0f)
                            {
                                this.velocity.X += num122 * 2f;
                            }
                            else
                            {
                                this.velocity.X -= num122 * 2f;
                            }
                        }
                    }
                    else if (num129 > num130)
                    {
                        if (this.velocity.X < num124)
                        {
                            this.velocity.X += num122 * 1.1f;
                        }
                        else if (this.velocity.X > num124)
                        {
                            this.velocity.X -= num122 * 1.1f;
                        }
                        if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num121 * 0.5))
                        {
                            if (this.velocity.Y > 0f)
                            {
                                this.velocity.Y += num122;
                            }
                            else
                            {
                                this.velocity.Y -= num122;
                            }
                        }
                    }
                    else
                    {
                        if (this.velocity.Y < num125)
                        {
                            this.velocity.Y += num122 * 1.1f;
                        }
                        else if (this.velocity.Y > num125)
                        {
                            this.velocity.Y -= num122 * 1.1f;
                        }
                        if ((Math.Abs(this.velocity.X) + Math.Abs(this.velocity.Y)) < (num121 * 0.5))
                        {
                            if (this.velocity.X > 0f)
                            {
                                this.velocity.X += num122;
                            }
                            else
                            {
                                this.velocity.X -= num122;
                            }
                        }
                    }
                }
            }
            this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 1.57f;
            if ((((this.type == 7) || (this.type == 10)) || ((this.type == 13) || (this.type == 0x27))) || (((this.type == 0x5f) || (this.type == 0x62)) || (this.type == 0x75)))
            {
                if (flag12)
                {
                    if (this.localAI[0] != 1f)
                    {
                        this.netUpdate = true;
                    }
                    this.localAI[0] = 1f;
                }
                else
                {
                    if (this.localAI[0] != 0f)
                    {
                        this.netUpdate = true;
                    }
                    this.localAI[0] = 0f;
                }
                if (((((this.velocity.X <= 0f) || (this.oldVelocity.X >= 0f)) && ((this.velocity.X >= 0f) || (this.oldVelocity.X <= 0f))) && (((this.velocity.Y <= 0f) || (this.oldVelocity.Y >= 0f)) && ((this.velocity.Y >= 0f) || (this.oldVelocity.Y <= 0f)))) || this.justHit)
                {
                    return;
                }
                this.netUpdate = true;
            }
            return;
        Label_9E34:
            if (this.ai[1] > 0f)
            {
                this.ai[1]--;
                if (this.ai[1] == 25f)
                {
                    Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 8);
                    if (Main.netMode != 1)
                    {
                        if ((this.type == 0x1d) || (this.type == 0x2d))
                        {
                            NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) - 8, 30, 0);
                        }
                        else if (this.type == 0x20)
                        {
                            NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) - 8, 0x21, 0);
                        }
                        else
                        {
                            NewNPC((((int) this.position.X) + (this.width / 2)) + (this.direction * 8), ((int) this.position.Y) + 20, 0x19, 0);
                        }
                    }
                }
            }
            if ((this.type == 0x1d) || (this.type == 0x2d))
            {
                if (Main.rand.Next(5) == 0)
                {
                    int num160 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x1b, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 1.5f);
                    Main.dust[num160].noGravity = true;
                    Main.dust[num160].velocity.X *= 0.5f;
                    Main.dust[num160].velocity.Y = -2f;
                }
            }
            else if (this.type == 0x20)
            {
                if (Main.rand.Next(2) == 0)
                {
                    int num161 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x1d, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                    Main.dust[num161].noGravity = true;
                    Main.dust[num161].velocity.X *= 1f;
                    Main.dust[num161].velocity.Y *= 1f;
                }
            }
            else if (Main.rand.Next(2) == 0)
            {
                int num162 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, new Color(), 2f);
                Main.dust[num162].noGravity = true;
                Main.dust[num162].velocity.X *= 1f;
                Main.dust[num162].velocity.Y *= 1f;
            }
        }

        public static bool AnyNPCs(int Type)
        {
            for (int i = 0; i < 200; i++)
            {
                if (Main.npc[i].active && (Main.npc[i].type == Type))
                {
                    return true;
                }
            }
            return false;
        }

        public void CheckActive()
        {
            if ((this.active && ((((((this.type != 8) && (this.type != 9)) && ((this.type != 11) && (this.type != 12))) && (((this.type != 14) && (this.type != 15)) && ((this.type != 40) && (this.type != 0x29)))) && ((((this.type != 0x60) && (this.type != 0x61)) && ((this.type != 0x63) && (this.type != 100))) && ((this.type <= 0x57) || (this.type > 0x5c)))) && (((this.type != 0x76) && (this.type != 0x77)) && (((this.type != 0x71) && (this.type != 0x72)) && (this.type != 0x73))))) && ((this.type < 0x86) || (this.type > 0x88)))
            {
                if (this.townNPC)
                {
                    Rectangle rectangle = new Rectangle((((int) this.position.X) + (this.width / 2)) - townRangeX, (((int) this.position.Y) + (this.height / 2)) - townRangeY, townRangeX * 2, townRangeY * 2);
                    for (int i = 0; i < 0xff; i++)
                    {
                        if (Main.player[i].active && rectangle.Intersects(new Rectangle((int) Main.player[i].position.X, (int) Main.player[i].position.Y, Main.player[i].width, Main.player[i].height)))
                        {
                            Player player1 = Main.player[i];
                            player1.townNPCs += this.npcSlots;
                        }
                    }
                }
                else
                {
                    bool flag = false;
                    Rectangle rectangle2 = new Rectangle((((int) this.position.X) + (this.width / 2)) - activeRangeX, (((int) this.position.Y) + (this.height / 2)) - activeRangeY, activeRangeX * 2, activeRangeY * 2);
                    Rectangle rectangle3 = new Rectangle(((int) ((this.position.X + (this.width / 2)) - (sWidth * 0.5))) - this.width, ((int) ((this.position.Y + (this.height / 2)) - (sHeight * 0.5))) - this.height, sWidth + (this.width * 2), sHeight + (this.height * 2));
                    for (int j = 0; j < 0xff; j++)
                    {
                        if (Main.player[j].active)
                        {
                            if (rectangle2.Intersects(new Rectangle((int) Main.player[j].position.X, (int) Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
                            {
                                flag = true;
                                if (((this.type != 0x19) && (this.type != 30)) && ((this.type != 0x21) && (this.lifeMax > 0)))
                                {
                                    Player player2 = Main.player[j];
                                    player2.activeNPCs += this.npcSlots;
                                }
                            }
                            if (rectangle3.Intersects(new Rectangle((int) Main.player[j].position.X, (int) Main.player[j].position.Y, Main.player[j].width, Main.player[j].height)))
                            {
                                this.timeLeft = activeTime;
                            }
                            if (((this.type == 7) || (this.type == 10)) || (((this.type == 13) || (this.type == 0x27)) || (this.type == 0x57)))
                            {
                                flag = true;
                            }
                            if (((this.boss || (this.type == 0x23)) || ((this.type == 0x24) || (this.type == 0x7f))) || (((this.type == 0x80) || (this.type == 0x81)) || ((this.type == 130) || (this.type == 0x83))))
                            {
                                flag = true;
                            }
                        }
                    }
                    this.timeLeft--;
                    if (this.timeLeft <= 0)
                    {
                        flag = false;
                    }
                    if (!flag && (Main.netMode != 1))
                    {
                        noSpawnCycle = true;
                        this.active = false;
                        if (Main.netMode == 2)
                        {
                            this.netSkip = -1;
                            this.life = 0;
                            NetMessage.SendData(0x17, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
                        }
                        if (this.aiStyle == 6)
                        {
                            for (int k = (int) this.ai[0]; k > 0; k = (int) Main.npc[k].ai[0])
                            {
                                if (Main.npc[k].active)
                                {
                                    Main.npc[k].active = false;
                                    if (Main.netMode == 2)
                                    {
                                        Main.npc[k].life = 0;
                                        Main.npc[k].netSkip = -1;
                                        NetMessage.SendData(0x17, -1, -1, "", k, 0f, 0f, 0f, 0);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        public void checkDead()
        {
            if ((this.active && ((this.realLife < 0) || (this.realLife == this.whoAmI))) && (this.life <= 0))
            {
                noSpawnCycle = true;
                if (this.townNPC && (this.type != 0x25))
                {
                    string name = this.name;
                    if (this.displayName != "")
                    {
                        name = this.displayName;
                    }
                    if (Main.netMode == 0)
                    {
                        Main.NewText(name + " was slain...", 0xff, 0x19, 0x19);
                    }
                    else if (Main.netMode == 2)
                    {
                        NetMessage.SendData(0x19, -1, -1, name + " was slain...", 0xff, 255f, 25f, 25f, 0);
                    }
                    if (Main.netMode != 1)
                    {
                        Main.chrName[this.type] = "";
                        setNames();
                        NetMessage.SendData(0x38, -1, -1, "", this.type, 0f, 0f, 0f, 0);
                    }
                }
                if ((this.townNPC && (Main.netMode != 1)) && (this.homeless && (WorldGen.spawnNPC == this.type)))
                {
                    WorldGen.spawnNPC = 0;
                }
                if (this.soundKilled > 0)
                {
                    Main.PlaySound(4, (int) this.position.X, (int) this.position.Y, this.soundKilled);
                }
                this.NPCLoot();
                this.active = false;
                if (((this.type == 0x1a) || (this.type == 0x1b)) || (((this.type == 0x1c) || (this.type == 0x1d)) || (this.type == 0x6f)))
                {
                    Main.invasionSize--;
                }
            }
        }

        public object Clone()
        {
            return base.MemberwiseClone();
        }

        public static void clrNames()
        {
            for (int i = 0; i < 0x8e; i++)
            {
                Main.chrName[i] = "";
            }
        }

        public void DelBuff(int b)
        {
            this.buffTime[b] = 0;
            this.buffType[b] = 0;
            for (int i = 0; i < 4; i++)
            {
                if ((this.buffTime[i] == 0) || (this.buffType[i] == 0))
                {
                    for (int j = i + 1; j < 5; j++)
                    {
                        this.buffTime[j - 1] = this.buffTime[j];
                        this.buffType[j - 1] = this.buffType[j];
                        this.buffTime[j] = 0;
                        this.buffType[j] = 0;
                    }
                }
            }
            if (Main.netMode == 2)
            {
                NetMessage.SendData(0x36, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
            }
        }

        public void FindFrame()
        {
            int num = 1;
            if (!Main.dedServ)
            {
                num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
            }
            int num2 = 0;
            if (this.aiAction == 0)
            {
                if (this.velocity.Y < 0f)
                {
                    num2 = 2;
                }
                else if (this.velocity.Y > 0f)
                {
                    num2 = 3;
                }
                else if (this.velocity.X != 0f)
                {
                    num2 = 1;
                }
                else
                {
                    num2 = 0;
                }
            }
            else if (this.aiAction == 1)
            {
                num2 = 4;
            }
            if ((((this.type == 1) || (this.type == 0x10)) || ((this.type == 0x3b) || (this.type == 0x47))) || ((this.type == 0x51) || (this.type == 0x8a)))
            {
                this.frameCounter++;
                if (num2 > 0)
                {
                    this.frameCounter++;
                }
                if (num2 == 4)
                {
                    this.frameCounter++;
                }
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            if (this.type == 0x8d)
            {
                this.spriteDirection = this.direction;
                if (this.velocity.Y != 0f)
                {
                    this.frame.Y = num * 2;
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y > num)
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 50)
            {
                if (this.velocity.Y != 0f)
                {
                    this.frame.Y = num * 4;
                }
                else
                {
                    this.frameCounter++;
                    if (num2 > 0)
                    {
                        this.frameCounter++;
                    }
                    if (num2 == 4)
                    {
                        this.frameCounter++;
                    }
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= (num * 4))
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 0x87)
            {
                if (this.ai[2] == 0f)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    this.frame.Y = num;
                }
            }
            if (this.type == 0x55)
            {
                if (this.ai[0] == 0f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    int num3 = 3;
                    if (this.velocity.Y == 0f)
                    {
                        this.frameCounter--;
                    }
                    else
                    {
                        this.frameCounter++;
                    }
                    if (this.frameCounter < 0.0)
                    {
                        this.frameCounter = 0.0;
                    }
                    if (this.frameCounter > (num3 * 4))
                    {
                        this.frameCounter = num3 * 4;
                    }
                    if (this.frameCounter < num3)
                    {
                        this.frame.Y = num;
                    }
                    else if (this.frameCounter < (num3 * 2))
                    {
                        this.frame.Y = num * 2;
                    }
                    else if (this.frameCounter < (num3 * 3))
                    {
                        this.frame.Y = num * 3;
                    }
                    else if (this.frameCounter < (num3 * 4))
                    {
                        this.frame.Y = num * 4;
                    }
                    else if (this.frameCounter < (num3 * 5))
                    {
                        this.frame.Y = num * 5;
                    }
                    else if (this.frameCounter < (num3 * 6))
                    {
                        this.frame.Y = num * 4;
                    }
                    else if (this.frameCounter < (num3 * 7))
                    {
                        this.frame.Y = num * 3;
                    }
                    else
                    {
                        this.frame.Y = num * 2;
                        if (this.frameCounter >= (num3 * 8))
                        {
                            this.frameCounter = num3;
                        }
                    }
                }
                if (this.ai[3] == 2f)
                {
                    this.frame.Y += num * 6;
                }
                else if (this.ai[3] == 3f)
                {
                    this.frame.Y += num * 12;
                }
            }
            if ((this.type == 0x71) || (this.type == 0x72))
            {
                if (this.ai[2] == 0f)
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 12.0)
                    {
                        this.frame.Y += num;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                    {
                        this.frame.Y = 0;
                    }
                }
                else
                {
                    this.frame.Y = 0;
                    this.frameCounter = -60.0;
                }
            }
            if (this.type == 0x3d)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter < 4.0)
                    {
                        this.frame.Y = num;
                    }
                    else
                    {
                        this.frame.Y = num * 2;
                        if (this.frameCounter >= 7.0)
                        {
                            this.frameCounter = 0.0;
                        }
                    }
                }
            }
            if (this.type == 0x7a)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.05f;
                if (this.ai[3] > 0f)
                {
                    int num4 = (int) (this.ai[3] / 8f);
                    this.frameCounter = 0.0;
                    this.frame.Y = (num4 + 3) * num;
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 8.0)
                    {
                        this.frame.Y += num;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= (num * 3))
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 0x4a)
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                if ((this.velocity.X == 0f) && (this.velocity.Y == 0f))
                {
                    this.frame.Y = num * 4;
                    this.frameCounter = 0.0;
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frame.Y += num;
                        this.frameCounter = 0.0;
                    }
                    if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if ((this.type == 0x3e) || (this.type == 0x42))
            {
                this.spriteDirection = this.direction;
                this.rotation = this.velocity.X * 0.1f;
                this.frameCounter++;
                if (this.frameCounter < 6.0)
                {
                    this.frame.Y = 0;
                }
                else
                {
                    this.frame.Y = num;
                    if (this.frameCounter >= 11.0)
                    {
                        this.frameCounter = 0.0;
                    }
                }
            }
            if (((this.type == 0x3f) || (this.type == 0x40)) || (this.type == 0x67))
            {
                this.frameCounter++;
                if (this.frameCounter < 6.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 12.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 18.0)
                {
                    this.frame.Y = num * 2;
                }
                else
                {
                    this.frame.Y = num * 3;
                    if (this.frameCounter >= 23.0)
                    {
                        this.frameCounter = 0.0;
                    }
                }
            }
            if (((this.type == 2) || (this.type == 0x17)) || (this.type == 0x79))
            {
                if (this.type == 2)
                {
                    if (this.velocity.X > 0f)
                    {
                        this.spriteDirection = 1;
                        this.rotation = (float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X);
                    }
                    if (this.velocity.X < 0f)
                    {
                        this.spriteDirection = -1;
                        this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 3.14f;
                    }
                }
                else if ((this.type == 2) || (this.type == 0x79))
                {
                    if (this.velocity.X > 0f)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.velocity.X < 0f)
                    {
                        this.spriteDirection = -1;
                    }
                    this.rotation = this.velocity.X * 0.1f;
                }
                this.frameCounter++;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            if (this.type == 0x85)
            {
                if (this.velocity.X > 0f)
                {
                    this.spriteDirection = 1;
                    this.rotation = (float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X);
                }
                if (this.velocity.X < 0f)
                {
                    this.spriteDirection = -1;
                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 3.14f;
                }
                this.frameCounter++;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y = num;
                }
                else
                {
                    this.frame.Y = 0;
                }
                if (this.frameCounter >= 16.0)
                {
                    this.frame.Y = 0;
                    this.frameCounter = 0.0;
                }
                if (this.life < (this.lifeMax * 0.5))
                {
                    this.frame.Y += num * 2;
                }
            }
            if (this.type == 0x74)
            {
                if (this.velocity.X > 0f)
                {
                    this.spriteDirection = 1;
                    this.rotation = (float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X);
                }
                if (this.velocity.X < 0f)
                {
                    this.spriteDirection = -1;
                    this.rotation = ((float) Math.Atan2((double) this.velocity.Y, (double) this.velocity.X)) + 3.14f;
                }
                this.frameCounter++;
                if (this.frameCounter >= 5.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            if (this.type == 0x4b)
            {
                if (this.velocity.X > 0f)
                {
                    this.spriteDirection = 1;
                }
                else
                {
                    this.spriteDirection = -1;
                }
                this.rotation = this.velocity.X * 0.1f;
                this.frameCounter++;
                if (this.frameCounter >= 4.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            if (((this.type == 0x37) || (this.type == 0x39)) || ((this.type == 0x3a) || (this.type == 0x66)))
            {
                this.spriteDirection = this.direction;
                this.frameCounter++;
                if (this.wet)
                {
                    if (this.frameCounter < 6.0)
                    {
                        this.frame.Y = 0;
                    }
                    else if (this.frameCounter < 12.0)
                    {
                        this.frame.Y = num;
                    }
                    else if (this.frameCounter < 18.0)
                    {
                        this.frame.Y = num * 2;
                    }
                    else if (this.frameCounter < 24.0)
                    {
                        this.frame.Y = num * 3;
                    }
                    else
                    {
                        this.frameCounter = 0.0;
                    }
                }
                else if (this.frameCounter < 6.0)
                {
                    this.frame.Y = num * 4;
                }
                else if (this.frameCounter < 12.0)
                {
                    this.frame.Y = num * 5;
                }
                else
                {
                    this.frameCounter = 0.0;
                }
            }
            if (this.type == 0x45)
            {
                if (this.ai[0] < 190f)
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num;
                        if ((this.frame.Y / num) >= (Main.npcFrameCount[this.type] - 1))
                        {
                            this.frame.Y = 0;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * (Main.npcFrameCount[this.type] - 1);
                }
            }
            if (this.type == 0x56)
            {
                if ((this.velocity.Y == 0f) || this.wet)
                {
                    if (this.velocity.X < -2f)
                    {
                        this.spriteDirection = -1;
                    }
                    else if (this.velocity.X > 2f)
                    {
                        this.spriteDirection = 1;
                    }
                    else
                    {
                        this.spriteDirection = this.direction;
                    }
                }
                if (this.velocity.Y != 0f)
                {
                    this.frame.Y = num * 15;
                    this.frameCounter = 0.0;
                }
                else if (this.velocity.X == 0f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else if (Math.Abs(this.velocity.X) < 3f)
                {
                    this.frameCounter += Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 6.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num;
                        if ((this.frame.Y / num) >= 9)
                        {
                            this.frame.Y = num;
                        }
                        if ((this.frame.Y / num) <= 0)
                        {
                            this.frame.Y = num;
                        }
                    }
                }
                else
                {
                    this.frameCounter += Math.Abs(this.velocity.X);
                    if (this.frameCounter >= 10.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num;
                        if ((this.frame.Y / num) >= 15)
                        {
                            this.frame.Y = num * 9;
                        }
                        if ((this.frame.Y / num) <= 8)
                        {
                            this.frame.Y = num * 9;
                        }
                    }
                }
            }
            if (this.type == 0x7f)
            {
                if (this.ai[1] == 0f)
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 12.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num;
                        if ((this.frame.Y / num) >= 2)
                        {
                            this.frame.Y = 0;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * 2;
                }
            }
            if (this.type == 0x81)
            {
                if (this.velocity.Y == 0f)
                {
                    this.spriteDirection = this.direction;
                }
                this.frameCounter++;
                if (this.frameCounter >= 2.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num;
                    if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 130)
            {
                if (this.velocity.Y == 0f)
                {
                    this.spriteDirection = this.direction;
                }
                this.frameCounter++;
                if (this.frameCounter >= 8.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num;
                    if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 0x43)
            {
                if (this.velocity.Y == 0f)
                {
                    this.spriteDirection = this.direction;
                }
                this.frameCounter++;
                if (this.frameCounter >= 6.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num;
                    if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 0x6d)
            {
                if ((this.velocity.Y == 0f) && (((this.velocity.X <= 0f) && (this.direction < 0)) || ((this.velocity.X >= 0f) && (this.direction > 0))))
                {
                    this.spriteDirection = this.direction;
                }
                this.frameCounter += Math.Abs(this.velocity.X);
                if (this.frameCounter >= 7.0)
                {
                    this.frameCounter -= 7.0;
                    this.frame.Y += num;
                    if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if ((this.type == 0x53) || (this.type == 0x54))
            {
                if (this.ai[0] == 2f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter >= 4.0)
                    {
                        this.frameCounter = 0.0;
                        this.frame.Y += num;
                        if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                        {
                            this.frame.Y = 0;
                        }
                    }
                }
            }
            if (this.type == 0x48)
            {
                this.frameCounter++;
                if (this.frameCounter >= 3.0)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y += num;
                    if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            if (this.type == 0x41)
            {
                this.spriteDirection = this.direction;
                this.frameCounter++;
                if (this.wet)
                {
                    if (this.frameCounter < 6.0)
                    {
                        this.frame.Y = 0;
                    }
                    else if (this.frameCounter < 12.0)
                    {
                        this.frame.Y = num;
                    }
                    else if (this.frameCounter < 18.0)
                    {
                        this.frame.Y = num * 2;
                    }
                    else if (this.frameCounter < 24.0)
                    {
                        this.frame.Y = num * 3;
                    }
                    else
                    {
                        this.frameCounter = 0.0;
                    }
                }
            }
            if ((((this.type == 0x30) || (this.type == 0x31)) || ((this.type == 0x33) || (this.type == 60))) || (((this.type == 0x52) || (this.type == 0x5d)) || (this.type == 0x89)))
            {
                if (this.velocity.X > 0f)
                {
                    this.spriteDirection = 1;
                }
                if (this.velocity.X < 0f)
                {
                    this.spriteDirection = -1;
                }
                this.rotation = this.velocity.X * 0.1f;
                this.frameCounter++;
                if (this.frameCounter >= 6.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * 4))
                {
                    this.frame.Y = 0;
                }
            }
            if (this.type == 0x2a)
            {
                this.frameCounter++;
                if (this.frameCounter < 2.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 4.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 6.0)
                {
                    this.frame.Y = num * 2;
                }
                else if (this.frameCounter < 8.0)
                {
                    this.frame.Y = num;
                }
                else
                {
                    this.frameCounter = 0.0;
                }
            }
            if ((this.type == 0x2b) || (this.type == 0x38))
            {
                this.frameCounter++;
                if (this.frameCounter < 6.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 12.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 18.0)
                {
                    this.frame.Y = num * 2;
                }
                else if (this.frameCounter < 24.0)
                {
                    this.frame.Y = num;
                }
                if (this.frameCounter == 23.0)
                {
                    this.frameCounter = 0.0;
                }
            }
            if (this.type == 0x73)
            {
                this.frameCounter++;
                if (this.frameCounter < 3.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 6.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 12.0)
                {
                    this.frame.Y = num * 2;
                }
                else if (this.frameCounter < 15.0)
                {
                    this.frame.Y = num;
                }
                if (this.frameCounter == 15.0)
                {
                    this.frameCounter = 0.0;
                }
            }
            if (this.type == 0x65)
            {
                this.frameCounter++;
                if (this.frameCounter > 6.0)
                {
                    this.frame.Y += num * 2;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y > (num * 2))
                {
                    this.frame.Y = 0;
                }
            }
            if ((((((this.type == 0x11) || (this.type == 0x12)) || ((this.type == 0x13) || (this.type == 20))) || (((this.type == 0x16) || (this.type == 0x26)) || ((this.type == 0x1a) || (this.type == 0x1b)))) || ((((this.type == 0x1c) || (this.type == 0x1f)) || ((this.type == 0x15) || (this.type == 0x2c))) || (((this.type == 0x36) || (this.type == 0x25)) || ((this.type == 0x49) || (this.type == 0x4d))))) || ((((this.type == 0x4e) || (this.type == 0x4f)) || ((this.type == 80) || (this.type == 0x68))) || (((this.type == 0x6b) || (this.type == 0x6c)) || (((this.type == 120) || (this.type == 0x7c)) || (this.type == 140)))))
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                    if (this.velocity.X == 0f)
                    {
                        if (this.type == 140)
                        {
                            this.frame.Y = num;
                            this.frameCounter = 0.0;
                        }
                        else
                        {
                            this.frame.Y = 0;
                            this.frameCounter = 0.0;
                        }
                    }
                    else
                    {
                        this.frameCounter += Math.Abs(this.velocity.X) * 2f;
                        this.frameCounter++;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num;
                            this.frameCounter = 0.0;
                        }
                        if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                        {
                            this.frame.Y = num * 2;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num;
                    if ((((this.type == 0x15) || (this.type == 0x1f)) || ((this.type == 0x2c) || (this.type == 0x4d))) || (((this.type == 0x4e) || (this.type == 0x4f)) || (((this.type == 80) || (this.type == 120)) || (this.type == 140))))
                    {
                        this.frame.Y = 0;
                    }
                }
            }
            else if (this.type == 110)
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                    if (this.ai[2] > 0f)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num * ((int) this.ai[2]);
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < (num * 6))
                        {
                            this.frame.Y = num * 6;
                        }
                        this.frameCounter += Math.Abs(this.velocity.X) * 2f;
                        this.frameCounter += this.velocity.X;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num;
                            this.frameCounter = 0.0;
                        }
                        if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                        {
                            this.frame.Y = num * 6;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
            }
            if (this.type == 0x6f)
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                    if (this.ai[2] > 0f)
                    {
                        this.spriteDirection = this.direction;
                        this.frame.Y = num * (((int) this.ai[2]) - 1);
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        if (this.frame.Y < (num * 7))
                        {
                            this.frame.Y = num * 7;
                        }
                        this.frameCounter += Math.Abs(this.velocity.X) * 2f;
                        this.frameCounter += this.velocity.X * 1.3f;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num;
                            this.frameCounter = 0.0;
                        }
                        if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                        {
                            this.frame.Y = num * 7;
                        }
                    }
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * 6;
                }
            }
            else if (((this.type == 3) || (this.type == 0x34)) || ((this.type == 0x35) || (this.type == 0x84)))
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                }
                if (((this.velocity.Y != 0f) || ((this.direction == -1) && (this.velocity.X > 0f))) || ((this.direction == 1) && (this.velocity.X < 0f)))
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * 2;
                }
                else if (this.velocity.X == 0f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                else
                {
                    this.frameCounter += Math.Abs(this.velocity.X);
                    if (this.frameCounter < 8.0)
                    {
                        this.frame.Y = 0;
                    }
                    else if (this.frameCounter < 16.0)
                    {
                        this.frame.Y = num;
                    }
                    else if (this.frameCounter < 24.0)
                    {
                        this.frame.Y = num * 2;
                    }
                    else if (this.frameCounter < 32.0)
                    {
                        this.frame.Y = num;
                    }
                    else
                    {
                        this.frameCounter = 0.0;
                    }
                }
            }
            else if ((this.type == 0x2e) || (this.type == 0x2f))
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                    if (this.velocity.X == 0f)
                    {
                        this.frame.Y = 0;
                        this.frameCounter = 0.0;
                    }
                    else
                    {
                        this.frameCounter += Math.Abs(this.velocity.X) * 1f;
                        this.frameCounter++;
                        if (this.frameCounter > 6.0)
                        {
                            this.frame.Y += num;
                            this.frameCounter = 0.0;
                        }
                        if ((this.frame.Y / num) >= Main.npcFrameCount[this.type])
                        {
                            this.frame.Y = 0;
                        }
                    }
                }
                else if (this.velocity.Y < 0f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * 4;
                }
                else if (this.velocity.Y > 0f)
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = num * 6;
                }
            }
            else if (((this.type == 4) || (this.type == 0x7d)) || (this.type == 0x7e))
            {
                this.frameCounter++;
                if (this.frameCounter < 7.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 14.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 21.0)
                {
                    this.frame.Y = num * 2;
                }
                else
                {
                    this.frameCounter = 0.0;
                    this.frame.Y = 0;
                }
                if (this.ai[0] > 1f)
                {
                    this.frame.Y += num * 3;
                }
            }
            else if (this.type == 5)
            {
                this.frameCounter++;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 0x5e)
            {
                this.frameCounter++;
                if (this.frameCounter < 6.0)
                {
                    this.frame.Y = 0;
                }
                else if (this.frameCounter < 12.0)
                {
                    this.frame.Y = num;
                }
                else if (this.frameCounter < 18.0)
                {
                    this.frame.Y = num * 2;
                }
                else
                {
                    this.frame.Y = num;
                    if (this.frameCounter >= 23.0)
                    {
                        this.frameCounter = 0.0;
                    }
                }
            }
            else if (this.type == 6)
            {
                this.frameCounter++;
                if (this.frameCounter >= 8.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
            else if (this.type == 0x18)
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                }
                if (this.ai[1] > 0f)
                {
                    if (this.frame.Y < 4)
                    {
                        this.frameCounter = 0.0;
                    }
                    this.frameCounter++;
                    if (this.frameCounter <= 4.0)
                    {
                        this.frame.Y = num * 4;
                    }
                    else if (this.frameCounter <= 8.0)
                    {
                        this.frame.Y = num * 5;
                    }
                    else if (this.frameCounter <= 12.0)
                    {
                        this.frame.Y = num * 6;
                    }
                    else if (this.frameCounter <= 16.0)
                    {
                        this.frame.Y = num * 7;
                    }
                    else if (this.frameCounter <= 20.0)
                    {
                        this.frame.Y = num * 8;
                    }
                    else
                    {
                        this.frame.Y = num * 9;
                        this.frameCounter = 100.0;
                    }
                }
                else
                {
                    this.frameCounter++;
                    if (this.frameCounter <= 4.0)
                    {
                        this.frame.Y = 0;
                    }
                    else if (this.frameCounter <= 8.0)
                    {
                        this.frame.Y = num;
                    }
                    else if (this.frameCounter <= 12.0)
                    {
                        this.frame.Y = num * 2;
                    }
                    else
                    {
                        this.frame.Y = num * 3;
                        if (this.frameCounter >= 16.0)
                        {
                            this.frameCounter = 0.0;
                        }
                    }
                }
            }
            else if (((this.type == 0x1d) || (this.type == 0x20)) || (this.type == 0x2d))
            {
                if (this.velocity.Y == 0f)
                {
                    if (this.direction == 1)
                    {
                        this.spriteDirection = 1;
                    }
                    if (this.direction == -1)
                    {
                        this.spriteDirection = -1;
                    }
                }
                this.frame.Y = 0;
                if (this.velocity.Y != 0f)
                {
                    this.frame.Y += num;
                }
                else if (this.ai[1] > 0f)
                {
                    this.frame.Y += num * 2;
                }
            }
            if (this.type == 0x22)
            {
                this.frameCounter++;
                if (this.frameCounter >= 4.0)
                {
                    this.frame.Y += num;
                    this.frameCounter = 0.0;
                }
                if (this.frame.Y >= (num * Main.npcFrameCount[this.type]))
                {
                    this.frame.Y = 0;
                }
            }
        }

        public Color GetAlpha(Color newColor)
        {
            float num = ((float) (0xff - this.alpha)) / 255f;
            int r = (int) (newColor.R * num);
            int g = (int) (newColor.G * num);
            int b = (int) (newColor.B * num);
            int a = newColor.A - this.alpha;
            if (((this.type == 0x19) || (this.type == 30)) || (((this.type == 0x21) || (this.type == 0x3b)) || (this.type == 60)))
            {
                return new Color(200, 200, 200, 0);
            }
            if (this.type == 0x48)
            {
                r = newColor.R;
                g = newColor.G;
                b = newColor.B;
            }
            else if (((this.type == 0x40) || (this.type == 0x3f)) || ((this.type == 0x4b) || (this.type == 0x67)))
            {
                r = (int) (newColor.R * 1.5);
                g = (int) (newColor.G * 1.5);
                b = (int) (newColor.B * 1.5);
                if (r > 0xff)
                {
                    r = 0xff;
                }
                if (g > 0xff)
                {
                    g = 0xff;
                }
                if (b > 0xff)
                {
                    b = 0xff;
                }
            }
            if (a < 0)
            {
                a = 0;
            }
            if (a > 0xff)
            {
                a = 0xff;
            }
            return new Color(r, g, b, a);
        }

        public string GetChat()
        {
            string str = Main.chrName[0x12];
            string str2 = Main.chrName[0x11];
            string str3 = Main.chrName[0x13];
            string str4 = Main.chrName[20];
            string str5 = Main.chrName[0x26];
            string text1 = Main.chrName[0x36];
            string str6 = Main.chrName[0x16];
            string text2 = Main.chrName[0x6c];
            string str7 = Main.chrName[0x6b];
            string str8 = Main.chrName[0x7c];
            bool flag = false;
            bool flag2 = false;
            bool flag3 = false;
            bool flag4 = false;
            bool flag5 = false;
            bool flag6 = false;
            bool flag7 = false;
            bool flag8 = false;
            bool flag9 = false;
            for (int i = 0; i < 200; i++)
            {
                if (Main.npc[i].active)
                {
                    if (Main.npc[i].type == 0x11)
                    {
                        flag = true;
                    }
                    else if (Main.npc[i].type == 0x12)
                    {
                        flag2 = true;
                    }
                    else if (Main.npc[i].type == 0x13)
                    {
                        flag3 = true;
                    }
                    else if (Main.npc[i].type == 20)
                    {
                        flag4 = true;
                    }
                    else if (Main.npc[i].type == 0x25)
                    {
                        flag5 = true;
                    }
                    else if (Main.npc[i].type == 0x26)
                    {
                        flag6 = true;
                    }
                    else if (Main.npc[i].type == 0x7c)
                    {
                        flag7 = true;
                    }
                    else if (Main.npc[i].type == 0x6b)
                    {
                        flag8 = true;
                    }
                    else if (Main.npc[i].type == 2)
                    {
                        flag9 = true;
                    }
                }
            }
            string str9 = "";
            if (this.type == 0x11)
            {
                if (!downedBoss1 && (Main.rand.Next(3) == 0))
                {
                    if (Main.player[Main.myPlayer].statLifeMax < 200)
                    {
                        return "I hope a scrawny kid like you isn't all that is standing between us and Cthulu's Eye.";
                    }
                    if (Main.player[Main.myPlayer].statDefense <= 10)
                    {
                        return "Look at that shoddy armor you're wearing. Better buy some more healing potions.";
                    }
                    return "I feel like an evil presence is watching me.";
                }
                if (Main.dayTime)
                {
                    if (Main.time < 16200.0)
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                return "Sword beats paper! Get one today.";

                            case 1:
                                return "You want apples? You want carrots? You want pineapples? We got torches.";
                        }
                        return "Lovely morning, wouldn't you say? Was there something you needed?";
                    }
                    if (Main.time > 37800.0)
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                return "Night will be upon us soon, friend. Make your choices while you can.";

                            case 1:
                                return "You have no idea how much Dirt Blocks sell for overseas.";
                        }
                        return ("Ah, they will tell tales of " + Main.player[Main.myPlayer].name + " some day... good ones I'm sure.");
                    }
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            return "Check out my dirt blocks; they are extra dirty.";

                        case 1:
                            return "Boy, that sun is hot! I do have some perfectly ventilated armor.";
                    }
                    return "The sun is high, but my prices are not.";
                }
                if (Main.bloodMoon)
                {
                    if ((flag2 && flag7) && (Main.rand.Next(3) == 0))
                    {
                        return ("Oh, great. I can hear " + str8 + " and " + str + " arguing from here.");
                    }
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            return "Have you seen Chith...Shith.. Chat... The big eye?";

                        case 1:
                            return ("Hey, this house is secure, right? Right? " + Main.player[Main.myPlayer].name + "?");

                        case 2:
                            return "Not even a blood moon can stop capitalism. Let's do some business.";
                    }
                    return "Keep your eye on the prize, buy a lense!";
                }
                if (Main.time < 9720.0)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        return "Kosh, kapleck Mog. Oh sorry, that's klingon for 'Buy something or die.'";
                    }
                    return (Main.player[Main.myPlayer].name + " is it? I've heard good things, friend!");
                }
                if (Main.time > 22680.0)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        return "I hear there's a secret treasure... oh never mind.";
                    }
                    return "Angel Statue you say? I'm sorry, I'm not a junk dealer.";
                }
                switch (Main.rand.Next(3))
                {
                    case 0:
                        return "The last guy who was here left me some junk... er I mean... treasures!";

                    case 1:
                        return "I wonder if the moon is made of cheese...huh, what? Oh yes, buy something!";
                }
                return "Did you say gold?  I'll take that off of ya.";
            }
            if (this.type == 0x12)
            {
                if (Main.bloodMoon)
                {
                    if (Main.player[Main.myPlayer].statLife < (Main.player[Main.myPlayer].statLifeMax * 0.66))
                    {
                        switch (Main.rand.Next(3))
                        {
                            case 0:
                                return "You better not get blood on me.";

                            case 1:
                                return "Hurry up and stop bleeding.";
                        }
                        return "If you're going to die, do it outside.";
                    }
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            return "What is that supposed to mean?!";

                        case 1:
                            return "I don't think I like your tone.";

                        case 2:
                            return "Why are you even here? If you aren't bleeding, you don't need to be here. Get out.";
                    }
                    return "WHAT?!";
                }
                if ((Main.rand.Next(3) == 0) && !downedBoss3)
                {
                    return "Have you seen that old man pacing around the dungeon? He looks troubled.";
                }
                if (flag6 && (Main.rand.Next(4) == 0))
                {
                    return ("I wish " + str5 + " would be more careful.  I'm getting tired of having to sew his limbs back on every day.");
                }
                if (flag3 && (Main.rand.Next(4) == 0))
                {
                    return ("Hey, has " + str3 + " mentioned needing to go to the doctor for any reason? Just wondering.");
                }
                if (flag9 && (Main.rand.Next(4) == 0))
                {
                    return ("I need to have a serious talk with " + str6 + ". How many times a week can you come in with severe lava burns?");
                }
                if (Main.player[Main.myPlayer].statLife < (Main.player[Main.myPlayer].statLifeMax * 0.33))
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            return "I think you look better this way.";

                        case 1:
                            return "Eww... What happened to your face?";

                        case 2:
                            return "MY GOODNESS! I'm good, but I'm not THAT good.";

                        case 3:
                            return "Dear friends we are gathered here today to bid farewell... Oh, you'll be fine.";
                    }
                    return "You left your arm over there. Let me get that for you...";
                }
                if (Main.player[Main.myPlayer].statLife < (Main.player[Main.myPlayer].statLifeMax * 0.66))
                {
                    switch (Main.rand.Next(7))
                    {
                        case 0:
                            return "Quit being such a baby! I've seen worse.";

                        case 1:
                            return "That's gonna need stitches!";

                        case 2:
                            return "Trouble with those bullies again?";

                        case 3:
                            return "Hold on, I've got some cartoon bandages around here somewhere.";

                        case 4:
                            return ("Walk it off, " + Main.player[Main.myPlayer].name + ", you'll be fine. Sheesh.");

                        case 5:
                            return "Does it hurt when you do that? Don't do that.";
                    }
                    return "You look half digested. Have you been chasing slimes again?";
                }
                switch (Main.rand.Next(4))
                {
                    case 0:
                        return "Turn your head and cough.";

                    case 1:
                        return "That's not the biggest I've ever seen... Yes, I've seen bigger wounds for sure.";

                    case 2:
                        return "Would you like a lollipop?";
                }
                return "Show me where it hurts.";
            }
            if (this.type == 0x13)
            {
                if (downedBoss3 && !Main.hardMode)
                {
                    return ("I heard there is a doll that looks very similar to " + str6 + " somewhere in the underworld.  I'd like to put a few rounds in it.");
                }
                if (flag2 && (Main.rand.Next(5) == 0))
                {
                    return ("Make it quick! I've got a date with " + str + " in an hour.");
                }
                if (flag2 && (Main.rand.Next(5) == 0))
                {
                    return ("I want what " + str + " is sellin'. What do you mean, she doesn't sell anything?");
                }
                if (flag4 && (Main.rand.Next(5) == 0))
                {
                    return (str4 + " is a looker.  Too bad she's such a prude.");
                }
                if (flag6 && (Main.rand.Next(5) == 0))
                {
                    return ("Don't bother with " + str5 + ", I've got all you need right here.");
                }
                if (flag6 && (Main.rand.Next(5) == 0))
                {
                    return ("What's " + str5 + "'s problem? Does he even realize we sell completely different stuff?");
                }
                if (Main.bloodMoon)
                {
                    if (Main.rand.Next(2) == 0)
                    {
                        return ("Man, it's a good night not to talk to anybody, don't you think, " + Main.player[Main.myPlayer].name + "?");
                    }
                    return "I love nights like tonight.  There is never a shortage of things to kill!";
                }
                switch (Main.rand.Next(3))
                {
                    case 0:
                        return "I see you're eyeballin' the Minishark.. You really don't want to know how it was made.";

                    case 1:
                        return "Hey, this ain't a movie, pal. Ammo is extra.";
                }
                return "Keep your hands off my gun, buddy!";
            }
            if (this.type == 20)
            {
                if (!downedBoss2 && (Main.rand.Next(3) == 0))
                {
                    return "Have you tried using purification powder on the ebonstone of the corruption?";
                }
                if (flag3 && (Main.rand.Next(4) == 0))
                {
                    return ("I wish " + str3 + " would stop flirting with me. Doesn't he realize I'm 500 years old?");
                }
                if (flag && (Main.rand.Next(4) == 0))
                {
                    return ("Why does " + str2 + " keep trying to sell me an angel statues? Everyone knows that they don't do anything.");
                }
                if (flag5 && (Main.rand.Next(4) == 0))
                {
                    return "Have you seen the old man walking around the dungeon? He doesn't look well at all...";
                }
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            return "I sell what I want! If you don't like it, too bad.";

                        case 1:
                            return "Why do you have to be so confrontational during a time like this?";

                        case 2:
                            return "I don't want you to buy my stuff. I want you to want to buy my stuff, ok?";
                    }
                    return "Dude, is it just me or is there like a million zombies out tonight?";
                }
                switch (Main.rand.Next(5))
                {
                    case 0:
                        return "You must cleanse the world of this corruption.";

                    case 1:
                        return "Be safe; Terraria needs you!";

                    case 2:
                        return "The sands of time are flowing. And well, you are not aging very gracefully.";

                    case 3:
                        return "What's this about me having more 'bark' than bite?";
                }
                return "So two goblins walk into a bar, and one says to the other, 'Want to get a Goblet of beer?!'";
            }
            if (this.type == 0x16)
            {
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            return "You can tell a Blood Moon is out when the sky turns red. There is something about it that causes monsters to swarm.";

                        case 1:
                            return "Hey, buddy, do you know where any deathweed is? Oh, no reason; just wondering, is all.";
                    }
                    return "If you were to look up, you'd see that the moon is red right now.";
                }
                if (!Main.dayTime)
                {
                    return "You should stay indoors at night. It is very dangerous to be wandering around in the dark.";
                }
                switch (Main.rand.Next(3))
                {
                    case 0:
                        return ("Greetings, " + Main.player[Main.myPlayer].name + ". Is there something I can help you with?");

                    case 1:
                        return "I am here to give you advice on what to do next.  It is recommended that you talk with me anytime you get stuck.";
                }
                return "They say there is a person who will tell you how to survive in this land... oh wait. That's me.";
            }
            if (this.type == 0x25)
            {
                if (Main.dayTime)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            return "I cannot let you enter until you free me of my curse.";

                        case 1:
                            return "Come back at night if you wish to enter.";
                    }
                    return "My master cannot be summoned under the light of day.";
                }
                if ((Main.player[Main.myPlayer].statLifeMax < 300) || (Main.player[Main.myPlayer].statDefense < 10))
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            return "You are far too weak to defeat my curse.  Come back when you aren't so worthless.";

                        case 1:
                            return "You pathetic fool.  You cannot hope to face my master as you are now.";

                        case 2:
                            return "I hope you have like six friends standing around behind you.";
                    }
                    return "Please, no, stranger. You'll only get yourself killed.";
                }
                switch (Main.rand.Next(4))
                {
                    case 0:
                        return "You just might be strong enough to free me from my curse...";

                    case 1:
                        return "Stranger, do you possess the strength to defeat my master?";

                    case 2:
                        return "Please! Battle my captor and free me! I beg you!";
                }
                return "Defeat my master, and I will grant you passage into the Dungeon.";
            }
            if (this.type == 0x26)
            {
                if (!downedBoss2 && (Main.rand.Next(3) == 0))
                {
                    str9 = "Trying to get past that ebonrock, eh?  Why not introduce it to one of these explosives!";
                }
                if (Main.bloodMoon)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            return "Hey, have you seen a clown around?";

                        case 1:
                            return "There was a bomb sitting right here, and now I can't seem to find it...";
                    }
                    return "I've got something for them zombies alright!";
                }
                if (flag3 && (Main.rand.Next(5) == 0))
                {
                    return ("Even " + str3 + " wants what I'm selling!");
                }
                if (flag3 && (Main.rand.Next(5) == 0))
                {
                    return "Would you rather have a bullet hole or a grenade hole? That's what I thought.";
                }
                if (flag2 && (Main.rand.Next(4) == 0))
                {
                    return ("I'm sure " + str + " will help if you accidentally lose a limb to these.");
                }
                if (flag4 && (Main.rand.Next(4) == 0))
                {
                    return "Why purify the world when you can just blow it up?";
                }
                if (!Main.dayTime)
                {
                    switch (Main.rand.Next(4))
                    {
                        case 0:
                            return "If you throw this one in the bathtub and close all the windows, it'll clear your sinuses and pop your ears!";

                        case 1:
                            return "Wanna play Fuse Chicken?";

                        case 2:
                            return "Hey, could you sign this Griefing Waiver?";
                    }
                    return "NO SMOKING IN HERE!!";
                }
                switch (Main.rand.Next(5))
                {
                    case 0:
                        return "Explosives are da' bomb these days.  Buy some now!";

                    case 1:
                        return "It's a good day to die!";

                    case 2:
                        return "I wonder what happens if I... (BOOM!)... Oh, sorry, did you need that leg?";

                    case 3:
                        return "Dynamite, my own special cure-all for what ails ya.";
                }
                return "Check out my goods; they have explosive prices!";
            }
            if (this.type == 0x36)
            {
                if (!flag7 && (Main.rand.Next(2) == 0))
                {
                    return "I keep having vague memories of tying up a woman and throwing her in a dungeon.";
                }
                if (Main.bloodMoon)
                {
                    return (Main.player[Main.myPlayer].name + "... we have a problem! Its a blood moon out there!");
                }
                if (flag2 && (Main.rand.Next(4) == 0))
                {
                    return ("T'were I younger, I would ask " + str + " out. I used to be quite the lady killer.");
                }
                if (Main.player[Main.myPlayer].head == 0x18)
                {
                    return "That Red Hat of yours looks familiar...";
                }
                switch (Main.rand.Next(6))
                {
                    case 0:
                        return "Thanks again for freeing me from my curse. Felt like something jumped up and bit me";

                    case 1:
                        return "Mama always said I would make a great tailor.";

                    case 2:
                        return "Life's like a box of clothes; you never know what you are gonna wear!";

                    case 3:
                        return "Of course embroidery is hard! If it wasn't hard, no one would do it! That's what makes it great.";

                    case 4:
                        return "I know everything they is to know about the clothierin' business.";
                }
                return "Being cursed was lonely, so I once made a friend out of leather. I named him Wilson.";
            }
            if (this.type == 0x69)
            {
                return "Thank you for freeing me, human.  I was tied up and left here by the other goblins.  You could say that we didn't get along very well.";
            }
            if (this.type == 0x6a)
            {
                return "Thanks for saving me, friend!  This bondage was starting to chafe.";
            }
            if (this.type == 0x6b)
            {
                if (this.homeless)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            return "I can't believe they tied me up and left me here just for pointing out that they weren't going east!";

                        case 1:
                            return "Now that I'm an outcast, can I throw away the spiked balls? My pockets hurt.";

                        case 2:
                            return "Looking for a gadgets expert? I'm your goblin!";

                        case 3:
                            return "Thanks for your help. Now, I have to finish pacing around aimlessly here. I'm sure we'll meet again.";
                    }
                    return "I thought you'd be taller.";
                }
                if (flag7 && (Main.rand.Next(4) == 0))
                {
                    return ("Hey...what's " + str8 + " up to? Have you...have you talked to her, by chance?");
                }
                if (!Main.dayTime)
                {
                    switch (Main.rand.Next(5))
                    {
                        case 0:
                            return "Hey, does your hat need a motor? I think I have a motor that would fit exactly in that hat.";

                        case 1:
                            return "Yo, I heard you like rockets and running boots, so I put some rockets in your running boots.";

                        case 2:
                            return "Silence is golden. Duct tape is silver.";

                        case 3:
                            return "YES, gold is stronger than iron. What are they teaching these humans nowadays?";
                    }
                    return "You know, that mining helmet-flipper combination was a much better idea on paper.";
                }
                switch (Main.rand.Next(5))
                {
                    case 0:
                        return "Goblins are surprisingly easy to anger. In fact, they could start a war over cloth!";

                    case 1:
                        return "To be honest, most goblins aren't exactly rocket scientists. Well, some are.";

                    case 2:
                        return "Do you know why we all carry around these spiked balls? Because I don't.";

                    case 3:
                        return "I just finished my newest creation! This version doesn't explode violently if you breathe on it too hard.";
                }
                return "Goblin thieves aren't very good at their job. They can't even steal from an unlocked chest!";
            }
            if (this.type == 0x6c)
            {
                if (this.homeless)
                {
                    int num30 = Main.rand.Next(3);
                    if (num30 == 0)
                    {
                        return "Ohh, my hero!";
                    }
                    if ((num30 == 1) && !Main.player[Main.myPlayer].male)
                    {
                        return "Oh, how heroic! Thank you for saving me, young lady!";
                    }
                    if (num30 == 1)
                    {
                        return "Oh, how heroic! Thank you for saving me, young man!";
                    }
                    if (num30 == 2)
                    {
                        str9 = "Now that we know each other, I can move in with you, right?";
                    }
                    return str9;
                }
                if ((Main.player[Main.myPlayer].male && flag9) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str6 + "! What can I do for you today?");
                }
                if ((Main.player[Main.myPlayer].male && flag6) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str5 + "! What can I do for you today?");
                }
                if ((Main.player[Main.myPlayer].male && flag8) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str7 + "! What can I do for you today?");
                }
                if ((!Main.player[Main.myPlayer].male && flag2) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str + "! What can I do for you today?");
                }
                if ((!Main.player[Main.myPlayer].male && flag7) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str8 + "! What can I do for you today?");
                }
                if ((!Main.player[Main.myPlayer].male && flag4) && (Main.rand.Next(6) == 0))
                {
                    return ("Well, hi there, " + str4 + "! What can I do for you today?");
                }
                if (!Main.dayTime)
                {
                    switch (Main.rand.Next(3))
                    {
                        case 0:
                            return "Want me to pull a coin from behind your ear? No? Ok.";

                        case 1:
                            return "Do you want some magic candy? No? Ok.";

                        case 2:
                            str9 = "I make a rather enchanting hot chocolate if you'd be inter...No? Ok.";
                            break;
                    }
                    return str9;
                }
                int num32 = Main.rand.Next(5);
                if (num32 == 0)
                {
                    return "Are you here for a peek at my crystal ball?";
                }
                if (num32 == 1)
                {
                    return "Ever wanted an enchanted ring that turns rocks into slimes? Well neither did I.";
                }
                if (num32 == 2)
                {
                    return "Someone once told me friendship is magic. That's ridiculous. You can't turn people into frogs with friendship.";
                }
                if (num32 == 3)
                {
                    return "I can see your future now... You will buy a lot of items from me!";
                }
                return "I once tried to bring an Angel Statue to life. It didn't do anything.";
            }
            if (this.type == 0x7b)
            {
                return "Thanks!  It was just a matter of time before I ended up like the rest of the skeletons down here.";
            }
            if (this.type != 0x7c)
            {
                return str9;
            }
            if (this.homeless)
            {
                switch (Main.rand.Next(4))
                {
                    case 0:
                        return "Hey, watch where you're going! I was over there a little while ago!";

                    case 1:
                        return "Hold on, I've almost got wifi going down here.";

                    case 2:
                        return "But I was almost done putting blinking lights up here!";
                }
                return "DON'T MOVE. I DROPPED MY CONTACT.";
            }
            if (Main.bloodMoon)
            {
                switch (Main.rand.Next(4))
                {
                    case 0:
                        return "All I want is for the switch to make the... What?!";

                    case 1:
                        return "Oh, let me guess. Didn't buy enough wire. Idiot.";

                    case 2:
                        return "Just-could you just... Please? Ok? Ok. Ugh.";
                }
                return "I don't appreciate the way you're looking at me. I am WORKING right now.";
            }
            if (flag8 && (Main.rand.Next(6) == 0))
            {
                return ("Hey, " + Main.player[Main.myPlayer].name + ", did you just come from " + str7 + "'s? Did he say anything about me by chance?");
            }
            if (flag3 && (Main.rand.Next(6) == 0))
            {
                return (str3 + " keeps talking about pressing my pressure plate. I told him it was for stepping on.");
            }
            int num35 = Main.rand.Next(3);
            if (num35 == 0)
            {
                return "Always buy more wire than you need!";
            }
            if (num35 == 1)
            {
                return "Did you make sure your device was plugged in?";
            }
            return "Oh, you know what this house needs? More blinking lights.";
        }

        public Color GetColor(Color newColor)
        {
            int r = this.color.R - (0xff - newColor.R);
            int g = this.color.G - (0xff - newColor.G);
            int b = this.color.B - (0xff - newColor.B);
            int a = this.color.A - (0xff - newColor.A);
            if (r < 0)
            {
                r = 0;
            }
            if (r > 0xff)
            {
                r = 0xff;
            }
            if (g < 0)
            {
                g = 0;
            }
            if (g > 0xff)
            {
                g = 0xff;
            }
            if (b < 0)
            {
                b = 0;
            }
            if (b > 0xff)
            {
                b = 0xff;
            }
            if (a < 0)
            {
                a = 0;
            }
            if (a > 0xff)
            {
                a = 0xff;
            }
            return new Color(r, g, b, a);
        }

        public void HitEffect(int hitDirection = 0, double dmg = 10.0)
        {
            if (this.active)
            {
                Color color2;
                if (((this.type == 1) || (this.type == 0x10)) || (this.type == 0x47))
                {
                    if (this.life > 0)
                    {
                        for (int i = 0; i < ((dmg / ((double) this.lifeMax)) * 100.0); i++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) hitDirection, -1f, this.alpha, this.color, 1f);
                        }
                    }
                    else
                    {
                        for (int j = 0; j < 50; j++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) (2 * hitDirection), -2f, this.alpha, this.color, 1f);
                        }
                        if ((Main.netMode != 1) && (this.type == 0x10))
                        {
                            int num3 = Main.rand.Next(2) + 2;
                            for (int k = 0; k < num3; k++)
                            {
                                int index = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, 1, 0);
                                Main.npc[index].SetDefaults("Baby Slime");
                                Main.npc[index].velocity.X = this.velocity.X * 2f;
                                Main.npc[index].velocity.Y = this.velocity.Y;
                                Main.npc[index].velocity.X += (Main.rand.Next(-20, 20) * 0.1f) + ((k * this.direction) * 0.3f);
                                Main.npc[index].velocity.Y -= (Main.rand.Next(0, 10) * 0.1f) + k;
                                Main.npc[index].ai[1] = k;
                                if ((Main.netMode == 2) && (index < 200))
                                {
                                    NetMessage.SendData(0x17, -1, -1, "", index, 0f, 0f, 0f, 0);
                                }
                            }
                        }
                    }
                }
                if (this.type == 0x8d)
                {
                    if (this.life > 0)
                    {
                        for (int m = 0; m < ((dmg / ((double) this.lifeMax)) * 100.0); m++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) hitDirection, -1f, this.alpha, new Color(210, 230, 140), 1f);
                        }
                    }
                    else
                    {
                        for (int n = 0; n < 50; n++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) (2 * hitDirection), -2f, this.alpha, new Color(210, 230, 140), 1f);
                        }
                    }
                }
                if (this.type == 0x70)
                {
                    for (int num8 = 0; num8 < 20; num8++)
                    {
                        color2 = new Color();
                        int num9 = Dust.NewDust(new Vector2(this.position.X, this.position.Y + 2f), this.width, this.height, 0x12, 0f, 0f, 100, color2, 2f);
                        if (Main.rand.Next(2) == 0)
                        {
                            Dust dust1 = Main.dust[num9];
                            dust1.scale *= 0.6f;
                        }
                        else
                        {
                            Dust dust2 = Main.dust[num9];
                            dust2.velocity = (Vector2) (dust2.velocity * 1.4f);
                            Main.dust[num9].noGravity = true;
                        }
                    }
                }
                if ((this.type == 0x51) || (this.type == 0x79))
                {
                    if (this.life > 0)
                    {
                        for (int num10 = 0; num10 < ((dmg / ((double) this.lifeMax)) * 100.0); num10++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 14, 0f, 0f, this.alpha, this.color, 1f);
                        }
                    }
                    else
                    {
                        for (int num11 = 0; num11 < 50; num11++)
                        {
                            int num12 = Dust.NewDust(this.position, this.width, this.height, 14, (float) hitDirection, 0f, this.alpha, this.color, 1f);
                            Dust dust3 = Main.dust[num12];
                            dust3.velocity = (Vector2) (dust3.velocity * 2f);
                        }
                        if (Main.netMode != 1)
                        {
                            if (this.type == 0x79)
                            {
                                int num13 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, 0x51, 0);
                                Main.npc[num13].SetDefaults("Slimer2");
                                Main.npc[num13].velocity.X = this.velocity.X;
                                Main.npc[num13].velocity.Y = this.velocity.Y;
                                Gore.NewGore(this.position, this.velocity, 0x5e, this.scale);
                                if ((Main.netMode == 2) && (num13 < 200))
                                {
                                    NetMessage.SendData(0x17, -1, -1, "", num13, 0f, 0f, 0f, 0);
                                }
                            }
                            else if (this.scale >= 1f)
                            {
                                int num14 = Main.rand.Next(2) + 2;
                                for (int num15 = 0; num15 < num14; num15++)
                                {
                                    int num16 = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, 1, 0);
                                    Main.npc[num16].SetDefaults("Slimeling");
                                    Main.npc[num16].velocity.X = this.velocity.X * 3f;
                                    Main.npc[num16].velocity.Y = this.velocity.Y;
                                    Main.npc[num16].velocity.X += (Main.rand.Next(-10, 10) * 0.1f) + ((num15 * this.direction) * 0.3f);
                                    Main.npc[num16].velocity.Y -= (Main.rand.Next(0, 10) * 0.1f) + num15;
                                    Main.npc[num16].ai[1] = num15;
                                    if ((Main.netMode == 2) && (num16 < 200))
                                    {
                                        NetMessage.SendData(0x17, -1, -1, "", num16, 0f, 0f, 0f, 0);
                                    }
                                }
                            }
                        }
                    }
                }
                if (((this.type == 120) || (this.type == 0x89)) || (this.type == 0x8a))
                {
                    if (this.life > 0)
                    {
                        for (int num17 = 0; num17 < ((dmg / ((double) this.lifeMax)) * 50.0); num17++)
                        {
                            color2 = new Color();
                            int num18 = Dust.NewDust(this.position, this.width, this.height, 0x47, 0f, 0f, 200, color2, 1f);
                            Dust dust4 = Main.dust[num18];
                            dust4.velocity = (Vector2) (dust4.velocity * 1.5f);
                        }
                    }
                    else
                    {
                        for (int num19 = 0; num19 < 50; num19++)
                        {
                            color2 = new Color();
                            int num20 = Dust.NewDust(this.position, this.width, this.height, 0x47, (float) hitDirection, 0f, 200, color2, 1f);
                            Dust dust5 = Main.dust[num20];
                            dust5.velocity = (Vector2) (dust5.velocity * 1.5f);
                        }
                    }
                }
                if (this.type == 0x7a)
                {
                    if (this.life > 0)
                    {
                        for (int num21 = 0; num21 < ((dmg / ((double) this.lifeMax)) * 50.0); num21++)
                        {
                            color2 = new Color();
                            int num22 = Dust.NewDust(this.position, this.width, this.height, 0x48, 0f, 0f, 200, color2, 1f);
                            Dust dust6 = Main.dust[num22];
                            dust6.velocity = (Vector2) (dust6.velocity * 1.5f);
                        }
                    }
                    else
                    {
                        for (int num23 = 0; num23 < 50; num23++)
                        {
                            color2 = new Color();
                            int num24 = Dust.NewDust(this.position, this.width, this.height, 0x48, (float) hitDirection, 0f, 200, color2, 1f);
                            Dust dust7 = Main.dust[num24];
                            dust7.velocity = (Vector2) (dust7.velocity * 1.5f);
                        }
                    }
                }
                if (this.type == 0x4b)
                {
                    if (this.life > 0)
                    {
                        for (int num25 = 0; num25 < ((dmg / ((double) this.lifeMax)) * 50.0); num25++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 0x37, 0f, 0f, 200, this.color, 1f);
                        }
                    }
                    else
                    {
                        for (int num26 = 0; num26 < 50; num26++)
                        {
                            int num27 = Dust.NewDust(this.position, this.width, this.height, 0x37, (float) hitDirection, 0f, 200, this.color, 1f);
                            Dust dust8 = Main.dust[num27];
                            dust8.velocity = (Vector2) (dust8.velocity * 2f);
                        }
                    }
                }
                if (((this.type == 0x3f) || (this.type == 0x40)) || (this.type == 0x67))
                {
                    Color newColor = new Color(50, 120, 0xff, 100);
                    if (this.type == 0x40)
                    {
                        newColor = new Color(0xe1, 70, 140, 100);
                    }
                    if (this.type == 0x67)
                    {
                        newColor = new Color(70, 0xe1, 140, 100);
                    }
                    if (this.life > 0)
                    {
                        for (int num28 = 0; num28 < ((dmg / ((double) this.lifeMax)) * 50.0); num28++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) hitDirection, -1f, 0, newColor, 1f);
                        }
                    }
                    else
                    {
                        for (int num29 = 0; num29 < 0x19; num29++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) (2 * hitDirection), -2f, 0, newColor, 1f);
                        }
                    }
                }
                else if ((this.type == 0x3b) || (this.type == 60))
                {
                    if (this.life > 0)
                    {
                        for (int num30 = 0; num30 < ((dmg / ((double) this.lifeMax)) * 80.0); num30++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 6, (float) (hitDirection * 2), -1f, this.alpha, color2, 1.5f);
                        }
                    }
                    else
                    {
                        for (int num31 = 0; num31 < 40; num31++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 6, (float) (hitDirection * 2), -1f, this.alpha, color2, 1.5f);
                        }
                    }
                }
                else if (this.type == 50)
                {
                    if (this.life > 0)
                    {
                        for (int num32 = 0; num32 < ((dmg / ((double) this.lifeMax)) * 300.0); num32++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) hitDirection, -1f, 0xaf, new Color(0, 80, 0xff, 100), 1f);
                        }
                    }
                    else
                    {
                        for (int num33 = 0; num33 < 200; num33++)
                        {
                            Dust.NewDust(this.position, this.width, this.height, 4, (float) (2 * hitDirection), -2f, 0xaf, new Color(0, 80, 0xff, 100), 1f);
                        }
                        if (Main.netMode != 1)
                        {
                            int num34 = Main.rand.Next(4) + 4;
                            for (int num35 = 0; num35 < num34; num35++)
                            {
                                int x = ((int) this.position.X) + Main.rand.Next(this.width - 0x20);
                                int y = ((int) this.position.Y) + Main.rand.Next(this.height - 0x20);
                                int num38 = NewNPC(x, y, 1, 0);
                                Main.npc[num38].SetDefaults(1, -1f);
                                Main.npc[num38].velocity.X = Main.rand.Next(-15, 0x10) * 0.1f;
                                Main.npc[num38].velocity.Y = Main.rand.Next(-30, 1) * 0.1f;
                                Main.npc[num38].ai[1] = Main.rand.Next(3);
                                if ((Main.netMode == 2) && (num38 < 200))
                                {
                                    NetMessage.SendData(0x17, -1, -1, "", num38, 0f, 0f, 0f, 0);
                                }
                            }
                        }
                    }
                }
                else if (((this.type == 0x31) || (this.type == 0x33)) || (this.type == 0x5d))
                {
                    if (this.life > 0)
                    {
                        for (int num39 = 0; num39 < ((dmg / ((double) this.lifeMax)) * 30.0); num39++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num40 = 0; num40 < 15; num40++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        if (this.type == 0x33)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x53, 1f);
                        }
                        else if (this.type == 0x5d)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x6b, 1f);
                        }
                        else
                        {
                            Gore.NewGore(this.position, this.velocity, 0x52, 1f);
                        }
                    }
                }
                else if (((this.type == 0x2e) || (this.type == 0x37)) || (((this.type == 0x43) || (this.type == 0x4a)) || (this.type == 0x66)))
                {
                    if (this.life > 0)
                    {
                        for (int num41 = 0; num41 < ((dmg / ((double) this.lifeMax)) * 20.0); num41++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num42 = 0; num42 < 10; num42++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        if (this.type == 0x2e)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x4c, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x4d, 1f);
                        }
                        else if (this.type == 0x43)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x5f, 1f);
                            Gore.NewGore(this.position, this.velocity, 0x5f, 1f);
                            Gore.NewGore(this.position, this.velocity, 0x60, 1f);
                        }
                        else if (this.type == 0x4a)
                        {
                            Gore.NewGore(this.position, this.velocity, 100, 1f);
                        }
                        else if (this.type == 0x66)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x74, 1f);
                        }
                    }
                }
                else if (((this.type == 0x2f) || (this.type == 0x39)) || (this.type == 0x3a))
                {
                    if (this.life > 0)
                    {
                        for (int num43 = 0; num43 < ((dmg / ((double) this.lifeMax)) * 20.0); num43++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num44 = 0; num44 < 10; num44++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        if (this.type == 0x39)
                        {
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x54, 1f);
                        }
                        else if (this.type == 0x3a)
                        {
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x55, 1f);
                        }
                        else
                        {
                            Gore.NewGore(this.position, this.velocity, 0x4e, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x4f, 1f);
                        }
                    }
                }
                else if (this.type == 2)
                {
                    if (this.life > 0)
                    {
                        for (int num45 = 0; num45 < ((dmg / ((double) this.lifeMax)) * 100.0); num45++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num46 = 0; num46 < 50; num46++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        Gore.NewGore(this.position, this.velocity, 1, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 2, 1f);
                    }
                }
                else if (this.type == 0x85)
                {
                    if (this.life <= 0)
                    {
                        for (int num48 = 0; num48 < 50; num48++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        Gore.NewGore(this.position, this.velocity, 0x9b, 1f);
                        Gore.NewGore(new Vector2(this.position.X, this.position.Y + 14f), this.velocity, 0x9b, 1f);
                    }
                    else
                    {
                        for (int num47 = 0; num47 < ((dmg / ((double) this.lifeMax)) * 100.0); num47++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                        if ((this.life < (this.lifeMax * 0.5f)) && (this.localAI[0] == 0f))
                        {
                            this.localAI[0] = 1f;
                            Gore.NewGore(this.position, this.velocity, 1, 1f);
                        }
                    }
                }
                else if (this.type == 0x45)
                {
                    if (this.life > 0)
                    {
                        for (int num49 = 0; num49 < ((dmg / ((double) this.lifeMax)) * 100.0); num49++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num50 = 0; num50 < 50; num50++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        Gore.NewGore(this.position, this.velocity, 0x61, 1f);
                        Gore.NewGore(this.position, this.velocity, 0x62, 1f);
                    }
                }
                else if (this.type == 0x3d)
                {
                    if (this.life > 0)
                    {
                        for (int num51 = 0; num51 < ((dmg / ((double) this.lifeMax)) * 100.0); num51++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num52 = 0; num52 < 50; num52++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        Gore.NewGore(this.position, this.velocity, 0x56, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 0x57, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), this.velocity, 0x58, 1f);
                    }
                }
                else if (this.type == 0x41)
                {
                    if (this.life > 0)
                    {
                        for (int num53 = 0; num53 < ((dmg / ((double) this.lifeMax)) * 150.0); num53++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num54 = 0; num54 < 0x4b; num54++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                        }
                        Gore.NewGore(this.position, (Vector2) (this.velocity * 0.8f), 0x59, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), (Vector2) (this.velocity * 0.8f), 90, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), (Vector2) (this.velocity * 0.8f), 0x5b, 1f);
                        Gore.NewGore(new Vector2(this.position.X + 14f, this.position.Y), (Vector2) (this.velocity * 0.8f), 0x5c, 1f);
                    }
                }
                else if ((((this.type == 3) || (this.type == 0x34)) || ((this.type == 0x35) || (this.type == 0x68))) || ((this.type == 0x6d) || (this.type == 0x84)))
                {
                    if (this.life > 0)
                    {
                        for (int num55 = 0; num55 < ((dmg / ((double) this.lifeMax)) * 100.0); num55++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num56 = 0; num56 < 50; num56++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                        }
                        if (this.type == 0x68)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x75, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x76, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x76, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x77, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x77, 1f);
                        }
                        else if (this.type == 0x6d)
                        {
                            Gore.NewGore(this.position, this.velocity, 0x79, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x7a, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x7a, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x7b, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x7b, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 46f), this.velocity, 120, 1f);
                        }
                        else
                        {
                            if (this.type == 0x84)
                            {
                                Gore.NewGore(this.position, this.velocity, 0x9a, 1f);
                            }
                            else
                            {
                                Gore.NewGore(this.position, this.velocity, 3, 1f);
                            }
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 4, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 5, 1f);
                        }
                    }
                }
                else if ((this.type == 0x53) || (this.type == 0x54))
                {
                    if (this.life > 0)
                    {
                        for (int num57 = 0; num57 < ((dmg / ((double) this.lifeMax)) * 50.0); num57++)
                        {
                            color2 = new Color();
                            int num58 = Dust.NewDust(this.position, this.width, this.height, 0x1f, 0f, 0f, 0, color2, 1.5f);
                            Main.dust[num58].noGravity = true;
                        }
                    }
                    else
                    {
                        for (int num59 = 0; num59 < 20; num59++)
                        {
                            color2 = new Color();
                            int num60 = Dust.NewDust(this.position, this.width, this.height, 0x1f, 0f, 0f, 0, color2, 1.5f);
                            Dust dust9 = Main.dust[num60];
                            dust9.velocity = (Vector2) (dust9.velocity * 2f);
                            Main.dust[num60].noGravity = true;
                        }
                        int num61 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) Main.rand.Next(-2, 3), (float) Main.rand.Next(-2, 3)), 0x3d, this.scale);
                        Gore gore1 = Main.gore[num61];
                        gore1.velocity = (Vector2) (gore1.velocity * 0.5f);
                        num61 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) Main.rand.Next(-2, 3), (float) Main.rand.Next(-2, 3)), 0x3d, this.scale);
                        Gore gore2 = Main.gore[num61];
                        gore2.velocity = (Vector2) (gore2.velocity * 0.5f);
                        num61 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) Main.rand.Next(-2, 3), (float) Main.rand.Next(-2, 3)), 0x3d, this.scale);
                        Gore gore3 = Main.gore[num61];
                        gore3.velocity = (Vector2) (gore3.velocity * 0.5f);
                    }
                }
                else
                {
                    Vector2 vector2;
                    if (((this.type == 4) || (this.type == 0x7e)) || (this.type == 0x7d))
                    {
                        if (this.life > 0)
                        {
                            for (int num62 = 0; num62 < ((dmg / ((double) this.lifeMax)) * 100.0); num62++)
                            {
                                color2 = new Color();
                                Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                            }
                        }
                        else
                        {
                            for (int num63 = 0; num63 < 150; num63++)
                            {
                                color2 = new Color();
                                Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                            }
                            for (int num64 = 0; num64 < 2; num64++)
                            {
                                Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 2, 1f);
                                Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 7, 1f);
                                Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 9, 1f);
                                if (this.type == 4)
                                {
                                    Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 10, 1f);
                                    Main.PlaySound(15, (int) this.position.X, (int) this.position.Y, 0);
                                }
                                else if (this.type == 0x7d)
                                {
                                    Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 0x92, 1f);
                                }
                                else if (this.type == 0x7e)
                                {
                                    Gore.NewGore(this.position, new Vector2(Main.rand.Next(-30, 0x1f) * 0.2f, Main.rand.Next(-30, 0x1f) * 0.2f), 0x91, 1f);
                                }
                            }
                            if ((this.type == 0x7d) || (this.type == 0x7e))
                            {
                                for (int num65 = 0; num65 < 10; num65++)
                                {
                                    color2 = new Color();
                                    int num66 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1f, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust10 = Main.dust[num66];
                                    dust10.velocity = (Vector2) (dust10.velocity * 1.4f);
                                }
                                for (int num67 = 0; num67 < 5; num67++)
                                {
                                    color2 = new Color();
                                    int num68 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 2.5f);
                                    Main.dust[num68].noGravity = true;
                                    Dust dust11 = Main.dust[num68];
                                    dust11.velocity = (Vector2) (dust11.velocity * 5f);
                                    color2 = new Color();
                                    num68 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust12 = Main.dust[num68];
                                    dust12.velocity = (Vector2) (dust12.velocity * 3f);
                                }
                                vector2 = new Vector2();
                                int num69 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore4 = Main.gore[num69];
                                gore4.velocity = (Vector2) (gore4.velocity * 0.4f);
                                Main.gore[num69].velocity.X++;
                                Main.gore[num69].velocity.Y++;
                                vector2 = new Vector2();
                                num69 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore5 = Main.gore[num69];
                                gore5.velocity = (Vector2) (gore5.velocity * 0.4f);
                                Main.gore[num69].velocity.X--;
                                Main.gore[num69].velocity.Y++;
                                vector2 = new Vector2();
                                num69 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore6 = Main.gore[num69];
                                gore6.velocity = (Vector2) (gore6.velocity * 0.4f);
                                Main.gore[num69].velocity.X++;
                                Main.gore[num69].velocity.Y--;
                                num69 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore7 = Main.gore[num69];
                                gore7.velocity = (Vector2) (gore7.velocity * 0.4f);
                                Main.gore[num69].velocity.X--;
                                Main.gore[num69].velocity.Y--;
                            }
                        }
                    }
                    else if (this.type == 5)
                    {
                        if (this.life > 0)
                        {
                            for (int num70 = 0; num70 < ((dmg / ((double) this.lifeMax)) * 50.0); num70++)
                            {
                                color2 = new Color();
                                Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                            }
                        }
                        else
                        {
                            for (int num71 = 0; num71 < 20; num71++)
                            {
                                color2 = new Color();
                                Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                            }
                            Gore.NewGore(this.position, this.velocity, 6, 1f);
                            Gore.NewGore(this.position, this.velocity, 7, 1f);
                        }
                    }
                    else if ((this.type != 0x71) && (this.type != 0x72))
                    {
                        if ((this.type == 0x73) || (this.type == 0x74))
                        {
                            if (this.life > 0)
                            {
                                for (int num81 = 0; num81 < 5; num81++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else if ((this.type == 0x73) && (Main.netMode != 1))
                            {
                                NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, 0x74, 0);
                                for (int num82 = 0; num82 < 10; num82++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num83 = 0; num83 < 20; num83++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x84, this.scale);
                                Gore.NewGore(this.position, this.velocity, 0x85, this.scale);
                            }
                        }
                        else if ((this.type >= 0x75) && (this.type <= 0x77))
                        {
                            if (this.life > 0)
                            {
                                for (int num84 = 0; num84 < 5; num84++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num85 = 0; num85 < 10; num85++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, (0x86 + this.type) - 0x75, this.scale);
                            }
                        }
                        else if ((this.type == 6) || (this.type == 0x5e))
                        {
                            if (this.life > 0)
                            {
                                for (int num86 = 0; num86 < ((dmg / ((double) this.lifeMax)) * 100.0); num86++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                int num88;
                                for (int num87 = 0; num87 < 50; num87++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                if (this.type == 0x5e)
                                {
                                    num88 = Gore.NewGore(this.position, this.velocity, 0x6c, this.scale);
                                    num88 = Gore.NewGore(this.position, this.velocity, 0x6c, this.scale);
                                    num88 = Gore.NewGore(this.position, this.velocity, 0x6d, this.scale);
                                    num88 = Gore.NewGore(this.position, this.velocity, 110, this.scale);
                                }
                                else
                                {
                                    num88 = Gore.NewGore(this.position, this.velocity, 14, this.scale);
                                    Main.gore[num88].alpha = this.alpha;
                                    num88 = Gore.NewGore(this.position, this.velocity, 15, this.scale);
                                    Main.gore[num88].alpha = this.alpha;
                                }
                            }
                        }
                        else if (this.type == 0x65)
                        {
                            if (this.life > 0)
                            {
                                for (int num89 = 0; num89 < ((dmg / ((double) this.lifeMax)) * 100.0); num89++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                for (int num90 = 0; num90 < 50; num90++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                Gore.NewGore(this.position, this.velocity, 110, this.scale);
                                Gore.NewGore(this.position, this.velocity, 0x72, this.scale);
                                Gore.NewGore(this.position, this.velocity, 0x72, this.scale);
                                Gore.NewGore(this.position, this.velocity, 0x73, this.scale);
                            }
                        }
                        else if (((this.type == 7) || (this.type == 8)) || (this.type == 9))
                        {
                            if (this.life > 0)
                            {
                                for (int num91 = 0; num91 < ((dmg / ((double) this.lifeMax)) * 100.0); num91++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                for (int num92 = 0; num92 < 50; num92++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                int num93 = Gore.NewGore(this.position, this.velocity, (this.type - 7) + 0x12, 1f);
                                Main.gore[num93].alpha = this.alpha;
                            }
                        }
                        else if (((this.type == 0x62) || (this.type == 0x63)) || (this.type == 100))
                        {
                            if (this.life > 0)
                            {
                                for (int num94 = 0; num94 < ((dmg / ((double) this.lifeMax)) * 100.0); num94++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                for (int num95 = 0; num95 < 50; num95++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                int num96 = Gore.NewGore(this.position, this.velocity, 110, 1f);
                                Main.gore[num96].alpha = this.alpha;
                            }
                        }
                        else if (((this.type == 10) || (this.type == 11)) || (this.type == 12))
                        {
                            if (this.life > 0)
                            {
                                for (int num97 = 0; num97 < ((dmg / ((double) this.lifeMax)) * 50.0); num97++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num98 = 0; num98 < 10; num98++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, (this.type - 7) + 0x12, 1f);
                            }
                        }
                        else if (((this.type == 0x5f) || (this.type == 0x60)) || (this.type == 0x61))
                        {
                            if (this.life > 0)
                            {
                                for (int num99 = 0; num99 < ((dmg / ((double) this.lifeMax)) * 50.0); num99++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num100 = 0; num100 < 10; num100++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, (this.type - 0x5f) + 0x6f, 1f);
                            }
                        }
                        else if (((this.type == 13) || (this.type == 14)) || (this.type == 15))
                        {
                            if (this.life > 0)
                            {
                                for (int num101 = 0; num101 < ((dmg / ((double) this.lifeMax)) * 100.0); num101++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                for (int num102 = 0; num102 < 50; num102++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                if (this.type == 13)
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x18, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x19, 1f);
                                }
                                else if (this.type == 14)
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x1a, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x1b, 1f);
                                }
                                else
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x1c, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x1d, 1f);
                                }
                            }
                        }
                        else if (this.type == 0x11)
                        {
                            if (this.life > 0)
                            {
                                for (int num103 = 0; num103 < ((dmg / ((double) this.lifeMax)) * 100.0); num103++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num104 = 0; num104 < 50; num104++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 30, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x1f, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x1f, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x20, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x20, 1f);
                            }
                        }
                        else if (this.type == 0x56)
                        {
                            if (this.life > 0)
                            {
                                for (int num105 = 0; num105 < ((dmg / ((double) this.lifeMax)) * 100.0); num105++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num106 = 0; num106 < 50; num106++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x65, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x66, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x67, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x67, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x68, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x68, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x69, 1f);
                            }
                        }
                        else if ((this.type >= 0x69) && (this.type <= 0x6c))
                        {
                            if (this.life > 0)
                            {
                                for (int num107 = 0; num107 < ((dmg / ((double) this.lifeMax)) * 100.0); num107++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num108 = 0; num108 < 50; num108++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                if ((this.type == 0x69) || (this.type == 0x6b))
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x7c, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x7d, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x7d, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x7e, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x7e, 1f);
                                }
                                else
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x7f, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x80, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x80, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x81, 1f);
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x81, 1f);
                                }
                            }
                        }
                        else if ((this.type == 0x7b) || (this.type == 0x7c))
                        {
                            if (this.life > 0)
                            {
                                for (int num109 = 0; num109 < ((dmg / ((double) this.lifeMax)) * 100.0); num109++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num110 = 0; num110 < 50; num110++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x97, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x98, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x98, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x99, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x99, 1f);
                            }
                        }
                        else if (this.type == 0x16)
                        {
                            if (this.life > 0)
                            {
                                for (int num111 = 0; num111 < ((dmg / ((double) this.lifeMax)) * 100.0); num111++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num112 = 0; num112 < 50; num112++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x49, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x4a, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x4a, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x4b, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x4b, 1f);
                            }
                        }
                        else if ((this.type == 0x25) || (this.type == 0x36))
                        {
                            if (this.life > 0)
                            {
                                for (int num113 = 0; num113 < ((dmg / ((double) this.lifeMax)) * 100.0); num113++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num114 = 0; num114 < 50; num114++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x3a, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x3b, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x3b, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 60, 1f);
                            }
                        }
                        else if (this.type == 0x12)
                        {
                            if (this.life > 0)
                            {
                                for (int num115 = 0; num115 < ((dmg / ((double) this.lifeMax)) * 100.0); num115++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num116 = 0; num116 < 50; num116++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x21, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x22, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x22, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x23, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x23, 1f);
                            }
                        }
                        else if (this.type == 0x13)
                        {
                            if (this.life > 0)
                            {
                                for (int num117 = 0; num117 < ((dmg / ((double) this.lifeMax)) * 100.0); num117++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num118 = 0; num118 < 50; num118++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x24, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x25, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x25, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x26, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x26, 1f);
                            }
                        }
                        else if (this.type == 0x26)
                        {
                            if (this.life > 0)
                            {
                                for (int num119 = 0; num119 < ((dmg / ((double) this.lifeMax)) * 100.0); num119++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num120 = 0; num120 < 50; num120++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x40, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x41, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x41, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x42, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x42, 1f);
                            }
                        }
                        else if (this.type == 20)
                        {
                            if (this.life > 0)
                            {
                                for (int num121 = 0; num121 < ((dmg / ((double) this.lifeMax)) * 100.0); num121++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num122 = 0; num122 < 50; num122++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x27, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 40, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x29, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x29, 1f);
                            }
                        }
                        else if ((((this.type == 0x15) || (this.type == 0x1f)) || ((this.type == 0x20) || (this.type == 0x2c))) || (((this.type == 0x2d) || (this.type == 0x4d)) || (this.type == 110)))
                        {
                            if (this.life > 0)
                            {
                                for (int num123 = 0; num123 < ((dmg / ((double) this.lifeMax)) * 50.0); num123++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num124 = 0; num124 < 20; num124++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x2a, this.scale);
                                if (this.type == 0x4d)
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x6a, this.scale);
                                }
                                if (this.type == 110)
                                {
                                    Gore.NewGore(this.position, this.velocity, 130, this.scale);
                                }
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x2b, this.scale);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x2b, this.scale);
                                if (this.type == 110)
                                {
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x83, this.scale);
                                }
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x2c, this.scale);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x2c, this.scale);
                            }
                        }
                        else if (this.type == 0x55)
                        {
                            int type = 7;
                            if (this.ai[3] == 2f)
                            {
                                type = 10;
                            }
                            if (this.ai[3] == 3f)
                            {
                                type = 0x25;
                            }
                            if (this.life > 0)
                            {
                                for (int num126 = 0; num126 < ((dmg / ((double) this.lifeMax)) * 50.0); num126++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, type, 0f, 0f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num127 = 0; num127 < 20; num127++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, type, 0f, 0f, 0, color2, 1f);
                                }
                                int num128 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float) hitDirection, 0f), 0x3d, this.scale);
                                Gore gore8 = Main.gore[num128];
                                gore8.velocity = (Vector2) (gore8.velocity * 0.3f);
                                num128 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) hitDirection, 0f), 0x3e, this.scale);
                                Gore gore9 = Main.gore[num128];
                                gore9.velocity = (Vector2) (gore9.velocity * 0.3f);
                                num128 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + this.height) - 10f), new Vector2((float) hitDirection, 0f), 0x3f, this.scale);
                                Gore gore10 = Main.gore[num128];
                                gore10.velocity = (Vector2) (gore10.velocity * 0.3f);
                            }
                        }
                        else if ((this.type >= 0x57) && (this.type <= 0x5c))
                        {
                            if (this.life > 0)
                            {
                                for (int num129 = 0; num129 < ((dmg / ((double) this.lifeMax)) * 50.0); num129++)
                                {
                                    color2 = new Color();
                                    int num130 = Dust.NewDust(this.position, this.width, this.height, 0x10, 0f, 0f, 0, color2, 1.5f);
                                    Dust dust13 = Main.dust[num130];
                                    dust13.velocity = (Vector2) (dust13.velocity * 1.5f);
                                    Main.dust[num130].noGravity = true;
                                }
                            }
                            else
                            {
                                for (int num131 = 0; num131 < 10; num131++)
                                {
                                    color2 = new Color();
                                    int num132 = Dust.NewDust(this.position, this.width, this.height, 0x10, 0f, 0f, 0, color2, 1.5f);
                                    Dust dust14 = Main.dust[num132];
                                    dust14.velocity = (Vector2) (dust14.velocity * 2f);
                                    Main.dust[num132].noGravity = true;
                                }
                                int num133 = Main.rand.Next(1, 4);
                                for (int num134 = 0; num134 < num133; num134++)
                                {
                                    int num135 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) hitDirection, 0f), Main.rand.Next(11, 14), this.scale);
                                    Gore gore11 = Main.gore[num135];
                                    gore11.velocity = (Vector2) (gore11.velocity * 0.8f);
                                }
                            }
                        }
                        else if (((this.type == 0x4e) || (this.type == 0x4f)) || (this.type == 80))
                        {
                            if (this.life > 0)
                            {
                                for (int num136 = 0; num136 < ((dmg / ((double) this.lifeMax)) * 50.0); num136++)
                                {
                                    color2 = new Color();
                                    int num137 = Dust.NewDust(this.position, this.width, this.height, 0x1f, 0f, 0f, 0, color2, 1.5f);
                                    Dust dust15 = Main.dust[num137];
                                    dust15.velocity = (Vector2) (dust15.velocity * 2f);
                                    Main.dust[num137].noGravity = true;
                                }
                            }
                            else
                            {
                                for (int num138 = 0; num138 < 20; num138++)
                                {
                                    color2 = new Color();
                                    int num139 = Dust.NewDust(this.position, this.width, this.height, 0x1f, 0f, 0f, 0, color2, 1.5f);
                                    Dust dust16 = Main.dust[num139];
                                    dust16.velocity = (Vector2) (dust16.velocity * 2f);
                                    Main.dust[num139].noGravity = true;
                                }
                                int num140 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float) hitDirection, 0f), 0x3d, this.scale);
                                Gore gore12 = Main.gore[num140];
                                gore12.velocity = (Vector2) (gore12.velocity * 0.3f);
                                num140 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 10f), new Vector2((float) hitDirection, 0f), 0x3e, this.scale);
                                Gore gore13 = Main.gore[num140];
                                gore13.velocity = (Vector2) (gore13.velocity * 0.3f);
                                num140 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + this.height) - 10f), new Vector2((float) hitDirection, 0f), 0x3f, this.scale);
                                Gore gore14 = Main.gore[num140];
                                gore14.velocity = (Vector2) (gore14.velocity * 0.3f);
                            }
                        }
                        else if (this.type == 0x52)
                        {
                            if (this.life > 0)
                            {
                                for (int num141 = 0; num141 < ((dmg / ((double) this.lifeMax)) * 50.0); num141++)
                                {
                                    color2 = new Color();
                                    int num142 = Dust.NewDust(this.position, this.width, this.height, 0x36, 0f, 0f, 50, color2, 1.5f);
                                    Dust dust17 = Main.dust[num142];
                                    dust17.velocity = (Vector2) (dust17.velocity * 2f);
                                    Main.dust[num142].noGravity = true;
                                }
                            }
                            else
                            {
                                for (int num143 = 0; num143 < 20; num143++)
                                {
                                    color2 = new Color();
                                    int num144 = Dust.NewDust(this.position, this.width, this.height, 0x36, 0f, 0f, 50, color2, 1.5f);
                                    Dust dust18 = Main.dust[num144];
                                    dust18.velocity = (Vector2) (dust18.velocity * 2f);
                                    Main.dust[num144].noGravity = true;
                                }
                                int num145 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore15 = Main.gore[num145];
                                gore15.velocity = (Vector2) (gore15.velocity * 0.3f);
                                num145 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 15f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore16 = Main.gore[num145];
                                gore16.velocity = (Vector2) (gore16.velocity * 0.3f);
                                num145 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + this.height) - 20f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore17 = Main.gore[num145];
                                gore17.velocity = (Vector2) (gore17.velocity * 0.3f);
                            }
                        }
                        else if (this.type == 140)
                        {
                            if (this.life <= 0)
                            {
                                for (int num146 = 0; num146 < 20; num146++)
                                {
                                    color2 = new Color();
                                    int num147 = Dust.NewDust(this.position, this.width, this.height, 0x36, 0f, 0f, 50, color2, 1.5f);
                                    Dust dust19 = Main.dust[num147];
                                    dust19.velocity = (Vector2) (dust19.velocity * 2f);
                                    Main.dust[num147].noGravity = true;
                                }
                                int num148 = Gore.NewGore(new Vector2(this.position.X, this.position.Y - 10f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore18 = Main.gore[num148];
                                gore18.velocity = (Vector2) (gore18.velocity * 0.3f);
                                num148 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + (this.height / 2)) - 15f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore19 = Main.gore[num148];
                                gore19.velocity = (Vector2) (gore19.velocity * 0.3f);
                                num148 = Gore.NewGore(new Vector2(this.position.X, (this.position.Y + this.height) - 20f), new Vector2((float) hitDirection, 0f), 0x63, this.scale);
                                Gore gore20 = Main.gore[num148];
                                gore20.velocity = (Vector2) (gore20.velocity * 0.3f);
                            }
                        }
                        else if (((this.type == 0x27) || (this.type == 40)) || (this.type == 0x29))
                        {
                            if (this.life > 0)
                            {
                                for (int num149 = 0; num149 < ((dmg / ((double) this.lifeMax)) * 50.0); num149++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num150 = 0; num150 < 20; num150++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, (this.type - 0x27) + 0x43, 1f);
                            }
                        }
                        else if (this.type == 0x22)
                        {
                            if (this.life > 0)
                            {
                                for (int num151 = 0; num151 < ((dmg / ((double) this.lifeMax)) * 30.0); num151++)
                                {
                                    color2 = new Color();
                                    int num152 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 1.8f);
                                    Main.dust[num152].noLight = true;
                                    Main.dust[num152].noGravity = true;
                                    Dust dust20 = Main.dust[num152];
                                    dust20.velocity = (Vector2) (dust20.velocity * 1.3f);
                                    color2 = new Color();
                                    num152 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1a, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, color2, 0.9f);
                                    Main.dust[num152].noLight = true;
                                    Dust dust21 = Main.dust[num152];
                                    dust21.velocity = (Vector2) (dust21.velocity * 1.3f);
                                }
                            }
                            else
                            {
                                for (int num153 = 0; num153 < 15; num153++)
                                {
                                    color2 = new Color();
                                    int num154 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 15, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 1.8f);
                                    Main.dust[num154].noLight = true;
                                    Main.dust[num154].noGravity = true;
                                    Dust dust22 = Main.dust[num154];
                                    dust22.velocity = (Vector2) (dust22.velocity * 1.3f);
                                    color2 = new Color();
                                    num154 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1a, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 0, color2, 0.9f);
                                    Main.dust[num154].noLight = true;
                                    Dust dust23 = Main.dust[num154];
                                    dust23.velocity = (Vector2) (dust23.velocity * 1.3f);
                                }
                            }
                        }
                        else if ((this.type == 0x23) || (this.type == 0x24))
                        {
                            if (this.life > 0)
                            {
                                for (int num155 = 0; num155 < ((dmg / ((double) this.lifeMax)) * 100.0); num155++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num156 = 0; num156 < 150; num156++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 0x1a, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                if (this.type == 0x23)
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x36, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x37, 1f);
                                }
                                else
                                {
                                    Gore.NewGore(this.position, this.velocity, 0x38, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x39, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x39, 1f);
                                    Gore.NewGore(this.position, this.velocity, 0x39, 1f);
                                }
                            }
                        }
                        else if (this.type == 0x8b)
                        {
                            if (this.life <= 0)
                            {
                                for (int num157 = 0; num157 < 10; num157++)
                                {
                                    color2 = new Color();
                                    int num158 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1f, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust24 = Main.dust[num158];
                                    dust24.velocity = (Vector2) (dust24.velocity * 1.4f);
                                }
                                for (int num159 = 0; num159 < 5; num159++)
                                {
                                    color2 = new Color();
                                    int num160 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 2.5f);
                                    Main.dust[num160].noGravity = true;
                                    Dust dust25 = Main.dust[num160];
                                    dust25.velocity = (Vector2) (dust25.velocity * 5f);
                                    color2 = new Color();
                                    num160 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust26 = Main.dust[num160];
                                    dust26.velocity = (Vector2) (dust26.velocity * 3f);
                                }
                                vector2 = new Vector2();
                                int num161 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore21 = Main.gore[num161];
                                gore21.velocity = (Vector2) (gore21.velocity * 0.4f);
                                Main.gore[num161].velocity.X++;
                                Main.gore[num161].velocity.Y++;
                                vector2 = new Vector2();
                                num161 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore22 = Main.gore[num161];
                                gore22.velocity = (Vector2) (gore22.velocity * 0.4f);
                                Main.gore[num161].velocity.X--;
                                Main.gore[num161].velocity.Y++;
                                vector2 = new Vector2();
                                num161 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore23 = Main.gore[num161];
                                gore23.velocity = (Vector2) (gore23.velocity * 0.4f);
                                Main.gore[num161].velocity.X++;
                                Main.gore[num161].velocity.Y--;
                                num161 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore24 = Main.gore[num161];
                                gore24.velocity = (Vector2) (gore24.velocity * 0.4f);
                                Main.gore[num161].velocity.X--;
                                Main.gore[num161].velocity.Y--;
                            }
                        }
                        else if ((this.type >= 0x86) && (this.type <= 0x88))
                        {
                            if ((((this.type == 0x87) && (this.life > 0)) && ((Main.netMode != 1) && (this.ai[2] == 0f))) && (Main.rand.Next(0x19) == 0))
                            {
                                this.ai[2] = 1f;
                                int number = NewNPC(((int) this.position.X) + (this.width / 2), ((int) this.position.Y) + this.height, 0x8b, 0);
                                if ((Main.netMode == 2) && (number < 200))
                                {
                                    NetMessage.SendData(0x17, -1, -1, "", number, 0f, 0f, 0f, 0);
                                }
                                this.netUpdate = true;
                            }
                            if (this.life <= 0)
                            {
                                Gore.NewGore(this.position, this.velocity, 0x9c, 1f);
                                if (Main.rand.Next(2) == 0)
                                {
                                    for (int num163 = 0; num163 < 10; num163++)
                                    {
                                        color2 = new Color();
                                        int num164 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1f, 0f, 0f, 100, color2, 1.5f);
                                        Dust dust27 = Main.dust[num164];
                                        dust27.velocity = (Vector2) (dust27.velocity * 1.4f);
                                    }
                                    for (int num165 = 0; num165 < 5; num165++)
                                    {
                                        color2 = new Color();
                                        int num166 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 2.5f);
                                        Main.dust[num166].noGravity = true;
                                        Dust dust28 = Main.dust[num166];
                                        dust28.velocity = (Vector2) (dust28.velocity * 5f);
                                        color2 = new Color();
                                        num166 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 1.5f);
                                        Dust dust29 = Main.dust[num166];
                                        dust29.velocity = (Vector2) (dust29.velocity * 3f);
                                    }
                                    vector2 = new Vector2();
                                    int num167 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                    Gore gore25 = Main.gore[num167];
                                    gore25.velocity = (Vector2) (gore25.velocity * 0.4f);
                                    Main.gore[num167].velocity.X++;
                                    Main.gore[num167].velocity.Y++;
                                    vector2 = new Vector2();
                                    num167 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                    Gore gore26 = Main.gore[num167];
                                    gore26.velocity = (Vector2) (gore26.velocity * 0.4f);
                                    Main.gore[num167].velocity.X--;
                                    Main.gore[num167].velocity.Y++;
                                    vector2 = new Vector2();
                                    num167 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                    Gore gore27 = Main.gore[num167];
                                    gore27.velocity = (Vector2) (gore27.velocity * 0.4f);
                                    Main.gore[num167].velocity.X++;
                                    Main.gore[num167].velocity.Y--;
                                    num167 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(0x3d, 0x40), 1f);
                                    Gore gore28 = Main.gore[num167];
                                    gore28.velocity = (Vector2) (gore28.velocity * 0.4f);
                                    Main.gore[num167].velocity.X--;
                                    Main.gore[num167].velocity.Y--;
                                }
                            }
                        }
                        else if (this.type == 0x7f)
                        {
                            if (this.life <= 0)
                            {
                                Gore.NewGore(this.position, this.velocity, 0x95, 1f);
                                Gore.NewGore(this.position, this.velocity, 150, 1f);
                                for (int num168 = 0; num168 < 10; num168++)
                                {
                                    color2 = new Color();
                                    int num169 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1f, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust30 = Main.dust[num169];
                                    dust30.velocity = (Vector2) (dust30.velocity * 1.4f);
                                }
                                for (int num170 = 0; num170 < 5; num170++)
                                {
                                    color2 = new Color();
                                    int num171 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 2.5f);
                                    Main.dust[num171].noGravity = true;
                                    Dust dust31 = Main.dust[num171];
                                    dust31.velocity = (Vector2) (dust31.velocity * 5f);
                                    color2 = new Color();
                                    num171 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust32 = Main.dust[num171];
                                    dust32.velocity = (Vector2) (dust32.velocity * 3f);
                                }
                                vector2 = new Vector2();
                                int num172 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore29 = Main.gore[num172];
                                gore29.velocity = (Vector2) (gore29.velocity * 0.4f);
                                Main.gore[num172].velocity.X++;
                                Main.gore[num172].velocity.Y++;
                                vector2 = new Vector2();
                                num172 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore30 = Main.gore[num172];
                                gore30.velocity = (Vector2) (gore30.velocity * 0.4f);
                                Main.gore[num172].velocity.X--;
                                Main.gore[num172].velocity.Y++;
                                vector2 = new Vector2();
                                num172 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore31 = Main.gore[num172];
                                gore31.velocity = (Vector2) (gore31.velocity * 0.4f);
                                Main.gore[num172].velocity.X++;
                                Main.gore[num172].velocity.Y--;
                                num172 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore32 = Main.gore[num172];
                                gore32.velocity = (Vector2) (gore32.velocity * 0.4f);
                                Main.gore[num172].velocity.X--;
                                Main.gore[num172].velocity.Y--;
                            }
                        }
                        else if ((this.type >= 0x80) && (this.type <= 0x83))
                        {
                            if (this.life <= 0)
                            {
                                Gore.NewGore(this.position, this.velocity, 0x93, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x94, 1f);
                                for (int num173 = 0; num173 < 10; num173++)
                                {
                                    color2 = new Color();
                                    int num174 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1f, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust33 = Main.dust[num174];
                                    dust33.velocity = (Vector2) (dust33.velocity * 1.4f);
                                }
                                for (int num175 = 0; num175 < 5; num175++)
                                {
                                    color2 = new Color();
                                    int num176 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 2.5f);
                                    Main.dust[num176].noGravity = true;
                                    Dust dust34 = Main.dust[num176];
                                    dust34.velocity = (Vector2) (dust34.velocity * 5f);
                                    color2 = new Color();
                                    num176 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, 0f, 0f, 100, color2, 1.5f);
                                    Dust dust35 = Main.dust[num176];
                                    dust35.velocity = (Vector2) (dust35.velocity * 3f);
                                }
                                vector2 = new Vector2();
                                int num177 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore33 = Main.gore[num177];
                                gore33.velocity = (Vector2) (gore33.velocity * 0.4f);
                                Main.gore[num177].velocity.X++;
                                Main.gore[num177].velocity.Y++;
                                vector2 = new Vector2();
                                num177 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore34 = Main.gore[num177];
                                gore34.velocity = (Vector2) (gore34.velocity * 0.4f);
                                Main.gore[num177].velocity.X--;
                                Main.gore[num177].velocity.Y++;
                                vector2 = new Vector2();
                                num177 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), vector2, Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore35 = Main.gore[num177];
                                gore35.velocity = (Vector2) (gore35.velocity * 0.4f);
                                Main.gore[num177].velocity.X++;
                                Main.gore[num177].velocity.Y--;
                                num177 = Gore.NewGore(new Vector2(this.position.X, this.position.Y), new Vector2(), Main.rand.Next(0x3d, 0x40), 1f);
                                Gore gore36 = Main.gore[num177];
                                gore36.velocity = (Vector2) (gore36.velocity * 0.4f);
                                Main.gore[num177].velocity.X--;
                                Main.gore[num177].velocity.Y--;
                            }
                        }
                        else if (this.type == 0x17)
                        {
                            if (this.life > 0)
                            {
                                for (int num178 = 0; num178 < ((dmg / ((double) this.lifeMax)) * 100.0); num178++)
                                {
                                    int num179 = 0x19;
                                    if (Main.rand.Next(2) == 0)
                                    {
                                        num179 = 6;
                                    }
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, num179, (float) hitDirection, -1f, 0, color2, 1f);
                                    color2 = new Color();
                                    int num180 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color2, 2f);
                                    Main.dust[num180].noGravity = true;
                                }
                            }
                            else
                            {
                                for (int num181 = 0; num181 < 50; num181++)
                                {
                                    int num182 = 0x19;
                                    if (Main.rand.Next(2) == 0)
                                    {
                                        num182 = 6;
                                    }
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, num182, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                                }
                                for (int num183 = 0; num183 < 50; num183++)
                                {
                                    color2 = new Color();
                                    int num184 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X * 0.2f, this.velocity.Y * 0.2f, 100, color2, 2.5f);
                                    Dust dust36 = Main.dust[num184];
                                    dust36.velocity = (Vector2) (dust36.velocity * 6f);
                                    Main.dust[num184].noGravity = true;
                                }
                            }
                        }
                        else if (this.type == 0x18)
                        {
                            if (this.life > 0)
                            {
                                for (int num185 = 0; num185 < ((dmg / ((double) this.lifeMax)) * 100.0); num185++)
                                {
                                    color2 = new Color();
                                    int num186 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, color2, 2.5f);
                                    Main.dust[num186].noGravity = true;
                                }
                            }
                            else
                            {
                                for (int num187 = 0; num187 < 50; num187++)
                                {
                                    color2 = new Color();
                                    int num188 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, this.velocity.X, this.velocity.Y, 100, color2, 2.5f);
                                    Main.dust[num188].noGravity = true;
                                    Dust dust37 = Main.dust[num188];
                                    dust37.velocity = (Vector2) (dust37.velocity * 2f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x2d, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x2e, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x2e, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x2f, 1f);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x2f, 1f);
                            }
                        }
                        else if (this.type == 0x19)
                        {
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 10);
                            for (int num189 = 0; num189 < 20; num189++)
                            {
                                color2 = new Color();
                                int num190 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 2f);
                                Main.dust[num190].noGravity = true;
                                Dust dust38 = Main.dust[num190];
                                dust38.velocity = (Vector2) (dust38.velocity * 2f);
                                color2 = new Color();
                                num190 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 6, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 1f);
                                Dust dust39 = Main.dust[num190];
                                dust39.velocity = (Vector2) (dust39.velocity * 2f);
                            }
                        }
                        else if (this.type == 0x21)
                        {
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 10);
                            for (int num191 = 0; num191 < 20; num191++)
                            {
                                color2 = new Color();
                                int num192 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1d, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 2f);
                                Main.dust[num192].noGravity = true;
                                Dust dust40 = Main.dust[num192];
                                dust40.velocity = (Vector2) (dust40.velocity * 2f);
                                color2 = new Color();
                                num192 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1d, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 1f);
                                Dust dust41 = Main.dust[num192];
                                dust41.velocity = (Vector2) (dust41.velocity * 2f);
                            }
                        }
                        else if ((((this.type == 0x1a) || (this.type == 0x1b)) || ((this.type == 0x1c) || (this.type == 0x1d))) || ((this.type == 0x49) || (this.type == 0x6f)))
                        {
                            if (this.life > 0)
                            {
                                for (int num193 = 0; num193 < ((dmg / ((double) this.lifeMax)) * 100.0); num193++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num194 = 0; num194 < 50; num194++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, 2.5f * hitDirection, -2.5f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x30, this.scale);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x31, this.scale);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 20f), this.velocity, 0x31, this.scale);
                                if (this.type == 0x6f)
                                {
                                    Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 0x83, this.scale);
                                }
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
                                Gore.NewGore(new Vector2(this.position.X, this.position.Y + 34f), this.velocity, 50, this.scale);
                            }
                        }
                        else if (this.type == 30)
                        {
                            Main.PlaySound(2, (int) this.position.X, (int) this.position.Y, 10);
                            for (int num195 = 0; num195 < 20; num195++)
                            {
                                color2 = new Color();
                                int num196 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1b, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 2f);
                                Main.dust[num196].noGravity = true;
                                Dust dust42 = Main.dust[num196];
                                dust42.velocity = (Vector2) (dust42.velocity * 2f);
                                color2 = new Color();
                                num196 = Dust.NewDust(new Vector2(this.position.X, this.position.Y), this.width, this.height, 0x1b, -this.velocity.X * 0.2f, -this.velocity.Y * 0.2f, 100, color2, 1f);
                                Dust dust43 = Main.dust[num196];
                                dust43.velocity = (Vector2) (dust43.velocity * 2f);
                            }
                        }
                        else if (this.type == 0x2a)
                        {
                            if (this.life > 0)
                            {
                                for (int num197 = 0; num197 < ((dmg / ((double) this.lifeMax)) * 100.0); num197++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -1f, this.alpha, this.color, this.scale);
                                }
                            }
                            else
                            {
                                for (int num198 = 0; num198 < 50; num198++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 0x12, (float) hitDirection, -2f, this.alpha, this.color, this.scale);
                                }
                                Gore.NewGore(this.position, this.velocity, 70, this.scale);
                                Gore.NewGore(this.position, this.velocity, 0x47, this.scale);
                            }
                        }
                        else if ((this.type == 0x2b) || (this.type == 0x38))
                        {
                            if (this.life > 0)
                            {
                                for (int num199 = 0; num199 < ((dmg / ((double) this.lifeMax)) * 100.0); num199++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 40, (float) hitDirection, -1f, this.alpha, this.color, 1.2f);
                                }
                            }
                            else
                            {
                                for (int num200 = 0; num200 < 50; num200++)
                                {
                                    Dust.NewDust(this.position, this.width, this.height, 40, (float) hitDirection, -2f, this.alpha, this.color, 1.2f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x48, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x48, 1f);
                            }
                        }
                        else if (this.type == 0x30)
                        {
                            if (this.life > 0)
                            {
                                for (int num201 = 0; num201 < ((dmg / ((double) this.lifeMax)) * 100.0); num201++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num202 = 0; num202 < 50; num202++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 80, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x51, 1f);
                            }
                        }
                        else if ((this.type == 0x3e) || (this.type == 0x42))
                        {
                            if (this.life > 0)
                            {
                                for (int num203 = 0; num203 < ((dmg / ((double) this.lifeMax)) * 100.0); num203++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                                }
                            }
                            else
                            {
                                for (int num204 = 0; num204 < 50; num204++)
                                {
                                    color2 = new Color();
                                    Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -2f, 0, color2, 1f);
                                }
                                Gore.NewGore(this.position, this.velocity, 0x5d, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x5e, 1f);
                                Gore.NewGore(this.position, this.velocity, 0x5e, 1f);
                            }
                        }
                    }
                    else if (this.life > 0)
                    {
                        for (int num72 = 0; num72 < 20; num72++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) hitDirection, -1f, 0, color2, 1f);
                        }
                    }
                    else
                    {
                        for (int num73 = 0; num73 < 50; num73++)
                        {
                            color2 = new Color();
                            Dust.NewDust(this.position, this.width, this.height, 5, (float) (2 * hitDirection), -1f, 0, color2, 1f);
                        }
                        if (this.type == 0x72)
                        {
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x89, this.scale);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + (this.height / 2)), this.velocity, 0x8b, this.scale);
                            Gore.NewGore(new Vector2(this.position.X + (this.width / 2), this.position.Y), this.velocity, 0x8b, this.scale);
                            Gore.NewGore(new Vector2(this.position.X + (this.width / 2), this.position.Y + (this.height / 2)), this.velocity, 0x89, this.scale);
                        }
                        else
                        {
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y), this.velocity, 0x89, this.scale);
                            Gore.NewGore(new Vector2(this.position.X, this.position.Y + (this.height / 2)), this.velocity, 0x8a, this.scale);
                            Gore.NewGore(new Vector2(this.position.X + (this.width / 2), this.position.Y), this.velocity, 0x8a, this.scale);
                            Gore.NewGore(new Vector2(this.position.X + (this.width / 2), this.position.Y + (this.height / 2)), this.velocity, 0x89, this.scale);
                            if ((Main.player[Main.myPlayer].position.Y / 16f) > (Main.maxTilesY - 250))
                            {
                                int num74 = (int) Main.screenPosition.Y;
                                int num75 = num74 + Main.screenWidth;
                                int num76 = (int) this.position.X;
                                if (this.direction > 0)
                                {
                                    num76 -= 80;
                                }
                                int num77 = num76 + 140;
                                int num78 = num76;
                                for (int num79 = num74; num79 < num75; num79 += 50)
                                {
                                    while (num78 < num77)
                                    {
                                        for (int num80 = 0; num80 < 5; num80++)
                                        {
                                            color2 = new Color();
                                            Dust.NewDust(new Vector2((float) num78, (float) num79), 0x20, 0x20, 5, Main.rand.Next(-60, 0x3d) * 0.1f, Main.rand.Next(-60, 0x3d) * 0.1f, 0, color2, 1f);
                                        }
                                        Vector2 velocity = new Vector2(Main.rand.Next(-80, 0x51) * 0.1f, Main.rand.Next(-60, 0x15) * 0.1f);
                                        Gore.NewGore(new Vector2((float) num78, (float) num79), velocity, Main.rand.Next(140, 0x8f), 1f);
                                        num78 += 0x2e;
                                    }
                                    num78 = num76;
                                }
                            }
                        }
                    }
                }
            }
        }

        public static bool MechSpawn(float x, float y, int type)
        {
            int num = 0;
            int num2 = 0;
            int num3 = 0;
            for (int i = 0; i < 200; i++)
            {
                if (Main.npc[i].active && (Main.npc[i].type == type))
                {
                    num++;
                    Vector2 vector = new Vector2(x, y);
                    float num5 = Main.npc[i].position.X - vector.X;
                    float num6 = Main.npc[i].position.Y - vector.Y;
                    float num7 = (float) Math.Sqrt((double) ((num5 * num5) + (num6 * num6)));
                    if (num7 < 200f)
                    {
                        num2++;
                    }
                    if (num7 < 600f)
                    {
                        num3++;
                    }
                }
            }
            return (((num2 < 3) && (num3 < 6)) && (num < 10));
        }

        public static bool NearSpikeBall(int x, int y)
        {
            Rectangle rectangle = new Rectangle((x * 0x10) - 300, (y * 0x10) - 300, 600, 600);
            for (int i = 0; i < 200; i++)
            {
                if (Main.npc[i].active && (Main.npc[i].aiStyle == 20))
                {
                    Rectangle rectangle2 = new Rectangle((int) Main.npc[i].ai[1], (int) Main.npc[i].ai[2], 20, 20);
                    if (rectangle.Intersects(rectangle2))
                    {
                        return true;
                    }
                }
            }
            return false;
        }

        public void netDefaults(int type)
        {
            if (type < 0)
            {
                if (type == -1)
                {
                    this.SetDefaults("Slimeling");
                }
                else if (type == -2)
                {
                    this.SetDefaults("Slimer2");
                }
                else if (type == -3)
                {
                    this.SetDefaults("Green Slime");
                }
                else if (type == -4)
                {
                    this.SetDefaults("Pinky");
                }
                else if (type == -5)
                {
                    this.SetDefaults("Baby Slime");
                }
                else if (type == -6)
                {
                    this.SetDefaults("Black Slime");
                }
                else if (type == -7)
                {
                    this.SetDefaults("Purple Slime");
                }
                else if (type == -8)
                {
                    this.SetDefaults("Red Slime");
                }
                else if (type == -9)
                {
                    this.SetDefaults("Yellow Slime");
                }
                else if (type == -10)
                {
                    this.SetDefaults("Jungle Slime");
                }
                else if (type == -11)
                {
                    this.SetDefaults("Little Eater");
                }
                else if (type == -12)
                {
                    this.SetDefaults("Big Eater");
                }
                else if (type == -13)
                {
                    this.SetDefaults("Short Bones");
                }
                else if (type == -14)
                {
                    this.SetDefaults("Big Boned");
                }
                else if (type == -15)
                {
                    this.SetDefaults("Heavy Skeleton");
                }
                else if (type == -16)
                {
                    this.SetDefaults("Little Stinger");
                }
                else if (type == -17)
                {
                    this.SetDefaults("Big Stinger");
                }
            }
            else
            {
                this.SetDefaults(type, -1f);
            }
        }

        public static int NewNPC(int X, int Y, int Type, int Start = 0)
        {
            int index = -1;
            for (int i = Start; i < 200; i++)
            {
                if (!Main.npc[i].active)
                {
                    index = i;
                    break;
                }
            }
            if (index < 0)
            {
                return 200;
            }
            Main.npc[index] = new NPC();
            Main.npc[index].SetDefaults(Type, -1f);
            Main.npc[index].position.X = X - (Main.npc[index].width / 2);
            Main.npc[index].position.Y = Y - Main.npc[index].height;
            Main.npc[index].active = true;
            Main.npc[index].timeLeft = (int) (activeTime * 1.25);
            Main.npc[index].wet = Collision.WetCollision(Main.npc[index].position, Main.npc[index].width, Main.npc[index].height);
            if (Type == 50)
            {
                if (Main.netMode == 0)
                {
                    Main.NewText(Main.npc[index].name + " has awoken!", 0xaf, 0x4b, 0xff);
                    return index;
                }
                if (Main.netMode == 2)
                {
                    NetMessage.SendData(0x19, -1, -1, Main.npc[index].name + " has awoken!", 0xff, 175f, 75f, 255f, 0);
                }
            }
            return index;
        }

        public void NPCLoot()
        {
            if (((Main.hardMode && (this.lifeMax > 1)) && ((this.damage > 0) && !this.friendly)) && (((this.position.Y > (Main.rockLayer * 16.0)) && (Main.rand.Next(7) == 0)) && ((this.type != 0x79) && (this.value > 0f))))
            {
                if (Main.player[Player.FindClosest(this.position, this.width, this.height)].zoneEvil)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x209, 1, false, 0);
                }
                if (Main.player[Player.FindClosest(this.position, this.width, this.height)].zoneHoly)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 520, 1, false, 0);
                }
            }
            if ((this.type == 0x6d) && !downedClown)
            {
                downedClown = true;
                if (Main.netMode == 2)
                {
                    NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
                }
            }
            if ((this.type == 0x55) && (this.value > 0f))
            {
                switch (Main.rand.Next(7))
                {
                    case 0:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x1b5, 1, false, -1);
                        break;

                    case 1:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x205, 1, false, -1);
                        break;

                    case 2:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x217, 1, false, -1);
                        break;

                    case 3:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x218, 1, false, -1);
                        break;

                    case 4:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x214, 1, false, -1);
                        break;

                    case 5:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x189, 1, false, -1);
                        break;

                    case 6:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x22a, 1, false, -1);
                        goto Label_0305;
                }
            }
        Label_0305:
            if (this.type == 0x57)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x23f, Main.rand.Next(5, 11), false, 0);
            }
            if (this.type == 0x4f)
            {
                if (Main.rand.Next(10) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x20f, 1, false, 0);
                }
            }
            else if ((this.type == 80) && (Main.rand.Next(10) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x210, 1, false, 0);
            }
            if ((this.type == 0x65) || (this.type == 0x62))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x20a, Main.rand.Next(2, 6), false, 0);
            }
            if (this.type == 0x56)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x20e, 1, false, 0);
            }
            if (this.type != 0x71)
            {
                goto Label_06E1;
            }
            Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x16f, 1, false, -1);
            if (Main.rand.Next(2) == 0)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, Main.rand.Next(0x1e9, 0x1ec), 1, false, -1);
            }
            else
            {
                switch (Main.rand.Next(3))
                {
                    case 0:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x202, 1, false, -1);
                        goto Label_05B3;

                    case 1:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x1aa, 1, false, -1);
                        break;

                    case 2:
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x1b2, 1, false, -1);
                        break;
                }
            }
        Label_05B3:
            if (Main.netMode != 1)
            {
                int num3 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                int num4 = (((int) this.position.Y) + (this.height / 2)) / 0x10;
                int num5 = ((this.width / 2) / 0x10) + 1;
                for (int i = num3 - num5; i <= (num3 + num5); i++)
                {
                    for (int j = num4 - num5; j <= (num4 + num5); j++)
                    {
                        if ((((i == (num3 - num5)) || (i == (num3 + num5))) || ((j == (num4 - num5)) || (j == (num4 + num5)))) && !Main.tile[i, j].active)
                        {
                            Main.tile[i, j].type = 140;
                            Main.tile[i, j].active = true;
                        }
                        Main.tile[i, j].lava = false;
                        Main.tile[i, j].liquid = 0;
                        if (Main.netMode == 2)
                        {
                            NetMessage.SendTileSquare(-1, i, j, 1);
                        }
                        else
                        {
                            WorldGen.SquareTileFrame(i, j, true);
                        }
                    }
                }
            }
        Label_06E1:
            if (((this.type == 1) || (this.type == 0x10)) || ((this.type == 0x8a) || (this.type == 0x8d)))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x17, Main.rand.Next(1, 3), false, 0);
            }
            if (this.type == 0x4b)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x1f5, Main.rand.Next(1, 4), false, 0);
            }
            if (this.type == 0x51)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x17, Main.rand.Next(2, 5), false, 0);
            }
            if (this.type == 0x7a)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x17, Main.rand.Next(5, 11), false, 0);
            }
            if (this.type == 0x47)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x147, 1, false, 0);
            }
            if (this.type == 2)
            {
                if (Main.rand.Next(3) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x26, 1, false, 0);
                }
                else if (Main.rand.Next(100) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xec, 1, false, 0);
                }
            }
            if ((this.type == 0x68) && (Main.rand.Next(60) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x1e5, 1, false, -1);
            }
            if (this.type == 0x3a)
            {
                if (Main.rand.Next(500) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x107, 1, false, 0);
                }
                else if (Main.rand.Next(40) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x76, 1, false, 0);
                }
            }
            if ((this.type == 0x66) && (Main.rand.Next(500) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x107, 1, false, 0);
            }
            if (((this.type == 3) || (this.type == 0x84)) && (Main.rand.Next(50) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xd8, 1, false, -1);
            }
            if (this.type == 0x42)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x10b, 1, false, 0);
            }
            if ((this.type == 0x3e) && (Main.rand.Next(50) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x110, 1, false, -1);
            }
            if (this.type == 0x34)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xfb, 1, false, 0);
            }
            if (this.type == 0x35)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xef, 1, false, 0);
            }
            if (this.type == 0x36)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 260, 1, false, 0);
            }
            if (this.type == 0x37)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x105, 1, false, 0);
            }
            if ((this.type == 0x45) && (Main.rand.Next(7) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x143, 1, false, 0);
            }
            if (this.type == 0x49)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x16a, Main.rand.Next(1, 3), false, 0);
            }
            if (this.type == 4)
            {
                int stack = Main.rand.Next(30) + 20;
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x2f, stack, false, 0);
                stack = Main.rand.Next(20) + 10;
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, stack, false, 0);
                stack = Main.rand.Next(20) + 10;
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, stack, false, 0);
                stack = Main.rand.Next(20) + 10;
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, stack, false, 0);
                stack = Main.rand.Next(3) + 1;
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x3b, stack, false, 0);
            }
            if (((this.type == 6) || (this.type == 0x5e)) && (Main.rand.Next(3) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x44, 1, false, 0);
            }
            if (((this.type == 7) || (this.type == 8)) || (this.type == 9))
            {
                if (Main.rand.Next(3) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x44, Main.rand.Next(1, 3), false, 0);
                }
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x45, Main.rand.Next(3, 9), false, 0);
            }
            if (((((this.type == 10) || (this.type == 11)) || ((this.type == 12) || (this.type == 0x5f))) || ((this.type == 0x60) || (this.type == 0x61))) && (Main.rand.Next(500) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xd7, 1, false, 0);
            }
            if ((this.type == 0x2f) && (Main.rand.Next(0x4b) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xf3, 1, false, 0);
            }
            if (((this.type == 13) || (this.type == 14)) || (this.type == 15))
            {
                int num9 = Main.rand.Next(1, 3);
                if (Main.rand.Next(2) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x56, num9, false, 0);
                }
                if (Main.rand.Next(2) == 0)
                {
                    num9 = Main.rand.Next(2, 6);
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, num9, false, 0);
                }
                if (this.boss)
                {
                    num9 = Main.rand.Next(10, 30);
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, num9, false, 0);
                    num9 = Main.rand.Next(10, 0x1f);
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x38, num9, false, 0);
                }
                if ((Main.rand.Next(3) == 0) && (Main.player[Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[Player.FindClosest(this.position, this.width, this.height)].statLifeMax))
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x3a, 1, false, 0);
                }
            }
            if (((this.type == 0x74) || (this.type == 0x75)) || (((this.type == 0x76) || (this.type == 0x77)) || (this.type == 0x8b)))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x3a, 1, false, 0);
            }
            if (((this.type == 0x3f) || (this.type == 0x40)) || (this.type == 0x67))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x11a, Main.rand.Next(1, 5), false, 0);
            }
            if ((this.type == 0x15) || (this.type == 0x2c))
            {
                if (Main.rand.Next(0x19) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x76, 1, false, 0);
                }
                else if (this.type == 0x2c)
                {
                    if (Main.rand.Next(20) == 0)
                    {
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, Main.rand.Next(410, 0x19c), 1, false, 0);
                    }
                    else
                    {
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xa6, Main.rand.Next(1, 4), false, 0);
                    }
                }
            }
            if (this.type == 0x2d)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xee, 1, false, 0);
            }
            if (this.type == 50)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, Main.rand.Next(0x100, 0x103), 1, false, 0);
            }
            if ((this.type == 0x17) && (Main.rand.Next(50) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x74, 1, false, 0);
            }
            if ((this.type == 0x18) && (Main.rand.Next(300) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xf4, 1, false, 0);
            }
            if (((this.type == 0x1f) || (this.type == 0x20)) || (this.type == 0x22))
            {
                if (Main.rand.Next(0x41) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x147, 1, false, 0);
                }
                else
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x9a, Main.rand.Next(1, 4), false, 0);
                }
            }
            if (((this.type == 0x1a) || (this.type == 0x1b)) || (((this.type == 0x1c) || (this.type == 0x1d)) || (this.type == 0x6f)))
            {
                if (Main.rand.Next(200) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 160, 1, false, 0);
                }
                else if (Main.rand.Next(2) == 0)
                {
                    int num10 = Main.rand.Next(1, 6);
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xa1, num10, false, 0);
                }
            }
            if ((this.type == 0x2a) && (Main.rand.Next(2) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xd1, 1, false, 0);
            }
            if ((this.type == 0x2b) && (Main.rand.Next(4) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 210, 1, false, 0);
            }
            if (this.type == 0x41)
            {
                if (Main.rand.Next(50) == 0)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x10c, 1, false, 0);
                }
                else
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x13f, 1, false, 0);
                }
            }
            if ((this.type == 0x30) && (Main.rand.Next(2) == 0))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 320, 1, false, 0);
            }
            if ((this.type == 0x7d) || (this.type == 0x7e))
            {
                int type = 0x7d;
                if (this.type == 0x7d)
                {
                    type = 0x7e;
                }
                if (!AnyNPCs(type))
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x225, Main.rand.Next(20, 0x1f), false, 0);
                }
                else
                {
                    this.value = 0f;
                    this.boss = false;
                }
            }
            else if (this.type == 0x7f)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x223, Main.rand.Next(20, 0x1f), false, 0);
            }
            else if (this.type == 0x86)
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x224, Main.rand.Next(20, 0x1f), false, 0);
            }
            if (this.boss)
            {
                if (this.type == 4)
                {
                    downedBoss1 = true;
                }
                else if (((this.type == 13) || (this.type == 14)) || (this.type == 15))
                {
                    downedBoss2 = true;
                    this.name = "Eater of Worlds";
                }
                else if (this.type == 0x23)
                {
                    downedBoss3 = true;
                    this.name = "Skeletron";
                }
                else
                {
                    this.name = this.displayName;
                }
                int num12 = Main.rand.Next(5, 0x10);
                int num13 = 0x1c;
                if (this.type == 0x71)
                {
                    num13 = 0xbc;
                }
                if (this.type > 0x71)
                {
                    num13 = 0x1f3;
                }
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, num13, num12, false, 0);
                int num14 = Main.rand.Next(5) + 5;
                for (int k = 0; k < num14; k++)
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x3a, 1, false, 0);
                }
                if ((this.type == 0x7d) || (this.type == 0x7e))
                {
                    if (Main.netMode == 0)
                    {
                        Main.NewText("The Twins have been defeated!", 0xaf, 0x4b, 0xff);
                    }
                    else if (Main.netMode == 2)
                    {
                        NetMessage.SendData(0x19, -1, -1, "The Twins have been defeated!", 0xff, 175f, 75f, 255f, 0);
                    }
                }
                else if (Main.netMode == 0)
                {
                    Main.NewText(this.name + " has been defeated!", 0xaf, 0x4b, 0xff);
                }
                else if (Main.netMode == 2)
                {
                    NetMessage.SendData(0x19, -1, -1, this.name + " has been defeated!", 0xff, 175f, 75f, 255f, 0);
                }
                if ((this.type == 0x71) && (Main.netMode != 1))
                {
                    WorldGen.StartHardmode();
                }
                if (Main.netMode == 2)
                {
                    NetMessage.SendData(7, -1, -1, "", 0, 0f, 0f, 0f, 0);
                }
            }
            if (((Main.rand.Next(6) == 0) && (this.lifeMax > 1)) && (this.damage > 0))
            {
                if ((Main.rand.Next(2) == 0) && (Main.player[Player.FindClosest(this.position, this.width, this.height)].statMana < Main.player[Player.FindClosest(this.position, this.width, this.height)].statManaMax))
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xb8, 1, false, 0);
                }
                else if ((Main.rand.Next(2) == 0) && (Main.player[Player.FindClosest(this.position, this.width, this.height)].statLife < Main.player[Player.FindClosest(this.position, this.width, this.height)].statLifeMax))
                {
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x3a, 1, false, 0);
                }
            }
            if (((Main.rand.Next(2) == 0) && (this.lifeMax > 1)) && ((this.damage > 0) && (Main.player[Player.FindClosest(this.position, this.width, this.height)].statMana < Main.player[Player.FindClosest(this.position, this.width, this.height)].statManaMax)))
            {
                Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0xb8, 1, false, 0);
            }
            float num16 = this.value * (1f + (Main.rand.Next(-20, 0x15) * 0.01f));
            if (Main.rand.Next(5) == 0)
            {
                num16 *= 1f + (Main.rand.Next(5, 11) * 0.01f);
            }
            if (Main.rand.Next(10) == 0)
            {
                num16 *= 1f + (Main.rand.Next(10, 0x15) * 0.01f);
            }
            if (Main.rand.Next(15) == 0)
            {
                num16 *= 1f + (Main.rand.Next(15, 0x1f) * 0.01f);
            }
            if (Main.rand.Next(20) == 0)
            {
                num16 *= 1f + (Main.rand.Next(20, 0x29) * 0.01f);
            }
            while (((int) num16) > 0)
            {
                if (num16 > 1000000f)
                {
                    int num17 = (int) (num16 / 1000000f);
                    if ((num17 > 50) && (Main.rand.Next(5) == 0))
                    {
                        num17 /= Main.rand.Next(3) + 1;
                    }
                    if (Main.rand.Next(5) == 0)
                    {
                        num17 /= Main.rand.Next(3) + 1;
                    }
                    num16 -= 0xf4240 * num17;
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x4a, num17, false, 0);
                }
                else
                {
                    if (num16 > 10000f)
                    {
                        int num18 = (int) (num16 / 10000f);
                        if ((num18 > 50) && (Main.rand.Next(5) == 0))
                        {
                            num18 /= Main.rand.Next(3) + 1;
                        }
                        if (Main.rand.Next(5) == 0)
                        {
                            num18 /= Main.rand.Next(3) + 1;
                        }
                        num16 -= 0x2710 * num18;
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x49, num18, false, 0);
                        continue;
                    }
                    if (num16 > 100f)
                    {
                        int num19 = (int) (num16 / 100f);
                        if ((num19 > 50) && (Main.rand.Next(5) == 0))
                        {
                            num19 /= Main.rand.Next(3) + 1;
                        }
                        if (Main.rand.Next(5) == 0)
                        {
                            num19 /= Main.rand.Next(3) + 1;
                        }
                        num16 -= 100 * num19;
                        Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x48, num19, false, 0);
                        continue;
                    }
                    int num20 = (int) num16;
                    if ((num20 > 50) && (Main.rand.Next(5) == 0))
                    {
                        num20 /= Main.rand.Next(3) + 1;
                    }
                    if (Main.rand.Next(5) == 0)
                    {
                        num20 /= Main.rand.Next(4) + 1;
                    }
                    if (num20 < 1)
                    {
                        num20 = 1;
                    }
                    num16 -= num20;
                    Item.NewItem((int) this.position.X, (int) this.position.Y, this.width, this.height, 0x47, num20, false, 0);
                }
            }
        }

        public static int NumToType(int type)
        {
            if (type == 2)
            {
                return 0x11;
            }
            if (type == 3)
            {
                return 0x12;
            }
            if (type == 6)
            {
                return 0x13;
            }
            if (type == 5)
            {
                return 20;
            }
            if (type == 1)
            {
                return 0x16;
            }
            if (type == 4)
            {
                return 0x26;
            }
            if (type == 7)
            {
                return 0x36;
            }
            if (type == 9)
            {
                return 0x6b;
            }
            if (type == 10)
            {
                return 0x6c;
            }
            if (type == 8)
            {
                return 0x7c;
            }
            return -1;
        }

        public void SetDefaults(string Name)
        {
            this.SetDefaults(0, -1f);
            if (Name == "Slimeling")
            {
                this.SetDefaults(0x51, 0.6f);
                this.name = Name;
                this.damage = 0x2d;
                this.defense = 10;
                this.life = 90;
                this.knockBackResist = 1.2f;
                this.value = 100f;
                this.netID = -1;
            }
            else if (Name == "Slimer2")
            {
                this.SetDefaults(0x51, 0.9f);
                this.displayName = "Slimer";
                this.name = Name;
                this.damage = 0x2d;
                this.defense = 20;
                this.life = 90;
                this.knockBackResist = 1.2f;
                this.value = 100f;
                this.netID = -2;
            }
            else if (Name == "Green Slime")
            {
                this.SetDefaults(1, 0.9f);
                this.name = Name;
                this.damage = 6;
                this.defense = 0;
                this.life = 14;
                this.knockBackResist = 1.2f;
                this.color = new Color(0, 220, 40, 100);
                this.value = 3f;
                this.netID = -3;
            }
            else if (Name == "Pinky")
            {
                this.SetDefaults(1, 0.6f);
                this.name = Name;
                this.damage = 5;
                this.defense = 5;
                this.life = 150;
                this.knockBackResist = 1.4f;
                this.color = new Color(250, 30, 90, 90);
                this.value = 10000f;
                this.netID = -4;
            }
            else if (Name == "Baby Slime")
            {
                this.SetDefaults(1, 0.9f);
                this.name = Name;
                this.damage = 13;
                this.defense = 4;
                this.life = 30;
                this.knockBackResist = 0.95f;
                this.alpha = 120;
                this.color = new Color(0, 0, 0, 50);
                this.value = 10f;
                this.netID = -5;
            }
            else if (Name == "Black Slime")
            {
                this.SetDefaults(1, -1f);
                this.name = Name;
                this.damage = 15;
                this.defense = 4;
                this.life = 0x2d;
                this.color = new Color(0, 0, 0, 50);
                this.value = 20f;
                this.netID = -6;
            }
            else if (Name == "Purple Slime")
            {
                this.SetDefaults(1, 1.2f);
                this.name = Name;
                this.damage = 12;
                this.defense = 6;
                this.life = 40;
                this.knockBackResist = 0.9f;
                this.color = new Color(200, 0, 0xff, 150);
                this.value = 10f;
                this.netID = -7;
            }
            else if (Name == "Red Slime")
            {
                this.SetDefaults(1, -1f);
                this.name = Name;
                this.damage = 12;
                this.defense = 4;
                this.life = 0x23;
                this.color = new Color(0xff, 30, 0, 100);
                this.value = 8f;
                this.netID = -8;
            }
            else if (Name == "Yellow Slime")
            {
                this.SetDefaults(1, 1.2f);
                this.name = Name;
                this.damage = 15;
                this.defense = 7;
                this.life = 0x2d;
                this.color = new Color(0xff, 0xff, 0, 100);
                this.value = 10f;
                this.netID = -9;
            }
            else if (Name == "Jungle Slime")
            {
                this.SetDefaults(1, 1.1f);
                this.name = Name;
                this.damage = 0x12;
                this.defense = 6;
                this.life = 60;
                this.color = new Color(0x8f, 0xd7, 0x5d, 100);
                this.value = 500f;
                this.netID = -10;
            }
            else if (Name == "Little Eater")
            {
                this.SetDefaults(6, 0.85f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) (this.damage * this.scale);
                this.life = (int) (this.life * this.scale);
                this.value = (int) (this.value * this.scale);
                this.npcSlots *= this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -11;
            }
            else if (Name == "Big Eater")
            {
                this.SetDefaults(6, 1.15f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) (this.damage * this.scale);
                this.life = (int) (this.life * this.scale);
                this.value = (int) (this.value * this.scale);
                this.npcSlots *= this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -12;
            }
            else if (Name == "Short Bones")
            {
                this.SetDefaults(0x1f, 0.9f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) (this.damage * this.scale);
                this.life = (int) (this.life * this.scale);
                this.value = (int) (this.value * this.scale);
                this.netID = -13;
            }
            else if (Name == "Big Boned")
            {
                this.SetDefaults(0x1f, 1.15f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) ((this.damage * this.scale) * 1.1);
                this.life = (int) ((this.life * this.scale) * 1.1);
                this.value = (int) (this.value * this.scale);
                this.npcSlots = 2f;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -14;
            }
            else if (Name == "Heavy Skeleton")
            {
                this.SetDefaults(0x4d, 1.15f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) ((this.damage * this.scale) * 1.1);
                this.life = 400;
                this.value = (int) (this.value * this.scale);
                this.npcSlots = 2f;
                this.knockBackResist *= 2f - this.scale;
                this.height = 0x2c;
                this.netID = -15;
            }
            else if (Name == "Little Stinger")
            {
                this.SetDefaults(0x2a, 0.85f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) (this.damage * this.scale);
                this.life = (int) (this.life * this.scale);
                this.value = (int) (this.value * this.scale);
                this.npcSlots *= this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -16;
            }
            else if (Name == "Big Stinger")
            {
                this.SetDefaults(0x2a, 1.2f);
                this.name = Name;
                this.defense = (int) (this.defense * this.scale);
                this.damage = (int) (this.damage * this.scale);
                this.life = (int) (this.life * this.scale);
                this.value = (int) (this.value * this.scale);
                this.npcSlots *= this.scale;
                this.knockBackResist *= 2f - this.scale;
                this.netID = -17;
            }
            else if (Name != "")
            {
                for (int i = 1; i < 0x8e; i++)
                {
                    if (Main.npcName[i] == Name)
                    {
                        this.SetDefaults(i, -1f);
                        return;
                    }
                }
                this.SetDefaults(0, -1f);
                this.active = false;
            }
            else
            {
                this.active = false;
            }
            if ((this.displayName == null) || (this.displayName == ""))
            {
                this.displayName = Name;
            }
            this.lifeMax = this.life;
            this.defDamage = this.damage;
            this.defDefense = this.defense;
        }

        public void SetDefaults(int Type, float scaleOverride = -1f)
        {
            this.netID = 0;
            this.netAlways = false;
            this.netSpam = 0;
            for (int i = 0; i < this.oldPos.Length; i++)
            {
                this.oldPos[i].X = 0f;
                this.oldPos[i].Y = 0f;
            }
            for (int j = 0; j < 5; j++)
            {
                this.buffTime[j] = 0;
                this.buffType[j] = 0;
            }
            for (int k = 0; k < 40; k++)
            {
                this.buffImmune[k] = false;
            }
            this.buffImmune[0x1f] = true;
            this.netSkip = -2;
            this.realLife = -1;
            this.lifeRegen = 0;
            this.lifeRegenCount = 0;
            this.poisoned = false;
            this.onFire = false;
            this.confused = false;
            this.onFire2 = false;
            this.justHit = false;
            this.dontTakeDamage = false;
            this.npcSlots = 1f;
            this.lavaImmune = false;
            this.lavaWet = false;
            this.wetCount = 0;
            this.wet = false;
            this.townNPC = false;
            this.homeless = false;
            this.homeTileX = -1;
            this.homeTileY = -1;
            this.friendly = false;
            this.behindTiles = false;
            this.boss = false;
            this.noTileCollide = false;
            this.rotation = 0f;
            this.active = true;
            this.alpha = 0;
            this.color = new Color();
            this.collideX = false;
            this.collideY = false;
            this.direction = 0;
            this.oldDirection = this.direction;
            this.frameCounter = 0.0;
            this.netUpdate = true;
            this.netUpdate2 = false;
            this.knockBackResist = 1f;
            this.name = "";
            this.displayName = "";
            this.noGravity = false;
            this.scale = 1f;
            this.soundHit = 0;
            this.soundKilled = 0;
            this.spriteDirection = -1;
            this.target = 0xff;
            this.oldTarget = this.target;
            this.targetRect = new Rectangle();
            this.timeLeft = activeTime;
            this.type = Type;
            this.value = 0f;
            for (int m = 0; m < maxAI; m++)
            {
                this.ai[m] = 0f;
            }
            for (int n = 0; n < maxAI; n++)
            {
                this.localAI[n] = 0f;
            }
            if (this.type == 1)
            {
                this.name = "Blue Slime";
                this.width = 0x18;
                this.height = 0x12;
                this.aiStyle = 1;
                this.damage = 7;
                this.defense = 2;
                this.lifeMax = 0x19;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 0xaf;
                this.color = new Color(0, 80, 0xff, 100);
                this.value = 25f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 2)
            {
                this.name = "Demon Eye";
                this.width = 30;
                this.height = 0x20;
                this.aiStyle = 2;
                this.damage = 0x12;
                this.defense = 2;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 75f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 3)
            {
                this.name = "Zombie";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 0x2d;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 4)
            {
                this.name = "Eye of Cthulhu";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 4;
                this.damage = 15;
                this.defense = 12;
                this.lifeMax = 0xaf0;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = activeTime * 30;
                this.boss = true;
                this.value = 30000f;
                this.npcSlots = 5f;
            }
            else if (this.type == 5)
            {
                this.name = "Servant of Cthulhu";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 5;
                this.damage = 12;
                this.defense = 0;
                this.lifeMax = 8;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
            }
            else if (this.type == 6)
            {
                this.npcSlots = 1f;
                this.name = "Eater of Souls";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 5;
                this.damage = 0x16;
                this.defense = 8;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.5f;
                this.value = 90f;
            }
            else if (this.type == 7)
            {
                this.displayName = "Devourer";
                this.npcSlots = 3.5f;
                this.name = "Devourer Head";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.damage = 0x1f;
                this.defense = 2;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 140f;
                this.netAlways = true;
            }
            else if (this.type == 8)
            {
                this.displayName = "Devourer";
                this.name = "Devourer Body";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x10;
                this.defense = 6;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 140f;
            }
            else if (this.type == 9)
            {
                this.displayName = "Devourer";
                this.name = "Devourer Tail";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 13;
                this.defense = 10;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 140f;
            }
            else if (this.type == 10)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Head";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 8;
                this.defense = 0;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 40f;
            }
            else if (this.type == 11)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Body";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 4;
                this.defense = 4;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 40f;
            }
            else if (this.type == 12)
            {
                this.displayName = "Giant Worm";
                this.name = "Giant Worm Tail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 4;
                this.defense = 6;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 40f;
            }
            else if (this.type == 13)
            {
                this.displayName = "Eater of Worlds";
                this.npcSlots = 5f;
                this.name = "Eater of Worlds Head";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x16;
                this.defense = 2;
                this.lifeMax = 0x41;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 14)
            {
                this.displayName = "Eater of Worlds";
                this.name = "Eater of Worlds Body";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 13;
                this.defense = 4;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 15)
            {
                this.displayName = "Eater of Worlds";
                this.name = "Eater of Worlds Tail";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 11;
                this.defense = 8;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 300f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x10)
            {
                this.npcSlots = 2f;
                this.name = "Mother Slime";
                this.width = 0x24;
                this.height = 0x18;
                this.aiStyle = 1;
                this.damage = 20;
                this.defense = 7;
                this.lifeMax = 90;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 120;
                this.color = new Color(0, 0, 0, 50);
                this.value = 75f;
                this.scale = 1.25f;
                this.knockBackResist = 0.6f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x11)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Merchant";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x12)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Nurse";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x13)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Arms Dealer";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 20)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Dryad";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x15)
            {
                this.name = "Skeleton";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 8;
                this.lifeMax = 60;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 100f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x16)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Guide";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x17)
            {
                this.name = "Meteor Head";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 5;
                this.damage = 40;
                this.defense = 6;
                this.lifeMax = 0x1a;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 80f;
                this.knockBackResist = 0.4f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x18)
            {
                this.npcSlots = 3f;
                this.name = "Fire Imp";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 30;
                this.defense = 0x10;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.lavaImmune = true;
                this.value = 350f;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x19)
            {
                this.name = "Burning Sphere";
                this.width = 0x10;
                this.height = 0x10;
                this.aiStyle = 9;
                this.damage = 30;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.alpha = 100;
            }
            else if (this.type == 0x1a)
            {
                this.name = "Goblin Peon";
                this.scale = 0.9f;
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 12;
                this.defense = 4;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.8f;
                this.value = 100f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x1b)
            {
                this.name = "Goblin Thief";
                this.scale = 0.95f;
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x1c)
            {
                this.name = "Goblin Warrior";
                this.scale = 1.1f;
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x19;
                this.defense = 8;
                this.lifeMax = 110;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.value = 150f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x1d)
            {
                this.name = "Goblin Sorcerer";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.6f;
                this.value = 200f;
            }
            else if (this.type == 30)
            {
                this.name = "Chaos Ball";
                this.width = 0x10;
                this.height = 0x10;
                this.aiStyle = 9;
                this.damage = 20;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = 100;
                this.knockBackResist = 0f;
            }
            else if (this.type == 0x1f)
            {
                this.name = "Angry Bones";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x1a;
                this.defense = 8;
                this.lifeMax = 80;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.8f;
                this.value = 130f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x20)
            {
                this.name = "Dark Caster";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 50;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 140f;
                this.npcSlots = 2f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x21)
            {
                this.name = "Water Sphere";
                this.width = 0x10;
                this.height = 0x10;
                this.aiStyle = 9;
                this.damage = 20;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 3;
                this.soundKilled = 3;
                this.noGravity = true;
                this.noTileCollide = true;
                this.alpha = 100;
                this.knockBackResist = 0f;
            }
            else if (this.type == 0x22)
            {
                this.name = "Cursed Skull";
                this.width = 0x1a;
                this.height = 0x1c;
                this.aiStyle = 10;
                this.damage = 0x23;
                this.defense = 6;
                this.lifeMax = 40;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 150f;
                this.knockBackResist = 0.2f;
                this.npcSlots = 0.75f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x23)
            {
                this.displayName = "Skeletron";
                this.name = "Skeletron Head";
                this.width = 80;
                this.height = 0x66;
                this.aiStyle = 11;
                this.damage = 0x20;
                this.defense = 10;
                this.lifeMax = 0x1130;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 50000f;
                this.knockBackResist = 0f;
                this.boss = true;
                this.npcSlots = 6f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x24)
            {
                this.displayName = "Skeletron";
                this.name = "Skeletron Hand";
                this.width = 0x34;
                this.height = 0x34;
                this.aiStyle = 12;
                this.damage = 20;
                this.defense = 14;
                this.lifeMax = 600;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x25)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Old Man";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x26)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Demolitionist";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x27)
            {
                this.npcSlots = 6f;
                this.name = "Bone Serpent Head";
                this.displayName = "Bone Serpent";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 40)
            {
                this.name = "Bone Serpent Body";
                this.displayName = "Bone Serpent";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 15;
                this.defense = 12;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x29)
            {
                this.name = "Bone Serpent Tail";
                this.displayName = "Bone Serpent";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 10;
                this.defense = 0x12;
                this.lifeMax = 250;
                this.soundHit = 2;
                this.soundKilled = 5;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 1200f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x2a)
            {
                this.name = "Hornet";
                this.width = 0x22;
                this.height = 0x20;
                this.aiStyle = 5;
                this.damage = 0x22;
                this.defense = 12;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.knockBackResist = 0.5f;
                this.soundKilled = 1;
                this.value = 200f;
                this.noGravity = true;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x2b)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Man Eater";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 0x2a;
                this.defense = 14;
                this.lifeMax = 130;
                this.soundHit = 1;
                this.knockBackResist = 0f;
                this.soundKilled = 1;
                this.value = 350f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x2c)
            {
                this.name = "Undead Miner";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x16;
                this.defense = 9;
                this.lifeMax = 70;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 250f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x2d)
            {
                this.name = "Tim";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 8;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 200;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.6f;
                this.value = 5000f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x2e)
            {
                this.name = "Bunny";
                this.width = 0x12;
                this.height = 20;
                this.aiStyle = 7;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
            }
            else if (this.type == 0x2f)
            {
                this.name = "Corrupt Bunny";
                this.width = 0x12;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x30)
            {
                this.name = "Harpy";
                this.width = 0x18;
                this.height = 0x22;
                this.aiStyle = 14;
                this.damage = 0x19;
                this.defense = 8;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.knockBackResist = 0.6f;
                this.soundKilled = 1;
                this.value = 300f;
            }
            else if (this.type == 0x31)
            {
                this.npcSlots = 0.5f;
                this.name = "Cave Bat";
                this.width = 0x16;
                this.height = 0x12;
                this.aiStyle = 14;
                this.damage = 13;
                this.defense = 2;
                this.lifeMax = 0x10;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 90f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 50)
            {
                this.boss = true;
                this.name = "King Slime";
                this.width = 0x62;
                this.height = 0x5c;
                this.aiStyle = 15;
                this.damage = 40;
                this.defense = 10;
                this.lifeMax = 0x7d0;
                this.knockBackResist = 0f;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 30;
                this.value = 10000f;
                this.scale = 1.25f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x33)
            {
                this.npcSlots = 0.5f;
                this.name = "Jungle Bat";
                this.width = 0x16;
                this.height = 0x12;
                this.aiStyle = 14;
                this.damage = 20;
                this.defense = 4;
                this.lifeMax = 0x22;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 80f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x34)
            {
                this.name = "Doctor Bones";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1000f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x35)
            {
                this.name = "The Groom";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 8;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 1000f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x36)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Clothier";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x37)
            {
                this.noGravity = true;
                this.name = "Goldfish";
                this.width = 20;
                this.height = 0x12;
                this.aiStyle = 0x10;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x38)
            {
                this.noTileCollide = true;
                this.noGravity = true;
                this.name = "Snatcher";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 0x19;
                this.defense = 10;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.knockBackResist = 0f;
                this.soundKilled = 1;
                this.value = 90f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x39)
            {
                this.noGravity = true;
                this.name = "Corrupt Goldfish";
                this.width = 0x12;
                this.height = 20;
                this.aiStyle = 0x10;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 0x3a)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Piranha";
                this.width = 0x12;
                this.height = 20;
                this.aiStyle = 0x10;
                this.damage = 0x19;
                this.defense = 2;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 50f;
            }
            else if (this.type == 0x3b)
            {
                this.name = "Lava Slime";
                this.width = 0x18;
                this.height = 0x12;
                this.aiStyle = 1;
                this.damage = 15;
                this.defense = 10;
                this.lifeMax = 50;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.scale = 1.1f;
                this.alpha = 50;
                this.lavaImmune = true;
                this.value = 120f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 60)
            {
                this.npcSlots = 0.5f;
                this.name = "Hellbat";
                this.width = 0x16;
                this.height = 0x12;
                this.aiStyle = 14;
                this.damage = 0x23;
                this.defense = 8;
                this.lifeMax = 0x2e;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 4;
                this.value = 120f;
                this.scale = 1.1f;
                this.lavaImmune = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x3d)
            {
                this.name = "Vulture";
                this.width = 0x24;
                this.height = 0x24;
                this.aiStyle = 0x11;
                this.damage = 15;
                this.defense = 4;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 60f;
            }
            else if (this.type == 0x3e)
            {
                this.npcSlots = 2f;
                this.name = "Demon";
                this.width = 0x1c;
                this.height = 0x30;
                this.aiStyle = 14;
                this.damage = 0x20;
                this.defense = 8;
                this.lifeMax = 120;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 300f;
                this.lavaImmune = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x3f)
            {
                this.noGravity = true;
                this.name = "Blue Jellyfish";
                this.width = 0x1a;
                this.height = 0x1a;
                this.aiStyle = 0x12;
                this.damage = 20;
                this.defense = 2;
                this.lifeMax = 30;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 100f;
                this.alpha = 20;
            }
            else if (this.type == 0x40)
            {
                this.noGravity = true;
                this.name = "Pink Jellyfish";
                this.width = 0x1a;
                this.height = 0x1a;
                this.aiStyle = 0x12;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 70;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 100f;
                this.alpha = 20;
            }
            else if (this.type == 0x41)
            {
                this.noGravity = true;
                this.name = "Shark";
                this.width = 100;
                this.height = 0x18;
                this.aiStyle = 0x10;
                this.damage = 40;
                this.defense = 2;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 400f;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 0x42)
            {
                this.npcSlots = 2f;
                this.name = "Voodoo Demon";
                this.width = 0x1c;
                this.height = 0x30;
                this.aiStyle = 14;
                this.damage = 0x20;
                this.defense = 8;
                this.lifeMax = 140;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 1000f;
                this.lavaImmune = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x43)
            {
                this.name = "Crab";
                this.width = 0x1c;
                this.height = 20;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 10;
                this.lifeMax = 40;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 60f;
            }
            else if (this.type == 0x44)
            {
                this.name = "Dungeon Guardian";
                this.width = 80;
                this.height = 0x66;
                this.aiStyle = 11;
                this.damage = 0x2328;
                this.defense = 0x2328;
                this.lifeMax = 0x270f;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x45)
            {
                this.name = "Antlion";
                this.width = 0x18;
                this.height = 0x18;
                this.aiStyle = 0x13;
                this.damage = 10;
                this.defense = 6;
                this.lifeMax = 0x2d;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0f;
                this.value = 60f;
                this.behindTiles = true;
            }
            else if (this.type == 70)
            {
                this.npcSlots = 0.3f;
                this.name = "Spike Ball";
                this.width = 0x22;
                this.height = 0x22;
                this.aiStyle = 20;
                this.damage = 0x20;
                this.defense = 100;
                this.lifeMax = 100;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.dontTakeDamage = true;
                this.scale = 1.5f;
            }
            else if (this.type == 0x47)
            {
                this.npcSlots = 2f;
                this.name = "Dungeon Slime";
                this.width = 0x24;
                this.height = 0x18;
                this.aiStyle = 1;
                this.damage = 30;
                this.defense = 7;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 60;
                this.value = 150f;
                this.scale = 1.25f;
                this.knockBackResist = 0.6f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x48)
            {
                this.npcSlots = 0.3f;
                this.name = "Blazing Wheel";
                this.width = 0x22;
                this.height = 0x22;
                this.aiStyle = 0x15;
                this.damage = 0x18;
                this.defense = 100;
                this.lifeMax = 100;
                this.alpha = 100;
                this.behindTiles = true;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0f;
                this.noGravity = true;
                this.dontTakeDamage = true;
                this.scale = 1.2f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x49)
            {
                this.name = "Goblin Scout";
                this.scale = 0.95f;
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x4a)
            {
                this.name = "Bird";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 0x18;
                this.damage = 0;
                this.defense = 0;
                this.lifeMax = 5;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
            }
            else if (this.type == 0x4b)
            {
                this.noGravity = true;
                this.name = "Pixie";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 0x16;
                this.damage = 0x37;
                this.defense = 20;
                this.lifeMax = 150;
                this.soundHit = 5;
                this.knockBackResist = 0.6f;
                this.soundKilled = 7;
                this.value = 350f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x4d)
            {
                this.name = "Armored Skeleton";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 0x24;
                this.lifeMax = 340;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x4e)
            {
                this.name = "Mummy";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 0x10;
                this.lifeMax = 130;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.6f;
                this.value = 600f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x4f)
            {
                this.name = "Dark Mummy";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 60;
                this.defense = 0x12;
                this.lifeMax = 180;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.5f;
                this.value = 700f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 80)
            {
                this.name = "Light Mummy";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x37;
                this.defense = 0x12;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.55f;
                this.value = 700f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x51)
            {
                this.name = "Corrupt Slime";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 1;
                this.damage = 0x37;
                this.defense = 20;
                this.lifeMax = 170;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 0x37;
                this.value = 400f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x52)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.name = "Wraith";
                this.width = 0x18;
                this.height = 0x2c;
                this.aiStyle = 0x16;
                this.damage = 0x4b;
                this.defense = 0x12;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.alpha = 100;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.knockBackResist = 0.7f;
            }
            else if (this.type == 0x53)
            {
                this.name = "Cursed Hammer";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 0x17;
                this.damage = 80;
                this.defense = 0x12;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 0x54)
            {
                this.name = "Enchanted Sword";
                this.width = 40;
                this.height = 40;
                this.aiStyle = 0x17;
                this.damage = 80;
                this.defense = 0x12;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 1000f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.knockBackResist = 0.4f;
            }
            else if (this.type == 0x55)
            {
                this.name = "Mimic";
                this.width = 0x18;
                this.height = 0x18;
                this.aiStyle = 0x19;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 500;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.value = 100000f;
                this.knockBackResist = 0.3f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x56)
            {
                this.name = "Unicorn";
                this.width = 0x2e;
                this.height = 0x2a;
                this.aiStyle = 0x1a;
                this.damage = 0x41;
                this.defense = 30;
                this.lifeMax = 400;
                this.soundHit = 10;
                this.soundKilled = 1;
                this.knockBackResist = 0.3f;
                this.value = 1000f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x57)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.npcSlots = 5f;
                this.name = "Wyvern Head";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 80;
                this.defense = 10;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x58)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Legs";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x59)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 2000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 90)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body 2";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x5b)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Body 3";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x5c)
            {
                this.displayName = "Wyvern";
                this.noTileCollide = true;
                this.name = "Wyvern Tail";
                this.width = 0x20;
                this.height = 0x20;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 0xfa0;
                this.soundHit = 7;
                this.soundKilled = 8;
                this.noGravity = true;
                this.knockBackResist = 0f;
                this.value = 10000f;
                this.scale = 1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x5d)
            {
                this.npcSlots = 0.5f;
                this.name = "Giant Bat";
                this.width = 0x1a;
                this.height = 20;
                this.aiStyle = 14;
                this.damage = 70;
                this.defense = 20;
                this.lifeMax = 160;
                this.soundHit = 1;
                this.knockBackResist = 0.75f;
                this.soundKilled = 4;
                this.value = 400f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x5e)
            {
                this.npcSlots = 1f;
                this.name = "Corruptor";
                this.width = 0x2c;
                this.height = 0x2c;
                this.aiStyle = 5;
                this.damage = 60;
                this.defense = 0x20;
                this.lifeMax = 230;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.knockBackResist = 0.55f;
                this.value = 500f;
            }
            else if (this.type == 0x5f)
            {
                this.displayName = "Digger";
                this.name = "Digger Head";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x2d;
                this.defense = 10;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
            }
            else if (this.type == 0x60)
            {
                this.displayName = "Digger";
                this.name = "Digger Body";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x1c;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
            }
            else if (this.type == 0x61)
            {
                this.displayName = "Digger";
                this.name = "Digger Tail";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x1a;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.scale = 0.9f;
                this.value = 300f;
            }
            else if (this.type == 0x62)
            {
                this.displayName = "World Feeder";
                this.npcSlots = 3.5f;
                this.name = "Seeker Head";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 70;
                this.defense = 0x24;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 700f;
            }
            else if (this.type == 0x63)
            {
                this.displayName = "World Feeder";
                this.name = "Seeker Body";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x37;
                this.defense = 40;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 700f;
            }
            else if (this.type == 100)
            {
                this.displayName = "World Feeder";
                this.name = "Seeker Tail";
                this.width = 0x16;
                this.height = 0x16;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 40;
                this.defense = 0x2c;
                this.lifeMax = 500;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 700f;
            }
            else if (this.type == 0x65)
            {
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.name = "Clinger";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 13;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 320;
                this.soundHit = 1;
                this.knockBackResist = 0.2f;
                this.soundKilled = 1;
                this.value = 600f;
            }
            else if (this.type == 0x66)
            {
                this.npcSlots = 0.5f;
                this.noGravity = true;
                this.name = "Angler Fish";
                this.width = 0x12;
                this.height = 20;
                this.aiStyle = 0x10;
                this.damage = 80;
                this.defense = 0x16;
                this.lifeMax = 90;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 500f;
            }
            else if (this.type == 0x67)
            {
                this.noGravity = true;
                this.name = "Green Jellyfish";
                this.width = 0x1a;
                this.height = 0x1a;
                this.aiStyle = 0x12;
                this.damage = 80;
                this.defense = 30;
                this.lifeMax = 120;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.value = 800f;
                this.alpha = 20;
            }
            else if (this.type == 0x68)
            {
                this.name = "Werewolf";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 70;
                this.defense = 40;
                this.lifeMax = 400;
                this.soundHit = 6;
                this.soundKilled = 1;
                this.knockBackResist = 0.4f;
                this.value = 1000f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x69)
            {
                this.friendly = true;
                this.name = "Bound Goblin";
                this.width = 0x12;
                this.height = 0x22;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
            }
            else if (this.type == 0x6a)
            {
                this.friendly = true;
                this.name = "Bound Wizard";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x6b)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Goblin Tinkerer";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
            }
            else if (this.type == 0x6c)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Wizard";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x6d)
            {
                this.name = "Clown";
                this.width = 0x22;
                this.height = 0x4e;
                this.aiStyle = 3;
                this.damage = 50;
                this.defense = 20;
                this.lifeMax = 400;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.4f;
                this.value = 8000f;
            }
            else if (this.type == 110)
            {
                this.name = "Skeleton Archer";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x37;
                this.defense = 0x1c;
                this.lifeMax = 260;
                this.soundHit = 2;
                this.soundKilled = 2;
                this.knockBackResist = 0.55f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x6f)
            {
                this.name = "Goblin Archer";
                this.scale = 0.95f;
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 20;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.7f;
                this.value = 200f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x70)
            {
                this.name = "Vile Spit";
                this.width = 0x10;
                this.height = 0x10;
                this.aiStyle = 9;
                this.damage = 0x41;
                this.defense = 0;
                this.lifeMax = 1;
                this.soundHit = 0;
                this.soundKilled = 9;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.scale = 0.9f;
                this.alpha = 80;
            }
            else if (this.type == 0x71)
            {
                this.npcSlots = 10f;
                this.name = "Wall of Flesh";
                this.width = 100;
                this.height = 100;
                this.aiStyle = 0x1b;
                this.damage = 50;
                this.defense = 12;
                this.lifeMax = 0x1f40;
                this.soundHit = 8;
                this.soundKilled = 10;
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.knockBackResist = 0f;
                this.scale = 1.2f;
                this.boss = true;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.value = 80000f;
            }
            else if (this.type == 0x72)
            {
                this.name = "Wall of Flesh Eye";
                this.displayName = "Wall of Flesh";
                this.width = 100;
                this.height = 100;
                this.aiStyle = 0x1c;
                this.damage = 50;
                this.defense = 0;
                this.lifeMax = 0x1f40;
                this.soundHit = 8;
                this.soundKilled = 10;
                this.noGravity = true;
                this.noTileCollide = true;
                this.behindTiles = true;
                this.knockBackResist = 0f;
                this.scale = 1.2f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.value = 80000f;
            }
            else if (this.type == 0x73)
            {
                this.name = "The Hungry";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 0x1d;
                this.damage = 30;
                this.defense = 10;
                this.lifeMax = 240;
                this.soundHit = 9;
                this.soundKilled = 11;
                this.noGravity = true;
                this.behindTiles = true;
                this.noTileCollide = true;
                this.knockBackResist = 1.1f;
            }
            else if (this.type == 0x74)
            {
                this.name = "The Hungry II";
                this.displayName = "The Hungry";
                this.width = 30;
                this.height = 0x20;
                this.aiStyle = 2;
                this.damage = 30;
                this.defense = 6;
                this.lifeMax = 80;
                this.soundHit = 9;
                this.knockBackResist = 0.8f;
                this.soundKilled = 12;
            }
            else if (this.type == 0x75)
            {
                this.displayName = "Leech";
                this.name = "Leech Head";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x1a;
                this.defense = 2;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
            }
            else if (this.type == 0x76)
            {
                this.displayName = "Leech";
                this.name = "Leech Body";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x16;
                this.defense = 6;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
            }
            else if (this.type == 0x77)
            {
                this.displayName = "Leech";
                this.name = "Leech Tail";
                this.width = 14;
                this.height = 14;
                this.aiStyle = 6;
                this.netAlways = true;
                this.damage = 0x12;
                this.defense = 10;
                this.lifeMax = 60;
                this.soundHit = 9;
                this.soundKilled = 12;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
            }
            else if (this.type == 120)
            {
                this.name = "Chaos Elemental";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 40;
                this.defense = 30;
                this.lifeMax = 370;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 600f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x79)
            {
                this.name = "Slimer";
                this.width = 40;
                this.height = 30;
                this.aiStyle = 14;
                this.damage = 0x2d;
                this.defense = 20;
                this.lifeMax = 60;
                this.soundHit = 1;
                this.alpha = 0x37;
                this.knockBackResist = 0.8f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x7a)
            {
                this.noGravity = true;
                this.name = "Gastropod";
                this.width = 20;
                this.height = 20;
                this.aiStyle = 0x16;
                this.damage = 60;
                this.defense = 0x16;
                this.lifeMax = 220;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 600f;
                this.buffImmune[20] = true;
            }
            else if (this.type == 0x7b)
            {
                this.friendly = true;
                this.name = "Bound Mechanic";
                this.width = 0x12;
                this.height = 0x22;
                this.aiStyle = 0;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
                this.scale = 0.9f;
            }
            else if (this.type == 0x7c)
            {
                this.townNPC = true;
                this.friendly = true;
                this.name = "Mechanic";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 7;
                this.damage = 10;
                this.defense = 15;
                this.lifeMax = 250;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.knockBackResist = 0.5f;
            }
            else if (this.type == 0x7d)
            {
                this.name = "Retinazer";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 30;
                this.damage = 50;
                this.defense = 10;
                this.lifeMax = 0x5dc0;
                this.soundHit = 1;
                this.soundKilled = 14;
                this.knockBackResist = 0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = activeTime * 30;
                this.boss = true;
                this.value = 120000f;
                this.npcSlots = 5f;
                this.boss = true;
            }
            else if (this.type == 0x7e)
            {
                this.name = "Spazmatism";
                this.width = 100;
                this.height = 110;
                this.aiStyle = 0x1f;
                this.damage = 50;
                this.defense = 10;
                this.lifeMax = 0x5dc0;
                this.soundHit = 1;
                this.soundKilled = 14;
                this.knockBackResist = 0f;
                this.noGravity = true;
                this.noTileCollide = true;
                this.timeLeft = activeTime * 30;
                this.boss = true;
                this.value = 120000f;
                this.npcSlots = 5f;
                this.boss = true;
            }
            else if (this.type == 0x7f)
            {
                this.name = "Skeletron Prime";
                this.width = 80;
                this.height = 0x66;
                this.aiStyle = 0x20;
                this.damage = 50;
                this.defense = 0x19;
                this.lifeMax = 0x7530;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.value = 120000f;
                this.knockBackResist = 0f;
                this.boss = true;
                this.npcSlots = 6f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.boss = true;
            }
            else if (this.type == 0x80)
            {
                this.name = "Prime Cannon";
                this.width = 0x34;
                this.height = 0x34;
                this.aiStyle = 0x23;
                this.damage = 30;
                this.defense = 0x19;
                this.lifeMax = 0x1b58;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.netAlways = true;
            }
            else if (this.type == 0x81)
            {
                this.name = "Prime Saw";
                this.width = 0x34;
                this.height = 0x34;
                this.aiStyle = 0x21;
                this.damage = 0x34;
                this.defense = 40;
                this.lifeMax = 0x2710;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.netAlways = true;
            }
            else if (this.type == 130)
            {
                this.name = "Prime Vice";
                this.width = 0x34;
                this.height = 0x34;
                this.aiStyle = 0x22;
                this.damage = 0x2d;
                this.defense = 0x23;
                this.lifeMax = 0x2710;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.netAlways = true;
            }
            else if (this.type == 0x83)
            {
                this.name = "Prime Laser";
                this.width = 0x34;
                this.height = 0x34;
                this.aiStyle = 0x24;
                this.damage = 0x1d;
                this.defense = 20;
                this.lifeMax = 0x1770;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.netAlways = true;
            }
            else if (this.type == 0x84)
            {
                this.displayName = "Zombie";
                this.name = "Bald Zombie";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 14;
                this.defense = 6;
                this.lifeMax = 0x2d;
                this.soundHit = 1;
                this.soundKilled = 2;
                this.knockBackResist = 0.5f;
                this.value = 60f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x85)
            {
                this.name = "Wandering Eye";
                this.width = 30;
                this.height = 0x20;
                this.aiStyle = 2;
                this.damage = 40;
                this.defense = 20;
                this.lifeMax = 300;
                this.soundHit = 1;
                this.knockBackResist = 0.8f;
                this.soundKilled = 1;
                this.value = 500f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x86)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 0x25;
                this.damage = 60;
                this.defense = 0;
                this.lifeMax = 0x13880;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.value = 120000f;
                this.scale = 1.25f;
                this.boss = true;
                this.netAlways = true;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x87)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer Body";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 0x25;
                this.damage = 40;
                this.defense = 30;
                this.lifeMax = 0x13880;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.netAlways = true;
                this.scale = 1.25f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x88)
            {
                this.displayName = "The Destroyer";
                this.npcSlots = 5f;
                this.name = "The Destroyer Tail";
                this.width = 0x26;
                this.height = 0x26;
                this.aiStyle = 0x25;
                this.damage = 20;
                this.defense = 0x23;
                this.lifeMax = 0x13880;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.noTileCollide = true;
                this.knockBackResist = 0f;
                this.behindTiles = true;
                this.scale = 1.25f;
                this.netAlways = true;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
            }
            else if (this.type == 0x89)
            {
                this.name = "Illuminant Bat";
                this.width = 0x1a;
                this.height = 20;
                this.aiStyle = 14;
                this.damage = 0x4b;
                this.defense = 30;
                this.lifeMax = 200;
                this.soundHit = 1;
                this.knockBackResist = 0.75f;
                this.soundKilled = 6;
                this.value = 500f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x8a)
            {
                this.name = "Illuminant Slime";
                this.width = 0x18;
                this.height = 0x12;
                this.aiStyle = 1;
                this.damage = 70;
                this.defense = 30;
                this.lifeMax = 180;
                this.soundHit = 1;
                this.soundKilled = 6;
                this.alpha = 100;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[0x18] = true;
                this.buffImmune[0x27] = true;
                this.knockBackResist = 0.85f;
                this.scale = 1.05f;
                this.buffImmune[0x1f] = false;
            }
            else if (this.type == 0x8b)
            {
                this.npcSlots = 1f;
                this.name = "Probe";
                this.width = 30;
                this.height = 30;
                this.aiStyle = 5;
                this.damage = 50;
                this.defense = 20;
                this.lifeMax = 200;
                this.soundHit = 4;
                this.soundKilled = 14;
                this.noGravity = true;
                this.knockBackResist = 0.8f;
                this.noTileCollide = true;
            }
            else if (this.type == 140)
            {
                this.name = "Possessed Armor";
                this.width = 0x12;
                this.height = 40;
                this.aiStyle = 3;
                this.damage = 0x37;
                this.defense = 0x1c;
                this.lifeMax = 260;
                this.soundHit = 4;
                this.soundKilled = 6;
                this.knockBackResist = 0.4f;
                this.value = 400f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
                this.buffImmune[0x18] = true;
            }
            else if (this.type == 0x8d)
            {
                this.name = "Toxic Sludge";
                this.width = 0x22;
                this.height = 0x1c;
                this.aiStyle = 1;
                this.damage = 50;
                this.defense = 0x12;
                this.lifeMax = 150;
                this.soundHit = 1;
                this.soundKilled = 1;
                this.alpha = 0x37;
                this.value = 400f;
                this.scale = 1.1f;
                this.buffImmune[20] = true;
                this.buffImmune[0x1f] = false;
                this.knockBackResist = 0.8f;
            }
            if (Main.dedServ)
            {
                this.frame = new Rectangle();
            }
            else
            {
                this.frame = new Rectangle(0, 0, Main.npcTexture[this.type].Width, Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type]);
            }
            if (scaleOverride > 0f)
            {
                int num6 = (int) (this.width * this.scale);
                int num7 = (int) (this.height * this.scale);
                this.position.X += num6 / 2;
                this.position.Y += num7;
                this.scale = scaleOverride;
                this.width = (int) (this.width * this.scale);
                this.height = (int) (this.height * this.scale);
                if ((this.height == 0x10) || (this.height == 0x20))
                {
                    this.height++;
                }
                this.position.X -= this.width / 2;
                this.position.Y -= this.height;
            }
            else
            {
                this.width = (int) (this.width * this.scale);
                this.height = (int) (this.height * this.scale);
            }
            this.life = this.lifeMax;
            this.defDamage = this.damage;
            this.defDefense = this.defense;
            this.netID = this.type;
        }

        public static void setNames()
        {
            if (WorldGen.genRand == null)
            {
                WorldGen.genRand = new Random();
            }
            int num = WorldGen.genRand.Next(0x17);
            string str = "";
            switch (num)
            {
                case 0:
                    str = "Molly";
                    break;

                case 1:
                    str = "Amy";
                    break;

                case 2:
                    str = "Claire";
                    break;

                case 3:
                    str = "Emily";
                    break;

                case 4:
                    str = "Katie";
                    break;

                case 5:
                    str = "Madeline";
                    break;

                case 6:
                    str = "Katelyn";
                    break;

                case 7:
                    str = "Emma";
                    break;

                case 8:
                    str = "Abigail";
                    break;

                case 9:
                    str = "Carly";
                    break;

                case 10:
                    str = "Jenna";
                    break;

                case 11:
                    str = "Heather";
                    break;

                case 12:
                    str = "Katherine";
                    break;

                case 13:
                    str = "Caitlin";
                    break;

                case 14:
                    str = "Kaitlin";
                    break;

                case 15:
                    str = "Holly";
                    break;

                case 0x10:
                    str = "Kaitlyn";
                    break;

                case 0x11:
                    str = "Hannah";
                    break;

                case 0x12:
                    str = "Kathryn";
                    break;

                case 0x13:
                    str = "Lorraine";
                    break;

                case 20:
                    str = "Helen";
                    break;

                case 0x15:
                    str = "Kayla";
                    break;

                default:
                    str = "Allison";
                    break;
            }
            if (Main.chrName[0x12] == "")
            {
                Main.chrName[0x12] = str;
            }
            num = WorldGen.genRand.Next(0x18);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Shayna";
                    break;

                case 1:
                    str = "Korrie";
                    break;

                case 2:
                    str = "Ginger";
                    break;

                case 3:
                    str = "Brooke";
                    break;

                case 4:
                    str = "Jenny";
                    break;

                case 5:
                    str = "Autumn";
                    break;

                case 6:
                    str = "Nancy";
                    break;

                case 7:
                    str = "Ella";
                    break;

                case 8:
                    str = "Kayla";
                    break;

                case 9:
                    str = "Beth";
                    break;

                case 10:
                    str = "Sophia";
                    break;

                case 11:
                    str = "Marshanna";
                    break;

                case 12:
                    str = "Lauren";
                    break;

                case 13:
                    str = "Trisha";
                    break;

                case 14:
                    str = "Shirlena";
                    break;

                case 15:
                    str = "Sheena";
                    break;

                case 0x10:
                    str = "Ellen";
                    break;

                case 0x11:
                    str = "Amy";
                    break;

                case 0x12:
                    str = "Dawn";
                    break;

                case 0x13:
                    str = "Susana";
                    break;

                case 20:
                    str = "Meredith";
                    break;

                case 0x15:
                    str = "Selene";
                    break;

                case 0x16:
                    str = "Terra";
                    break;

                default:
                    str = "Sally";
                    break;
            }
            if (Main.chrName[0x7c] == "")
            {
                Main.chrName[0x7c] = str;
            }
            num = WorldGen.genRand.Next(0x17);
            str = "";
            switch (num)
            {
                case 0:
                    str = "DeShawn";
                    break;

                case 1:
                    str = "DeAndre";
                    break;

                case 2:
                    str = "Marquis";
                    break;

                case 3:
                    str = "Darnell";
                    break;

                case 4:
                    str = "Terrell";
                    break;

                case 5:
                    str = "Malik";
                    break;

                case 6:
                    str = "Trevon";
                    break;

                case 7:
                    str = "Tyrone";
                    break;

                case 8:
                    str = "Willie";
                    break;

                case 9:
                    str = "Dominique";
                    break;

                case 10:
                    str = "Demetrius";
                    break;

                case 11:
                    str = "Reginald";
                    break;

                case 12:
                    str = "Jamal";
                    break;

                case 13:
                    str = "Maurice";
                    break;

                case 14:
                    str = "Jalen";
                    break;

                case 15:
                    str = "Darius";
                    break;

                case 0x10:
                    str = "Xavier";
                    break;

                case 0x11:
                    str = "Terrance";
                    break;

                case 0x12:
                    str = "Andre";
                    break;

                case 0x13:
                    str = "Dante";
                    break;

                case 20:
                    str = "Brimst";
                    break;

                case 0x15:
                    str = "Bronson";
                    break;

                default:
                    str = "Darryl";
                    break;
            }
            if (Main.chrName[0x13] == "")
            {
                Main.chrName[0x13] = str;
            }
            num = WorldGen.genRand.Next(0x23);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Jake";
                    break;

                case 1:
                    str = "Connor";
                    break;

                case 2:
                    str = "Tanner";
                    break;

                case 3:
                    str = "Wyatt";
                    break;

                case 4:
                    str = "Cody";
                    break;

                case 5:
                    str = "Dustin";
                    break;

                case 6:
                    str = "Luke";
                    break;

                case 7:
                    str = "Jack";
                    break;

                case 8:
                    str = "Scott";
                    break;

                case 9:
                    str = "Logan";
                    break;

                case 10:
                    str = "Cole";
                    break;

                case 11:
                    str = "Lucas";
                    break;

                case 12:
                    str = "Bradley";
                    break;

                case 13:
                    str = "Jacob";
                    break;

                case 14:
                    str = "Garrett";
                    break;

                case 15:
                    str = "Dylan";
                    break;

                case 0x10:
                    str = "Maxwell";
                    break;

                case 0x11:
                    str = "Steve";
                    break;

                case 0x12:
                    str = "Brett";
                    break;

                case 0x13:
                    str = "Andrew";
                    break;

                case 20:
                    str = "Harley";
                    break;

                case 0x15:
                    str = "Kyle";
                    break;

                case 0x16:
                    str = "Jake";
                    break;

                case 0x17:
                    str = "Ryan";
                    break;

                case 0x18:
                    str = "Jeffrey";
                    break;

                case 0x19:
                    str = "Seth";
                    break;

                case 0x1a:
                    str = "Marty";
                    break;

                case 0x1b:
                    str = "Brandon";
                    break;

                case 0x1c:
                    str = "Zach";
                    break;

                case 0x1d:
                    str = "Jeff";
                    break;

                case 30:
                    str = "Daniel";
                    break;

                case 0x1f:
                    str = "Trent";
                    break;

                case 0x20:
                    str = "Kevin";
                    break;

                case 0x21:
                    str = "Brian";
                    break;

                default:
                    str = "Colin";
                    break;
            }
            if (Main.chrName[0x16] == "")
            {
                Main.chrName[0x16] = str;
            }
            num = WorldGen.genRand.Next(0x16);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Alalia";
                    break;

                case 1:
                    str = "Alalia";
                    break;

                case 2:
                    str = "Alura";
                    break;

                case 3:
                    str = "Ariella";
                    break;

                case 4:
                    str = "Caelia";
                    break;

                case 5:
                    str = "Calista";
                    break;

                case 6:
                    str = "Chryseis";
                    break;

                case 7:
                    str = "Emerenta";
                    break;

                case 8:
                    str = "Elysia";
                    break;

                case 9:
                    str = "Evvie";
                    break;

                case 10:
                    str = "Faye";
                    break;

                case 11:
                    str = "Felicitae";
                    break;

                case 12:
                    str = "Lunette";
                    break;

                case 13:
                    str = "Nata";
                    break;

                case 14:
                    str = "Nissa";
                    break;

                case 15:
                    str = "Tatiana";
                    break;

                case 0x10:
                    str = "Rosalva";
                    break;

                case 0x11:
                    str = "Shea";
                    break;

                case 0x12:
                    str = "Tania";
                    break;

                case 0x13:
                    str = "Isis";
                    break;

                case 20:
                    str = "Celestia";
                    break;

                default:
                    str = "Xylia";
                    break;
            }
            if (Main.chrName[20] == "")
            {
                Main.chrName[20] = str;
            }
            num = WorldGen.genRand.Next(0x16);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Dolbere";
                    break;

                case 1:
                    str = "Bazdin";
                    break;

                case 2:
                    str = "Durim";
                    break;

                case 3:
                    str = "Tordak";
                    break;

                case 4:
                    str = "Garval";
                    break;

                case 5:
                    str = "Morthal";
                    break;

                case 6:
                    str = "Oten";
                    break;

                case 7:
                    str = "Dolgen";
                    break;

                case 8:
                    str = "Gimli";
                    break;

                case 9:
                    str = "Gimut";
                    break;

                case 10:
                    str = "Duerthen";
                    break;

                case 11:
                    str = "Beldin";
                    break;

                case 12:
                    str = "Jarut";
                    break;

                case 13:
                    str = "Ovbere";
                    break;

                case 14:
                    str = "Norkas";
                    break;

                case 15:
                    str = "Dolgrim";
                    break;

                case 0x10:
                    str = "Boften";
                    break;

                case 0x11:
                    str = "Norsun";
                    break;

                case 0x12:
                    str = "Dias";
                    break;

                case 0x13:
                    str = "Fikod";
                    break;

                case 20:
                    str = "Urist";
                    break;

                default:
                    str = "Darur";
                    break;
            }
            if (Main.chrName[0x26] == "")
            {
                Main.chrName[0x26] = str;
            }
            num = WorldGen.genRand.Next(0x15);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Dalamar";
                    break;

                case 1:
                    str = "Dulais";
                    break;

                case 2:
                    str = "Elric";
                    break;

                case 3:
                    str = "Arddun";
                    break;

                case 4:
                    str = "Maelor";
                    break;

                case 5:
                    str = "Leomund";
                    break;

                case 6:
                    str = "Hirael";
                    break;

                case 7:
                    str = "Gwentor";
                    break;

                case 8:
                    str = "Greum";
                    break;

                case 9:
                    str = "Gearroid";
                    break;

                case 10:
                    str = "Fizban";
                    break;

                case 11:
                    str = "Ningauble";
                    break;

                case 12:
                    str = "Seonag";
                    break;

                case 13:
                    str = "Sargon";
                    break;

                case 14:
                    str = "Merlyn";
                    break;

                case 15:
                    str = "Magius";
                    break;

                case 0x10:
                    str = "Berwyn";
                    break;

                case 0x11:
                    str = "Arwyn";
                    break;

                case 0x12:
                    str = "Alasdair";
                    break;

                case 0x13:
                    str = "Tagar";
                    break;

                default:
                    str = "Xanadu";
                    break;
            }
            if (Main.chrName[0x6c] == "")
            {
                Main.chrName[0x6c] = str;
            }
            num = WorldGen.genRand.Next(0x17);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Alfred";
                    break;

                case 1:
                    str = "Barney";
                    break;

                case 2:
                    str = "Calvin";
                    break;

                case 3:
                    str = "Edmund";
                    break;

                case 4:
                    str = "Edwin";
                    break;

                case 5:
                    str = "Eugene";
                    break;

                case 6:
                    str = "Frank";
                    break;

                case 7:
                    str = "Frederick";
                    break;

                case 8:
                    str = "Gilbert";
                    break;

                case 9:
                    str = "Gus";
                    break;

                case 10:
                    str = "Wilbur";
                    break;

                case 11:
                    str = "Seymour";
                    break;

                case 12:
                    str = "Louis";
                    break;

                case 13:
                    str = "Humphrey";
                    break;

                case 14:
                    str = "Harold";
                    break;

                case 15:
                    str = "Milton";
                    break;

                case 0x10:
                    str = "Mortimer";
                    break;

                case 0x11:
                    str = "Howard";
                    break;

                case 0x12:
                    str = "Walter";
                    break;

                case 0x13:
                    str = "Finn";
                    break;

                case 20:
                    str = "Isacc";
                    break;

                case 0x15:
                    str = "Joseph";
                    break;

                default:
                    str = "Ralph";
                    break;
            }
            if (Main.chrName[0x11] == "")
            {
                Main.chrName[0x11] = str;
            }
            num = WorldGen.genRand.Next(0x18);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Sebastian";
                    break;

                case 1:
                    str = "Rupert";
                    break;

                case 2:
                    str = "Clive";
                    break;

                case 3:
                    str = "Nigel";
                    break;

                case 4:
                    str = "Mervyn";
                    break;

                case 5:
                    str = "Cedric";
                    break;

                case 6:
                    str = "Pip";
                    break;

                case 7:
                    str = "Cyril";
                    break;

                case 8:
                    str = "Fitz";
                    break;

                case 9:
                    str = "Lloyd";
                    break;

                case 10:
                    str = "Arthur";
                    break;

                case 11:
                    str = "Rodney";
                    break;

                case 12:
                    str = "Graham";
                    break;

                case 13:
                    str = "Edward";
                    break;

                case 14:
                    str = "Alfred";
                    break;

                case 15:
                    str = "Edmund";
                    break;

                case 0x10:
                    str = "Henry";
                    break;

                case 0x11:
                    str = "Herald";
                    break;

                case 0x12:
                    str = "Roland";
                    break;

                case 0x13:
                    str = "Lincoln";
                    break;

                case 20:
                    str = "Lloyd";
                    break;

                case 0x15:
                    str = "Edgar";
                    break;

                case 0x16:
                    str = "Eustace";
                    break;

                default:
                    str = "Rodrick";
                    break;
            }
            if (Main.chrName[0x36] == "")
            {
                Main.chrName[0x36] = str;
            }
            num = WorldGen.genRand.Next(0x19);
            str = "";
            switch (num)
            {
                case 0:
                    str = "Grodax";
                    break;

                case 1:
                    str = "Sarx";
                    break;

                case 2:
                    str = "Xon";
                    break;

                case 3:
                    str = "Mrunok";
                    break;

                case 4:
                    str = "Nuxatk";
                    break;

                case 5:
                    str = "Tgerd";
                    break;

                case 6:
                    str = "Darz";
                    break;

                case 7:
                    str = "Smador";
                    break;

                case 8:
                    str = "Stazen";
                    break;

                case 9:
                    str = "Mobart";
                    break;

                case 10:
                    str = "Knogs";
                    break;

                case 11:
                    str = "Tkanus";
                    break;

                case 12:
                    str = "Negurk";
                    break;

                case 13:
                    str = "Nort";
                    break;

                case 14:
                    str = "Durnok";
                    break;

                case 15:
                    str = "Trogem";
                    break;

                case 0x10:
                    str = "Stezom";
                    break;

                case 0x11:
                    str = "Gnudar";
                    break;

                case 0x12:
                    str = "Ragz";
                    break;

                case 0x13:
                    str = "Fahd";
                    break;

                case 20:
                    str = "Xanos";
                    break;

                case 0x15:
                    str = "Arback";
                    break;

                case 0x16:
                    str = "Fjell";
                    break;

                case 0x17:
                    str = "Dalek";
                    break;

                default:
                    str = "Knub";
                    break;
            }
            if (Main.chrName[0x6b] == "")
            {
                Main.chrName[0x6b] = str;
            }
        }

        public static void SpawnNPC()
        {
            if (noSpawnCycle)
            {
                noSpawnCycle = false;
            }
            else
            {
                bool flag = false;
                bool flag2 = false;
                int x = 0;
                int y = 0;
                int num3 = 0;
                for (int i = 0; i < 0xff; i++)
                {
                    if (Main.player[i].active)
                    {
                        num3++;
                    }
                }
                for (int j = 0; j < 0xff; j++)
                {
                    if (!Main.player[j].active || Main.player[j].dead)
                    {
                        continue;
                    }
                    bool flag3 = false;
                    bool flag4 = false;
                    bool flag5 = false;
                    if (((Main.player[j].active && (Main.invasionType > 0)) && ((Main.invasionDelay == 0) && (Main.invasionSize > 0))) && (Main.player[j].position.Y < ((Main.worldSurface * 16.0) + sHeight)))
                    {
                        int num6 = 0xbb8;
                        if ((Main.player[j].position.X > ((Main.invasionX * 16.0) - num6)) && (Main.player[j].position.X < ((Main.invasionX * 16.0) + num6)))
                        {
                            flag4 = true;
                        }
                    }
                    flag = false;
                    spawnRate = defaultSpawnRate;
                    maxSpawns = defaultMaxSpawns;
                    if (Main.hardMode)
                    {
                        spawnRate = (int) (defaultSpawnRate * 0.9);
                        maxSpawns = defaultMaxSpawns + 1;
                    }
                    if (Main.player[j].position.Y > ((Main.maxTilesY - 200) * 0x10))
                    {
                        maxSpawns = (int) (maxSpawns * 2f);
                    }
                    else if (Main.player[j].position.Y > ((Main.rockLayer * 16.0) + sHeight))
                    {
                        spawnRate = (int) (spawnRate * 0.4);
                        maxSpawns = (int) (maxSpawns * 1.9f);
                    }
                    else if (Main.player[j].position.Y > ((Main.worldSurface * 16.0) + sHeight))
                    {
                        if (Main.hardMode)
                        {
                            spawnRate = (int) (spawnRate * 0.45);
                            maxSpawns = (int) (maxSpawns * 1.8f);
                        }
                        else
                        {
                            spawnRate = (int) (spawnRate * 0.5);
                            maxSpawns = (int) (maxSpawns * 1.7f);
                        }
                    }
                    else if (!Main.dayTime)
                    {
                        spawnRate = (int) (spawnRate * 0.6);
                        maxSpawns = (int) (maxSpawns * 1.3f);
                        if (Main.bloodMoon)
                        {
                            spawnRate = (int) (spawnRate * 0.3);
                            maxSpawns = (int) (maxSpawns * 1.8f);
                        }
                    }
                    if (Main.player[j].zoneDungeon)
                    {
                        spawnRate = (int) (spawnRate * 0.4);
                        maxSpawns = (int) (maxSpawns * 1.7f);
                    }
                    else if (Main.player[j].zoneJungle)
                    {
                        spawnRate = (int) (spawnRate * 0.4);
                        maxSpawns = (int) (maxSpawns * 1.5f);
                    }
                    else if (Main.player[j].zoneEvil)
                    {
                        spawnRate = (int) (spawnRate * 0.65);
                        maxSpawns = (int) (maxSpawns * 1.3f);
                    }
                    else if (Main.player[j].zoneMeteor)
                    {
                        spawnRate = (int) (spawnRate * 0.4);
                        maxSpawns = (int) (maxSpawns * 1.1f);
                    }
                    if (Main.player[j].zoneHoly && (Main.player[j].position.Y > ((Main.rockLayer * 16.0) + sHeight)))
                    {
                        spawnRate = (int) (spawnRate * 0.65);
                        maxSpawns = (int) (maxSpawns * 1.3f);
                    }
                    if ((Main.wof >= 0) && (Main.player[j].position.Y > ((Main.maxTilesY - 200) * 0x10)))
                    {
                        maxSpawns = (int) (maxSpawns * 0.3f);
                        spawnRate *= 3;
                    }
                    if (Main.player[j].activeNPCs < (maxSpawns * 0.2))
                    {
                        spawnRate = (int) (spawnRate * 0.6f);
                    }
                    else if (Main.player[j].activeNPCs < (maxSpawns * 0.4))
                    {
                        spawnRate = (int) (spawnRate * 0.7f);
                    }
                    else if (Main.player[j].activeNPCs < (maxSpawns * 0.6))
                    {
                        spawnRate = (int) (spawnRate * 0.8f);
                    }
                    else if (Main.player[j].activeNPCs < (maxSpawns * 0.8))
                    {
                        spawnRate = (int) (spawnRate * 0.9f);
                    }
                    if (((Main.player[j].position.Y * 16f) > ((Main.worldSurface + Main.rockLayer) / 2.0)) || Main.player[j].zoneEvil)
                    {
                        if (Main.player[j].activeNPCs < (maxSpawns * 0.2))
                        {
                            spawnRate = (int) (spawnRate * 0.7f);
                        }
                        else if (Main.player[j].activeNPCs < (maxSpawns * 0.4))
                        {
                            spawnRate = (int) (spawnRate * 0.9f);
                        }
                    }
                    if (Main.player[j].inventory[Main.player[j].selectedItem].type == 0x94)
                    {
                        spawnRate = (int) (spawnRate * 0.75);
                        maxSpawns = (int) (maxSpawns * 1.5f);
                    }
                    if (Main.player[j].enemySpawns)
                    {
                        spawnRate = (int) (spawnRate * 0.5);
                        maxSpawns = (int) (maxSpawns * 2f);
                    }
                    if (spawnRate < (defaultSpawnRate * 0.1))
                    {
                        spawnRate = (int) (defaultSpawnRate * 0.1);
                    }
                    if (maxSpawns > (defaultMaxSpawns * 3))
                    {
                        maxSpawns = defaultMaxSpawns * 3;
                    }
                    if (flag4)
                    {
                        maxSpawns = (int) (defaultMaxSpawns * (2.0 + (0.3 * num3)));
                        spawnRate = 20;
                    }
                    if (Main.player[j].zoneDungeon && !downedBoss3)
                    {
                        spawnRate = 10;
                    }
                    bool flag6 = false;
                    if ((!flag4 && (!Main.bloodMoon || Main.dayTime)) && ((!Main.player[j].zoneDungeon && !Main.player[j].zoneEvil) && !Main.player[j].zoneMeteor))
                    {
                        if (Main.player[j].townNPCs == 1f)
                        {
                            flag3 = true;
                            if (Main.rand.Next(3) <= 1)
                            {
                                flag6 = true;
                                maxSpawns = (int) (maxSpawns * 0.6);
                            }
                            else
                            {
                                spawnRate = (int) (spawnRate * 2f);
                            }
                        }
                        else if (Main.player[j].townNPCs == 2f)
                        {
                            flag3 = true;
                            if (Main.rand.Next(3) == 0)
                            {
                                flag6 = true;
                                maxSpawns = (int) (maxSpawns * 0.6);
                            }
                            else
                            {
                                spawnRate = (int) (spawnRate * 3f);
                            }
                        }
                        else if (Main.player[j].townNPCs >= 3f)
                        {
                            flag3 = true;
                            flag6 = true;
                            maxSpawns = (int) (maxSpawns * 0.6);
                        }
                    }
                    if ((Main.player[j].active && !Main.player[j].dead) && ((Main.player[j].activeNPCs < maxSpawns) && (Main.rand.Next(spawnRate) == 0)))
                    {
                        int minValue = ((int) (Main.player[j].position.X / 16f)) - spawnRangeX;
                        int maxValue = ((int) (Main.player[j].position.X / 16f)) + spawnRangeX;
                        int num9 = ((int) (Main.player[j].position.Y / 16f)) - spawnRangeY;
                        int maxTilesY = ((int) (Main.player[j].position.Y / 16f)) + spawnRangeY;
                        int num11 = ((int) (Main.player[j].position.X / 16f)) - safeRangeX;
                        int num12 = ((int) (Main.player[j].position.X / 16f)) + safeRangeX;
                        int num13 = ((int) (Main.player[j].position.Y / 16f)) - safeRangeY;
                        int num14 = ((int) (Main.player[j].position.Y / 16f)) + safeRangeY;
                        if (minValue < 0)
                        {
                            minValue = 0;
                        }
                        if (maxValue > Main.maxTilesX)
                        {
                            maxValue = Main.maxTilesX;
                        }
                        if (num9 < 0)
                        {
                            num9 = 0;
                        }
                        if (maxTilesY > Main.maxTilesY)
                        {
                            maxTilesY = Main.maxTilesY;
                        }
                        for (int k = 0; k < 50; k++)
                        {
                            int num16 = Main.rand.Next(minValue, maxValue);
                            int num17 = Main.rand.Next(num9, maxTilesY);
                            if (!Main.tile[num16, num17].active || !Main.tileSolid[Main.tile[num16, num17].type])
                            {
                                if (Main.wallHouse[Main.tile[num16, num17].wall])
                                {
                                    goto Label_0C39;
                                }
                                if (((!flag4 && (num17 < (Main.worldSurface * 0.34999999403953552))) && !flag6) && (((num16 < (Main.maxTilesX * 0.45)) || (num16 > (Main.maxTilesX * 0.55))) || Main.hardMode))
                                {
                                    byte type = Main.tile[num16, num17].type;
                                    x = num16;
                                    y = num17;
                                    flag = true;
                                    flag2 = true;
                                }
                                else if (((!flag4 && (num17 < (Main.worldSurface * 0.44999998807907104))) && (!flag6 && Main.hardMode)) && (Main.rand.Next(4) == 0))
                                {
                                    byte num29 = Main.tile[num16, num17].type;
                                    x = num16;
                                    y = num17;
                                    flag = true;
                                    flag2 = true;
                                }
                                else
                                {
                                    for (int m = num17; m < Main.maxTilesY; m++)
                                    {
                                        if (Main.tile[num16, m].active && Main.tileSolid[Main.tile[num16, m].type])
                                        {
                                            if (((num16 < num11) || (num16 > num12)) || ((m < num13) || (m > num14)))
                                            {
                                                byte num30 = Main.tile[num16, m].type;
                                                x = num16;
                                                y = m;
                                                flag = true;
                                            }
                                            break;
                                        }
                                    }
                                }
                                if (flag)
                                {
                                    int num19 = x - (spawnSpaceX / 2);
                                    int num20 = x + (spawnSpaceX / 2);
                                    int num21 = y - spawnSpaceY;
                                    int num22 = y;
                                    if (num19 < 0)
                                    {
                                        flag = false;
                                    }
                                    if (num20 > Main.maxTilesX)
                                    {
                                        flag = false;
                                    }
                                    if (num21 < 0)
                                    {
                                        flag = false;
                                    }
                                    if (num22 > Main.maxTilesY)
                                    {
                                        flag = false;
                                    }
                                    if (flag)
                                    {
                                        for (int n = num19; n < num20; n++)
                                        {
                                            for (int num24 = num21; num24 < num22; num24++)
                                            {
                                                if (Main.tile[n, num24].active && Main.tileSolid[Main.tile[n, num24].type])
                                                {
                                                    flag = false;
                                                    break;
                                                }
                                                if (Main.tile[n, num24].lava)
                                                {
                                                    flag = false;
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (flag || flag)
                            {
                                break;
                            }
                        Label_0C39:;
                        }
                    }
                    if (flag)
                    {
                        Rectangle rectangle = new Rectangle(x * 0x10, y * 0x10, 0x10, 0x10);
                        for (int num25 = 0; num25 < 0xff; num25++)
                        {
                            if (Main.player[num25].active)
                            {
                                Rectangle rectangle2 = new Rectangle(((((int) Main.player[num25].position.X) + (Main.player[num25].width / 2)) - (sWidth / 2)) - safeRangeX, ((((int) Main.player[num25].position.Y) + (Main.player[num25].height / 2)) - (sHeight / 2)) - safeRangeY, sWidth + (safeRangeX * 2), sHeight + (safeRangeY * 2));
                                if (rectangle.Intersects(rectangle2))
                                {
                                    flag = false;
                                }
                            }
                        }
                    }
                    if (flag)
                    {
                        if (Main.player[j].zoneDungeon && (!Main.tileDungeon[Main.tile[x, y].type] || (Main.tile[x, y - 1].wall == 0)))
                        {
                            flag = false;
                        }
                        if (((Main.tile[x, y - 1].liquid > 0) && (Main.tile[x, y - 2].liquid > 0)) && !Main.tile[x, y - 1].lava)
                        {
                            flag5 = true;
                        }
                    }
                    if (flag)
                    {
                        flag = false;
                        int num26 = Main.tile[x, y].type;
                        int index = 200;
                        if (flag2)
                        {
                            if ((Main.hardMode && (Main.rand.Next(4) == 0)) && !AnyNPCs(0x57))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x57, 1);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x30, 0);
                            }
                        }
                        else if (flag4)
                        {
                            if (Main.rand.Next(9) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x1d, 0);
                            }
                            else if (Main.rand.Next(5) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x1a, 0);
                            }
                            else if (Main.rand.Next(3) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x6f, 0);
                            }
                            else if (Main.rand.Next(3) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x1b, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x1c, 0);
                            }
                        }
                        else if ((flag5 && ((x < 250) || (x > (Main.maxTilesX - 250)))) && ((num26 == 0x35) && (y < Main.rockLayer)))
                        {
                            if (Main.rand.Next(8) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x41, 0);
                            }
                            if (Main.rand.Next(3) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x43, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x40, 0);
                            }
                        }
                        else if (flag5 && (((y > Main.rockLayer) && (Main.rand.Next(2) == 0)) || (num26 == 60)))
                        {
                            if (Main.hardMode && (Main.rand.Next(3) > 0))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x66, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x3a, 0);
                            }
                        }
                        else if ((flag5 && (y > Main.worldSurface)) && (Main.rand.Next(3) == 0))
                        {
                            if (Main.hardMode)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x67, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x3f, 0);
                            }
                        }
                        else if (flag5 && (Main.rand.Next(4) == 0))
                        {
                            if (Main.player[j].zoneEvil)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x39, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x37, 0);
                            }
                        }
                        else if (((downedGoblins && (Main.rand.Next(20) == 0)) && (!flag5 && (y >= Main.rockLayer))) && (((y < (Main.maxTilesY - 210)) && !savedGoblin) && !AnyNPCs(0x69)))
                        {
                            NewNPC((x * 0x10) + 8, y * 0x10, 0x69, 0);
                        }
                        else if (((Main.hardMode && (Main.rand.Next(20) == 0)) && (!flag5 && (y >= Main.rockLayer))) && (((y < (Main.maxTilesY - 210)) && !savedWizard) && !AnyNPCs(0x6a)))
                        {
                            NewNPC((x * 0x10) + 8, y * 0x10, 0x6a, 0);
                        }
                        else if (flag6)
                        {
                            if (flag5)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x37, 0);
                            }
                            else
                            {
                                if (((num26 != 2) && (num26 != 0x6d)) && (y <= Main.worldSurface))
                                {
                                    return;
                                }
                                if ((Main.rand.Next(2) == 0) && (y <= Main.worldSurface))
                                {
                                    NewNPC((x * 0x10) + 8, y * 0x10, 0x4a, 0);
                                }
                                else
                                {
                                    NewNPC((x * 0x10) + 8, y * 0x10, 0x2e, 0);
                                }
                            }
                        }
                        else if (Main.player[j].zoneDungeon)
                        {
                            if (!downedBoss3)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x44, 0);
                            }
                            else if (((!savedMech && (Main.rand.Next(5) == 0)) && (!flag5 && !AnyNPCs(0x7b))) && (y > Main.rockLayer))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x7b, 0);
                            }
                            else if (Main.rand.Next(0x25) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x47, 0);
                            }
                            else if ((Main.rand.Next(4) == 0) && !NearSpikeBall(x, y))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 70, 0);
                            }
                            else if (Main.rand.Next(15) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x48, 0);
                            }
                            else if (Main.rand.Next(9) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x22, 0);
                            }
                            else if (Main.rand.Next(7) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x20, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x1f, 0);
                                if (Main.rand.Next(4) == 0)
                                {
                                    Main.npc[index].SetDefaults("Big Boned");
                                }
                                else if (Main.rand.Next(5) == 0)
                                {
                                    Main.npc[index].SetDefaults("Short Bones");
                                }
                            }
                        }
                        else if (Main.player[j].zoneMeteor)
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x17, 0);
                        }
                        else if (Main.player[j].zoneEvil && (Main.rand.Next(0x41) == 0))
                        {
                            if (Main.hardMode && (Main.rand.Next(4) != 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x62, 1);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 7, 1);
                            }
                        }
                        else if ((Main.hardMode && (y > Main.worldSurface)) && (Main.rand.Next(0x4b) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x55, 0);
                        }
                        else if ((Main.hardMode && (Main.tile[x, y - 1].wall == 2)) && (Main.rand.Next(20) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x55, 0);
                        }
                        else if (((Main.hardMode && (y <= Main.worldSurface)) && !Main.dayTime) && ((Main.rand.Next(20) == 0) || ((Main.rand.Next(5) == 0) && (Main.moonPhase == 4))))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x52, 0);
                        }
                        else if (((num26 == 60) && (Main.rand.Next(500) == 0)) && !Main.dayTime)
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x34, 0);
                        }
                        else if ((num26 == 60) && (y > ((Main.worldSurface + Main.rockLayer) / 2.0)))
                        {
                            if (Main.rand.Next(3) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x2b, 0);
                                Main.npc[index].ai[0] = x;
                                Main.npc[index].ai[1] = y;
                                Main.npc[index].netUpdate = true;
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x2a, 0);
                                if (Main.rand.Next(4) == 0)
                                {
                                    Main.npc[index].SetDefaults("Little Stinger");
                                }
                                else if (Main.rand.Next(4) == 0)
                                {
                                    Main.npc[index].SetDefaults("Big Stinger");
                                }
                            }
                        }
                        else if ((num26 == 60) && (Main.rand.Next(4) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x33, 0);
                        }
                        else if ((num26 == 60) && (Main.rand.Next(8) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x38, 0);
                            Main.npc[index].ai[0] = x;
                            Main.npc[index].ai[1] = y;
                            Main.npc[index].netUpdate = true;
                        }
                        else if ((Main.hardMode && (num26 == 0x35)) && (Main.rand.Next(3) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x4e, 0);
                        }
                        else if ((Main.hardMode && (num26 == 0x70)) && (Main.rand.Next(2) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x4f, 0);
                        }
                        else if ((Main.hardMode && (num26 == 0x74)) && (Main.rand.Next(2) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 80, 0);
                        }
                        else if (((Main.hardMode && !flag5) && (y < Main.rockLayer)) && (((num26 == 0x74) || (num26 == 0x75)) || (num26 == 0x6d)))
                        {
                            if (!Main.dayTime && (Main.rand.Next(2) == 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x7a, 0);
                            }
                            else if (Main.rand.Next(10) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x56, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x4b, 0);
                            }
                        }
                        else if (((!flag3 && Main.hardMode) && ((Main.rand.Next(50) == 0) && !flag5)) && ((y >= Main.rockLayer) && (((num26 == 0x74) || (num26 == 0x75)) || (num26 == 0x6d))))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x54, 0);
                        }
                        else if (((num26 == 0x16) && Main.player[j].zoneEvil) || (((num26 == 0x17) || (num26 == 0x19)) || (num26 == 0x70)))
                        {
                            if ((Main.hardMode && (y >= Main.rockLayer)) && (Main.rand.Next(3) == 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x65, 0);
                                Main.npc[index].ai[0] = x;
                                Main.npc[index].ai[1] = y;
                                Main.npc[index].netUpdate = true;
                            }
                            else if (Main.hardMode && (Main.rand.Next(3) == 0))
                            {
                                if (Main.rand.Next(3) == 0)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x79, 0);
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x51, 0);
                                }
                            }
                            else if ((Main.hardMode && (y >= Main.rockLayer)) && (Main.rand.Next(40) == 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x53, 0);
                            }
                            else if (Main.hardMode && ((Main.rand.Next(2) == 0) || (y > Main.rockLayer)))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x5e, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 6, 0);
                                if (Main.rand.Next(3) == 0)
                                {
                                    Main.npc[index].SetDefaults("Little Eater");
                                }
                                else if (Main.rand.Next(3) == 0)
                                {
                                    Main.npc[index].SetDefaults("Big Eater");
                                }
                            }
                        }
                        else if (y <= Main.worldSurface)
                        {
                            if (Main.dayTime)
                            {
                                int num28 = Math.Abs((int) (x - Main.spawnTileX));
                                if (((num28 < (Main.maxTilesX / 3)) && (Main.rand.Next(15) == 0)) && ((num26 == 2) || (num26 == 0x6d)))
                                {
                                    NewNPC((x * 0x10) + 8, y * 0x10, 0x2e, 0);
                                }
                                else if (((num28 < (Main.maxTilesX / 3)) && (Main.rand.Next(15) == 0)) && ((num26 == 2) || (num26 == 0x6d)))
                                {
                                    NewNPC((x * 0x10) + 8, y * 0x10, 0x4a, 0);
                                }
                                else if (((num28 > (Main.maxTilesX / 3)) && (num26 == 2)) && ((Main.rand.Next(300) == 0) && !AnyNPCs(50)))
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 50, 0);
                                }
                                else if (((num26 == 0x35) && (Main.rand.Next(5) == 0)) && !flag5)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x45, 0);
                                }
                                else if ((num26 == 0x35) && !flag5)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x3d, 0);
                                }
                                else if ((num28 > (Main.maxTilesX / 3)) && (Main.rand.Next(15) == 0))
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x49, 0);
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 1, 0);
                                    if (num26 == 60)
                                    {
                                        Main.npc[index].SetDefaults("Jungle Slime");
                                    }
                                    else if ((Main.rand.Next(3) == 0) || (num28 < 200))
                                    {
                                        Main.npc[index].SetDefaults("Green Slime");
                                    }
                                    else if ((Main.rand.Next(10) == 0) && (num28 > 400))
                                    {
                                        Main.npc[index].SetDefaults("Purple Slime");
                                    }
                                }
                            }
                            else if ((Main.rand.Next(6) == 0) || ((Main.moonPhase == 4) && (Main.rand.Next(2) == 0)))
                            {
                                if (Main.hardMode && (Main.rand.Next(3) == 0))
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x85, 0);
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 2, 0);
                                }
                            }
                            else if ((Main.hardMode && (Main.rand.Next(50) == 0)) && (Main.bloodMoon && !AnyNPCs(0x6d)))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x6d, 0);
                            }
                            else if ((Main.rand.Next(250) == 0) && Main.bloodMoon)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x35, 0);
                            }
                            else if (((Main.moonPhase == 0) && Main.hardMode) && (Main.rand.Next(3) != 0))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x68, 0);
                            }
                            else if (Main.hardMode && (Main.rand.Next(3) == 0))
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 140, 0);
                            }
                            else if (Main.rand.Next(3) == 0)
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 0x84, 0);
                            }
                            else
                            {
                                NewNPC((x * 0x10) + 8, y * 0x10, 3, 0);
                            }
                        }
                        else if (y <= Main.rockLayer)
                        {
                            if (!flag3 && (Main.rand.Next(50) == 0))
                            {
                                if (Main.hardMode)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x5f, 1);
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 10, 1);
                                }
                            }
                            else if (Main.hardMode && (Main.rand.Next(3) == 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 140, 0);
                            }
                            else if (Main.hardMode && (Main.rand.Next(4) != 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x8d, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 1, 0);
                                if (Main.rand.Next(5) == 0)
                                {
                                    Main.npc[index].SetDefaults("Yellow Slime");
                                }
                                else if (Main.rand.Next(2) == 0)
                                {
                                    Main.npc[index].SetDefaults("Blue Slime");
                                }
                                else
                                {
                                    Main.npc[index].SetDefaults("Red Slime");
                                }
                            }
                        }
                        else if (y > (Main.maxTilesY - 190))
                        {
                            if ((Main.rand.Next(40) == 0) && !AnyNPCs(0x27))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x27, 1);
                            }
                            else if (Main.rand.Next(14) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x18, 0);
                            }
                            else if (Main.rand.Next(8) == 0)
                            {
                                if (Main.rand.Next(7) == 0)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x42, 0);
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x3e, 0);
                                }
                            }
                            else if (Main.rand.Next(3) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x3b, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 60, 0);
                            }
                        }
                        else if (((num26 == 0x74) || (num26 == 0x75)) && (!flag3 && (Main.rand.Next(8) == 0)))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 120, 0);
                        }
                        else if ((!flag3 && (Main.rand.Next(0x4b) == 0)) && !Main.player[j].zoneHoly)
                        {
                            if (Main.hardMode)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x5f, 1);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 10, 1);
                            }
                        }
                        else if (!Main.hardMode && (Main.rand.Next(10) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x10, 0);
                        }
                        else if (!Main.hardMode && (Main.rand.Next(4) == 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 1, 0);
                            if (Main.player[j].zoneJungle)
                            {
                                Main.npc[index].SetDefaults("Jungle Slime");
                            }
                            else
                            {
                                Main.npc[index].SetDefaults("Black Slime");
                            }
                        }
                        else if (Main.rand.Next(2) == 0)
                        {
                            if ((y > ((Main.rockLayer + Main.maxTilesY) / 2.0)) && (Main.rand.Next(700) == 0))
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x2d, 0);
                            }
                            else if (Main.hardMode && (Main.rand.Next(10) != 0))
                            {
                                if (Main.rand.Next(2) == 0)
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 0x4d, 0);
                                    if ((y > ((Main.rockLayer + Main.maxTilesY) / 2.0)) && (Main.rand.Next(5) == 0))
                                    {
                                        Main.npc[index].SetDefaults("Heavy Skeleton");
                                    }
                                }
                                else
                                {
                                    index = NewNPC((x * 0x10) + 8, y * 0x10, 110, 0);
                                }
                            }
                            else if (Main.rand.Next(15) == 0)
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x2c, 0);
                            }
                            else
                            {
                                index = NewNPC((x * 0x10) + 8, y * 0x10, 0x15, 0);
                            }
                        }
                        else if (Main.hardMode && (Main.player[j].zoneHoly & (Main.rand.Next(2) == 0)))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x8a, 0);
                        }
                        else if (Main.player[j].zoneJungle)
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x33, 0);
                        }
                        else if (Main.hardMode && Main.player[j].zoneHoly)
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x89, 0);
                        }
                        else if (Main.hardMode && (Main.rand.Next(6) > 0))
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x5d, 0);
                        }
                        else
                        {
                            index = NewNPC((x * 0x10) + 8, y * 0x10, 0x31, 0);
                        }
                        if ((Main.npc[index].type == 1) && (Main.rand.Next(250) == 0))
                        {
                            Main.npc[index].SetDefaults("Pinky");
                        }
                        if ((Main.netMode == 2) && (index < 200))
                        {
                            NetMessage.SendData(0x17, -1, -1, "", index, 0f, 0f, 0f, 0);
                            return;
                        }
                        break;
                    }
                }
            }
        }

        public static void SpawnOnPlayer(int plr, int Type)
        {
            if (Main.netMode != 1)
            {
                bool flag = false;
                int num = 0;
                int num2 = 0;
                int minValue = ((int) (Main.player[plr].position.X / 16f)) - (spawnRangeX * 3);
                int maxValue = ((int) (Main.player[plr].position.X / 16f)) + (spawnRangeX * 3);
                int num5 = ((int) (Main.player[plr].position.Y / 16f)) - (spawnRangeY * 3);
                int maxTilesY = ((int) (Main.player[plr].position.Y / 16f)) + (spawnRangeY * 3);
                int num7 = ((int) (Main.player[plr].position.X / 16f)) - safeRangeX;
                int num8 = ((int) (Main.player[plr].position.X / 16f)) + safeRangeX;
                int num9 = ((int) (Main.player[plr].position.Y / 16f)) - safeRangeY;
                int num10 = ((int) (Main.player[plr].position.Y / 16f)) + safeRangeY;
                if (minValue < 0)
                {
                    minValue = 0;
                }
                if (maxValue > Main.maxTilesX)
                {
                    maxValue = Main.maxTilesX;
                }
                if (num5 < 0)
                {
                    num5 = 0;
                }
                if (maxTilesY > Main.maxTilesY)
                {
                    maxTilesY = Main.maxTilesY;
                }
                for (int i = 0; i < 0x3e8; i++)
                {
                    for (int j = 0; j < 100; j++)
                    {
                        int num13 = Main.rand.Next(minValue, maxValue);
                        int num14 = Main.rand.Next(num5, maxTilesY);
                        if (!Main.tile[num13, num14].active || !Main.tileSolid[Main.tile[num13, num14].type])
                        {
                            if (Main.tile[num13, num14].wall == 1)
                            {
                                continue;
                            }
                            for (int k = num14; k < Main.maxTilesY; k++)
                            {
                                if (Main.tile[num13, k].active && Main.tileSolid[Main.tile[num13, k].type])
                                {
                                    if (((num13 < num7) || (num13 > num8)) || ((k < num9) || (k > num10)))
                                    {
                                        byte type = Main.tile[num13, k].type;
                                        num = num13;
                                        num2 = k;
                                        flag = true;
                                    }
                                    break;
                                }
                            }
                            if (flag)
                            {
                                int num16 = num - (spawnSpaceX / 2);
                                int num17 = num + (spawnSpaceX / 2);
                                int num18 = num2 - spawnSpaceY;
                                int num19 = num2;
                                if (num16 < 0)
                                {
                                    flag = false;
                                }
                                if (num17 > Main.maxTilesX)
                                {
                                    flag = false;
                                }
                                if (num18 < 0)
                                {
                                    flag = false;
                                }
                                if (num19 > Main.maxTilesY)
                                {
                                    flag = false;
                                }
                                if (flag)
                                {
                                    for (int m = num16; m < num17; m++)
                                    {
                                        for (int n = num18; n < num19; n++)
                                        {
                                            if (Main.tile[m, n].active && Main.tileSolid[Main.tile[m, n].type])
                                            {
                                                flag = false;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if (flag || flag)
                        {
                            break;
                        }
                    }
                    if (flag)
                    {
                        Rectangle rectangle = new Rectangle(num * 0x10, num2 * 0x10, 0x10, 0x10);
                        for (int num22 = 0; num22 < 0xff; num22++)
                        {
                            if (Main.player[num22].active)
                            {
                                Rectangle rectangle2 = new Rectangle(((((int) Main.player[num22].position.X) + (Main.player[num22].width / 2)) - (sWidth / 2)) - safeRangeX, ((((int) Main.player[num22].position.Y) + (Main.player[num22].height / 2)) - (sHeight / 2)) - safeRangeY, sWidth + (safeRangeX * 2), sHeight + (safeRangeY * 2));
                                if (rectangle.Intersects(rectangle2))
                                {
                                    flag = false;
                                }
                            }
                        }
                    }
                    if (flag)
                    {
                        break;
                    }
                }
                if (flag)
                {
                    int index = 200;
                    index = NewNPC((num * 0x10) + 8, num2 * 0x10, Type, 1);
                    if (index != 200)
                    {
                        Main.npc[index].target = plr;
                        NPC npc1 = Main.npc[index];
                        npc1.timeLeft *= 5;
                        string name = Main.npc[index].name;
                        if (Main.npc[index].type == 13)
                        {
                            name = "Eater of Worlds";
                        }
                        if (Main.npc[index].type == 0x23)
                        {
                            name = "Skeletron";
                        }
                        if ((Main.netMode == 2) && (index < 200))
                        {
                            NetMessage.SendData(0x17, -1, -1, "", index, 0f, 0f, 0f, 0);
                        }
                        if (Type == 0x7d)
                        {
                            if (Main.netMode == 0)
                            {
                                Main.NewText("The Twins have awoken!", 0xaf, 0x4b, 0xff);
                            }
                            else if (Main.netMode == 2)
                            {
                                NetMessage.SendData(0x19, -1, -1, "The Twins have awoken!", 0xff, 175f, 75f, 255f, 0);
                            }
                        }
                        else if (((Type != 0x52) && (Type != 0x7e)) && (Type != 50))
                        {
                            if (Main.netMode == 0)
                            {
                                Main.NewText(name + " has awoken!", 0xaf, 0x4b, 0xff);
                            }
                            else if (Main.netMode == 2)
                            {
                                NetMessage.SendData(0x19, -1, -1, name + " has awoken!", 0xff, 175f, 75f, 255f, 0);
                            }
                        }
                    }
                }
            }
        }

        public static void SpawnSkeletron()
        {
            bool flag = true;
            bool flag2 = false;
            Vector2 position = new Vector2();
            int width = 0;
            int height = 0;
            for (int i = 0; i < 200; i++)
            {
                if (Main.npc[i].active && (Main.npc[i].type == 0x23))
                {
                    flag = false;
                    break;
                }
            }
            for (int j = 0; j < 200; j++)
            {
                if (Main.npc[j].active && (Main.npc[j].type == 0x25))
                {
                    flag2 = true;
                    Main.npc[j].ai[3] = 1f;
                    position = Main.npc[j].position;
                    width = Main.npc[j].width;
                    height = Main.npc[j].height;
                    if (Main.netMode == 2)
                    {
                        NetMessage.SendData(0x17, -1, -1, "", j, 0f, 0f, 0f, 0);
                    }
                }
            }
            if (flag && flag2)
            {
                int index = NewNPC(((int) position.X) + (width / 2), ((int) position.Y) + (height / 2), 0x23, 0);
                Main.npc[index].netUpdate = true;
                string str = "Skeletron";
                if (Main.netMode == 0)
                {
                    Main.NewText(str + " has awoken!", 0xaf, 0x4b, 0xff);
                }
                else if (Main.netMode == 2)
                {
                    NetMessage.SendData(0x19, -1, -1, str + " has awoken!", 0xff, 175f, 75f, 255f, 0);
                }
            }
        }

        public static void SpawnWOF(Vector2 pos)
        {
            if ((((pos.Y / 16f) >= (Main.maxTilesY - 0xcd)) && (Main.wof < 0)) && (Main.netMode != 1))
            {
                Player.FindClosest(pos, 0x10, 0x10);
                int num = 1;
                if ((pos.X / 16f) > (Main.maxTilesX / 2))
                {
                    num = -1;
                }
                bool flag = false;
                int x = (int) pos.X;
                while (!flag)
                {
                    flag = true;
                    for (int j = 0; j < 0xff; j++)
                    {
                        if ((Main.player[j].active && (Main.player[j].position.X > (x - 0x4b0))) && (Main.player[j].position.X < (x + 0x4b0)))
                        {
                            x -= num * 0x10;
                            flag = false;
                        }
                    }
                    if (((x / 0x10) < 20) || ((x / 0x10) > (Main.maxTilesX - 20)))
                    {
                        flag = true;
                    }
                }
                int y = (int) pos.Y;
                int i = x / 0x10;
                int num6 = y / 0x10;
                int num7 = 0;
                try
                {
                Label_00F5:
                    if (!WorldGen.SolidTile(i, num6 - num7) && (Main.tile[i, num6 - num7].liquid < 100))
                    {
                        num6 -= num7;
                    }
                    else if (!WorldGen.SolidTile(i, num6 + num7) && (Main.tile[i, num6 + num7].liquid < 100))
                    {
                        num6 += num7;
                    }
                    else
                    {
                        num7++;
                        goto Label_00F5;
                    }
                }
                catch
                {
                }
                y = num6 * 0x10;
                int index = NewNPC(x, y, 0x71, 0);
                if (Main.npc[index].displayName == "")
                {
                    Main.npc[index].displayName = Main.npc[index].name;
                }
                if (Main.netMode == 0)
                {
                    Main.NewText(Main.npc[index].displayName + " has awoken!", 0xaf, 0x4b, 0xff);
                }
                else if (Main.netMode == 2)
                {
                    NetMessage.SendData(0x19, -1, -1, Main.npc[index].displayName + " has awoken!", 0xff, 175f, 75f, 255f, 0);
                }
            }
        }

        public double StrikeNPC(int Damage, float knockBack, int hitDirection, bool crit = false, bool noEffect = false)
        {
            if (!this.active || (this.life <= 0))
            {
                return 0.0;
            }
            double dmg = Damage;
            dmg = Main.CalculateDamage((int) dmg, this.defense);
            if (crit)
            {
                dmg *= 2.0;
            }
            if ((Damage != 0x270f) && (this.lifeMax > 1))
            {
                if (this.friendly)
                {
                    CombatText.NewText(new Rectangle((int) this.position.X, (int) this.position.Y, this.width, this.height), new Color(0xff, 80, 90, 0xff), ((int) dmg).ToString(), crit);
                }
                else
                {
                    CombatText.NewText(new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height), new Color(0xff, 160, 80, 0xff), ((int)dmg).ToString(), crit);
                }
            }
            if (dmg < 1.0)
            {
                return 0.0;
            }
            this.justHit = true;
            if (this.townNPC)
            {
                this.ai[0] = 1f;
                this.ai[1] = 300 + Main.rand.Next(300);
                this.ai[2] = 0f;
                this.direction = hitDirection;
                this.netUpdate = true;
            }
            if ((this.aiStyle == 8) && (Main.netMode != 1))
            {
                this.ai[0] = 400f;
                this.TargetClosest(true);
            }
            if (this.realLife >= 0)
            {
                NPC npc1 = Main.npc[this.realLife];
                npc1.life -= (int) dmg;
                this.life = Main.npc[this.realLife].life;
                this.lifeMax = Main.npc[this.realLife].lifeMax;
            }
            else
            {
                this.life -= (int) dmg;
            }
            if ((knockBack > 0f) && (this.knockBackResist > 0f))
            {
                float num2 = knockBack * this.knockBackResist;
                if (num2 > 8f)
                {
                    num2 = 8f;
                }
                if (crit)
                {
                    num2 *= 1.4f;
                }
                if ((dmg * 10.0) < this.lifeMax)
                {
                    if ((hitDirection < 0) && (this.velocity.X > -num2))
                    {
                        if (this.velocity.X > 0f)
                        {
                            this.velocity.X -= num2;
                        }
                        this.velocity.X -= num2;
                        if (this.velocity.X < -num2)
                        {
                            this.velocity.X = -num2;
                        }
                    }
                    else if ((hitDirection > 0) && (this.velocity.X < num2))
                    {
                        if (this.velocity.X < 0f)
                        {
                            this.velocity.X += num2;
                        }
                        this.velocity.X += num2;
                        if (this.velocity.X > num2)
                        {
                            this.velocity.X = num2;
                        }
                    }
                    if (!this.noGravity)
                    {
                        num2 *= -0.75f;
                    }
                    else
                    {
                        num2 *= -0.5f;
                    }
                    if (this.velocity.Y > num2)
                    {
                        this.velocity.Y += num2;
                        if (this.velocity.Y < num2)
                        {
                            this.velocity.Y = num2;
                        }
                    }
                }
                else
                {
                    if (!this.noGravity)
                    {
                        this.velocity.Y = (-num2 * 0.75f) * this.knockBackResist;
                    }
                    else
                    {
                        this.velocity.Y = (-num2 * 0.5f) * this.knockBackResist;
                    }
                    this.velocity.X = (num2 * hitDirection) * this.knockBackResist;
                }
            }
            if (((this.type == 0x71) || (this.type == 0x72)) && (this.life <= 0))
            {
                for (int i = 0; i < 200; i++)
                {
                    if (Main.npc[i].active && ((Main.npc[i].type == 0x71) || (Main.npc[i].type == 0x72)))
                    {
                        Main.npc[i].HitEffect(hitDirection, dmg);
                    }
                }
            }
            else
            {
                this.HitEffect(hitDirection, dmg);
            }
            if (this.soundHit > 0)
            {
                Main.PlaySound(3, (int) this.position.X, (int) this.position.Y, this.soundHit);
            }
            if (this.realLife >= 0)
            {
                Main.npc[this.realLife].checkDead();
                return dmg;
            }
            this.checkDead();
            return dmg;
        }

        public void TargetClosest(bool faceTarget = true)
        {
            float num = -1f;
            for (int i = 0; i < 0xff; i++)
            {
                if ((Main.player[i].active && !Main.player[i].dead) && ((num == -1f) || ((Math.Abs((float) (((Main.player[i].position.X + (Main.player[i].width / 2)) - this.position.X) + (this.width / 2))) + Math.Abs((float) (((Main.player[i].position.Y + (Main.player[i].height / 2)) - this.position.Y) + (this.height / 2)))) < num)))
                {
                    num = Math.Abs((float) (((Main.player[i].position.X + (Main.player[i].width / 2)) - this.position.X) + (this.width / 2))) + Math.Abs((float) (((Main.player[i].position.Y + (Main.player[i].height / 2)) - this.position.Y) + (this.height / 2)));
                    this.target = i;
                }
            }
            if ((this.target < 0) || (this.target >= 0xff))
            {
                this.target = 0;
            }
            this.targetRect = new Rectangle((int) Main.player[this.target].position.X, (int) Main.player[this.target].position.Y, Main.player[this.target].width, Main.player[this.target].height);
            if (Main.player[this.target].dead)
            {
                faceTarget = false;
            }
            if (faceTarget)
            {
                this.direction = 1;
                if ((this.targetRect.X + (this.targetRect.Width / 2)) < (this.position.X + (this.width / 2)))
                {
                    this.direction = -1;
                }
                this.directionY = 1;
                if ((this.targetRect.Y + (this.targetRect.Height / 2)) < (this.position.Y + (this.height / 2)))
                {
                    this.directionY = -1;
                }
            }
            if (this.confused)
            {
                this.direction *= -1;
            }
            if ((((this.direction != this.oldDirection) || (this.directionY != this.oldDirectionY)) || (this.target != this.oldTarget)) && (!this.collideX && !this.collideY))
            {
                this.netUpdate = true;
            }
        }

        public void Transform(int newType)
        {
            if (Main.netMode != 1)
            {
                Vector2 velocity = this.velocity;
                this.position.Y += this.height;
                int spriteDirection = this.spriteDirection;
                this.SetDefaults(newType, -1f);
                this.spriteDirection = spriteDirection;
                this.TargetClosest(true);
                this.velocity = velocity;
                this.position.Y -= this.height;
                if ((newType == 0x6b) || (newType == 0x6c))
                {
                    this.homeTileX = (((int) this.position.X) + (this.width / 2)) / 0x10;
                    this.homeTileY = (((int) this.position.Y) + this.height) / 0x10;
                    this.homeless = true;
                }
                if (Main.netMode == 2)
                {
                    this.netUpdate = true;
                    NetMessage.SendData(0x17, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
                }
            }
        }

        public static int TypeToNum(int type)
        {
            if (type == 0x11)
            {
                return 2;
            }
            if (type == 0x12)
            {
                return 3;
            }
            if (type == 0x13)
            {
                return 6;
            }
            if (type == 20)
            {
                return 5;
            }
            if (type == 0x16)
            {
                return 1;
            }
            if (type == 0x26)
            {
                return 4;
            }
            if (type == 0x36)
            {
                return 7;
            }
            if (type == 0x6b)
            {
                return 9;
            }
            if (type == 0x6c)
            {
                return 10;
            }
            if (type == 0x7c)
            {
                return 8;
            }
            return -1;
        }

        public void UpdateNPC(int i)
        {
            this.whoAmI = i;
            if (this.active)
            {
                if (this.displayName == "")
                {
                    this.displayName = this.name;
                }
                if (this.townNPC && (Main.chrName[this.type] != ""))
                {
                    this.displayName = Main.chrName[this.type];
                }
                this.lifeRegen = 0;
                this.poisoned = false;
                this.onFire = false;
                this.onFire2 = false;
                this.confused = false;
                for (int j = 0; j < 5; j++)
                {
                    if ((this.buffType[j] > 0) && (this.buffTime[j] > 0))
                    {
                        this.buffTime[j]--;
                        if (this.buffType[j] == 20)
                        {
                            this.poisoned = true;
                        }
                        else if (this.buffType[j] == 0x18)
                        {
                            this.onFire = true;
                        }
                        else if (this.buffType[j] == 0x1f)
                        {
                            this.confused = true;
                        }
                        else if (this.buffType[j] == 0x27)
                        {
                            this.onFire2 = true;
                        }
                    }
                }
                if (Main.netMode != 1)
                {
                    for (int m = 0; m < 5; m++)
                    {
                        if ((this.buffType[m] > 0) && (this.buffTime[m] <= 0))
                        {
                            this.DelBuff(m);
                            if (Main.netMode == 2)
                            {
                                NetMessage.SendData(0x36, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0);
                            }
                        }
                    }
                }
                if (!this.dontTakeDamage)
                {
                    if (this.poisoned)
                    {
                        this.lifeRegen = -4;
                    }
                    if (this.onFire)
                    {
                        this.lifeRegen = -8;
                    }
                    if (this.onFire2)
                    {
                        this.lifeRegen = -12;
                    }
                    this.lifeRegenCount += this.lifeRegen;
                    while (this.lifeRegenCount >= 120)
                    {
                        this.lifeRegenCount -= 120;
                        if (this.life < this.lifeMax)
                        {
                            this.life++;
                        }
                        if (this.life > this.lifeMax)
                        {
                            this.life = this.lifeMax;
                        }
                    }
                    while (this.lifeRegenCount <= -120)
                    {
                        this.lifeRegenCount += 120;
                        int whoAmI = this.whoAmI;
                        if (this.realLife >= 0)
                        {
                            whoAmI = this.realLife;
                        }
                        NPC npc1 = Main.npc[whoAmI];
                        npc1.life--;
                        if (Main.npc[whoAmI].life <= 0)
                        {
                            Main.npc[whoAmI].life = 1;
                            if (Main.netMode != 1)
                            {
                                Main.npc[whoAmI].StrikeNPC(0x270f, 0f, 0, false, false);
                                if (Main.netMode == 2)
                                {
                                    NetMessage.SendData(0x1c, -1, -1, "", whoAmI, 9999f, 0f, 0f, 0);
                                }
                            }
                        }
                    }
                }
                if ((Main.netMode != 1) && Main.bloodMoon)
                {
                    if (this.type == 0x2e)
                    {
                        this.Transform(0x2f);
                    }
                    else if (this.type == 0x37)
                    {
                        this.Transform(0x39);
                    }
                }
                float num4 = 10f;
                float num5 = 0.3f;
                float num6 = Main.maxTilesX / 0x1068;
                num6 *= num6;
                float num7 = (float) (((double) ((this.position.Y / 16f) - (60f + (10f * num6)))) / (Main.worldSurface / 6.0));
                if (num7 < 0.25)
                {
                    num7 = 0.25f;
                }
                if (num7 > 1f)
                {
                    num7 = 1f;
                }
                num5 *= num7;
                if (this.wet)
                {
                    num5 = 0.2f;
                    num4 = 7f;
                }
                if (this.soundDelay > 0)
                {
                    this.soundDelay--;
                }
                if (this.life <= 0)
                {
                    this.active = false;
                }
                this.oldTarget = this.target;
                this.oldDirection = this.direction;
                this.oldDirectionY = this.directionY;
                this.AI();
                if (this.type == 0x2c)
                {
                    Lighting.addLight((((int) this.position.X) + (this.width / 2)) / 0x10, ((int) (this.position.Y + 4f)) / 0x10, 0.9f, 0.75f, 0.5f);
                }
                for (int k = 0; k < 0x100; k++)
                {
                    if (this.immune[k] > 0)
                    {
                        this.immune[k]--;
                    }
                }
                if (!this.noGravity && !this.noTileCollide)
                {
                    int num9 = (((int) this.position.X) + (this.width / 2)) / 0x10;
                    int num10 = (((int) this.position.Y) + (this.height / 2)) / 0x10;
                    if (Main.tile[num9, num10] == null)
                    {
                        num5 = 0f;
                        this.velocity.X = 0f;
                        this.velocity.Y = 0f;
                    }
                }
                if (!this.noGravity)
                {
                    this.velocity.Y += num5;
                    if (this.velocity.Y > num4)
                    {
                        this.velocity.Y = num4;
                    }
                }
                if ((this.velocity.X < 0.005) && (this.velocity.X > -0.005))
                {
                    this.velocity.X = 0f;
                }
                if (((Main.netMode != 1) && (this.type != 0x25)) && ((this.friendly || (this.type == 0x2e)) || ((this.type == 0x37) || (this.type == 0x4a))))
                {
                    if (this.life < this.lifeMax)
                    {
                        this.friendlyRegen++;
                        if (this.friendlyRegen > 300)
                        {
                            this.friendlyRegen = 0;
                            this.life++;
                            this.netUpdate = true;
                        }
                    }
                    if (this.immune[0xff] == 0)
                    {
                        Rectangle rectangle = new Rectangle((int) this.position.X, (int) this.position.Y, this.width, this.height);
                        for (int n = 0; n < 200; n++)
                        {
                            if ((Main.npc[n].active && !Main.npc[n].friendly) && (Main.npc[n].damage > 0))
                            {
                                Rectangle rectangle2 = new Rectangle((int) Main.npc[n].position.X, (int) Main.npc[n].position.Y, Main.npc[n].width, Main.npc[n].height);
                                if (rectangle.Intersects(rectangle2))
                                {
                                    int damage = Main.npc[n].damage;
                                    int num13 = 6;
                                    int hitDirection = 1;
                                    if ((Main.npc[n].position.X + (Main.npc[n].width / 2)) > (this.position.X + (this.width / 2)))
                                    {
                                        hitDirection = -1;
                                    }
                                    Main.npc[i].StrikeNPC(damage, (float) num13, hitDirection, false, false);
                                    if (Main.netMode != 0)
                                    {
                                        NetMessage.SendData(0x1c, -1, -1, "", i, (float) damage, (float) num13, (float) hitDirection, 0);
                                    }
                                    this.netUpdate = true;
                                    this.immune[0xff] = 30;
                                }
                            }
                        }
                    }
                }
                if (!this.noTileCollide)
                {
                    bool flag = Collision.LavaCollision(this.position, this.width, this.height);
                    if (flag)
                    {
                        this.lavaWet = true;
                        if ((!this.lavaImmune && !this.dontTakeDamage) && ((Main.netMode != 1) && (this.immune[0xff] == 0)))
                        {
                            this.AddBuff(0x18, 420, false);
                            this.immune[0xff] = 30;
                            this.StrikeNPC(50, 0f, 0, false, false);
                            if ((Main.netMode == 2) && (Main.netMode != 0))
                            {
                                NetMessage.SendData(0x1c, -1, -1, "", this.whoAmI, 50f, 0f, 0f, 0);
                            }
                        }
                    }
                    bool flag2 = false;
                    if (this.type == 0x48)
                    {
                        flag2 = false;
                        this.wetCount = 0;
                        flag = false;
                    }
                    else
                    {
                        flag2 = Collision.WetCollision(this.position, this.width, this.height);
                    }
                    if (flag2)
                    {
                        if ((this.onFire && !this.lavaWet) && (Main.netMode != 1))
                        {
                            for (int num15 = 0; num15 < 5; num15++)
                            {
                                if (this.buffType[num15] == 0x18)
                                {
                                    this.DelBuff(num15);
                                }
                            }
                        }
                        if (!this.wet && (this.wetCount == 0))
                        {
                            this.wetCount = 10;
                            if (!flag)
                            {
                                for (int num16 = 0; num16 < 30; num16++)
                                {
                                    Color newColor = new Color();
                                    int index = Dust.NewDust(new Vector2(this.position.X - 6f, (this.position.Y + (this.height / 2)) - 8f), this.width + 12, 0x18, 0x21, 0f, 0f, 0, newColor, 1f);
                                    Main.dust[index].velocity.Y -= 4f;
                                    Main.dust[index].velocity.X *= 2.5f;
                                    Main.dust[index].scale = 1.3f;
                                    Main.dust[index].alpha = 100;
                                    Main.dust[index].noGravity = true;
                                }
                                if (((this.type != 1) && (this.type != 0x3b)) && !this.noGravity)
                                {
                                    Main.PlaySound(0x13, (int) this.position.X, (int) this.position.Y, 0);
                                }
                            }
                            else
                            {
                                for (int num18 = 0; num18 < 10; num18++)
                                {
                                    Color color2 = new Color();
                                    int num19 = Dust.NewDust(new Vector2(this.position.X - 6f, (this.position.Y + (this.height / 2)) - 8f), this.width + 12, 0x18, 0x23, 0f, 0f, 0, color2, 1f);
                                    Main.dust[num19].velocity.Y -= 1.5f;
                                    Main.dust[num19].velocity.X *= 2.5f;
                                    Main.dust[num19].scale = 1.3f;
                                    Main.dust[num19].alpha = 100;
                                    Main.dust[num19].noGravity = true;
                                }
                                if (((this.type != 1) && (this.type != 0x3b)) && !this.noGravity)
                                {
                                    Main.PlaySound(0x13, (int) this.position.X, (int) this.position.Y, 1);
                                }
                            }
                        }
                        this.wet = true;
                    }
                    else if (this.wet)
                    {
                        this.velocity.X *= 0.5f;
                        this.wet = false;
                        if (this.wetCount == 0)
                        {
                            this.wetCount = 10;
                            if (!this.lavaWet)
                            {
                                for (int num20 = 0; num20 < 30; num20++)
                                {
                                    Color color3 = new Color();
                                    int num21 = Dust.NewDust(new Vector2(this.position.X - 6f, (this.position.Y + (this.height / 2)) - 8f), this.width + 12, 0x18, 0x21, 0f, 0f, 0, color3, 1f);
                                    Main.dust[num21].velocity.Y -= 4f;
                                    Main.dust[num21].velocity.X *= 2.5f;
                                    Main.dust[num21].scale = 1.3f;
                                    Main.dust[num21].alpha = 100;
                                    Main.dust[num21].noGravity = true;
                                }
                                if (((this.type != 1) && (this.type != 0x3b)) && !this.noGravity)
                                {
                                    Main.PlaySound(0x13, (int) this.position.X, (int) this.position.Y, 0);
                                }
                            }
                            else
                            {
                                for (int num22 = 0; num22 < 10; num22++)
                                {
                                    Color color4 = new Color();
                                    int num23 = Dust.NewDust(new Vector2(this.position.X - 6f, (this.position.Y + (this.height / 2)) - 8f), this.width + 12, 0x18, 0x23, 0f, 0f, 0, color4, 1f);
                                    Main.dust[num23].velocity.Y -= 1.5f;
                                    Main.dust[num23].velocity.X *= 2.5f;
                                    Main.dust[num23].scale = 1.3f;
                                    Main.dust[num23].alpha = 100;
                                    Main.dust[num23].noGravity = true;
                                }
                                if (((this.type != 1) && (this.type != 0x3b)) && !this.noGravity)
                                {
                                    Main.PlaySound(0x13, (int) this.position.X, (int) this.position.Y, 1);
                                }
                            }
                        }
                    }
                    if (!this.wet)
                    {
                        this.lavaWet = false;
                    }
                    if (this.wetCount > 0)
                    {
                        this.wetCount = (byte) (this.wetCount - 1);
                    }
                    bool fallThrough = false;
                    if (this.aiStyle == 10)
                    {
                        fallThrough = true;
                    }
                    if (this.aiStyle == 14)
                    {
                        fallThrough = true;
                    }
                    if ((this.aiStyle == 3) && (this.directionY == 1))
                    {
                        fallThrough = true;
                    }
                    this.oldVelocity = this.velocity;
                    this.collideX = false;
                    this.collideY = false;
                    if (this.wet)
                    {
                        Vector2 velocity = this.velocity;
                        this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, fallThrough, fallThrough);
                        if (Collision.up)
                        {
                            this.velocity.Y = 0.01f;
                        }
                        Vector2 vector2 = (Vector2) (this.velocity * 0.5f);
                        if (this.velocity.X != velocity.X)
                        {
                            vector2.X = this.velocity.X;
                            this.collideX = true;
                        }
                        if (this.velocity.Y != velocity.Y)
                        {
                            vector2.Y = this.velocity.Y;
                            this.collideY = true;
                        }
                        this.oldPosition = this.position;
                        this.position += vector2;
                    }
                    else
                    {
                        if (this.type == 0x48)
                        {
                            Vector2 position = new Vector2(this.position.X + (this.width / 2), this.position.Y + (this.height / 2));
                            int width = 12;
                            int height = 12;
                            position.X -= width / 2;
                            position.Y -= height / 2;
                            this.velocity = Collision.TileCollision(position, this.velocity, width, height, true, true);
                        }
                        else
                        {
                            this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, fallThrough, fallThrough);
                        }
                        if (Collision.up)
                        {
                            this.velocity.Y = 0.01f;
                        }
                        if (this.oldVelocity.X != this.velocity.X)
                        {
                            this.collideX = true;
                        }
                        if (this.oldVelocity.Y != this.velocity.Y)
                        {
                            this.collideY = true;
                        }
                        this.oldPosition = this.position;
                        this.position += this.velocity;
                    }
                }
                else
                {
                    this.oldPosition = this.position;
                    this.position += this.velocity;
                }
                if ((((Main.netMode != 1) && !this.noTileCollide) && ((this.lifeMax > 1) && Collision.SwitchTiles(this.position, this.width, this.height, this.oldPosition))) && (this.type == 0x2e))
                {
                    this.ai[0] = 1f;
                    this.ai[1] = 400f;
                    this.ai[2] = 0f;
                }
                if (!this.active)
                {
                    this.netUpdate = true;
                }
                if (Main.netMode == 2)
                {
                    if (this.townNPC)
                    {
                        this.netSpam = 0;
                    }
                    if (this.netUpdate2)
                    {
                        this.netUpdate = true;
                    }
                    if (!this.active)
                    {
                        this.netSpam = 0;
                    }
                    if (this.netUpdate)
                    {
                        if (this.netSpam <= 180)
                        {
                            this.netSpam += 60;
                            NetMessage.SendData(0x17, -1, -1, "", i, 0f, 0f, 0f, 0);
                            this.netUpdate2 = false;
                        }
                        else
                        {
                            this.netUpdate2 = true;
                        }
                    }
                    if (this.netSpam > 0)
                    {
                        this.netSpam--;
                    }
                    if ((this.active && this.townNPC) && (TypeToNum(this.type) != -1))
                    {
                        if (((this.homeless != this.oldHomeless) || (this.homeTileX != this.oldHomeTileX)) || (this.homeTileY != this.oldHomeTileY))
                        {
                            int num26 = 0;
                            if (this.homeless)
                            {
                                num26 = 1;
                            }
                            NetMessage.SendData(60, -1, -1, "", i, (float) Main.npc[i].homeTileX, (float) Main.npc[i].homeTileY, (float) num26, 0);
                        }
                        this.oldHomeless = this.homeless;
                        this.oldHomeTileX = this.homeTileX;
                        this.oldHomeTileY = this.homeTileY;
                    }
                }
                this.FindFrame();
                this.CheckActive();
                this.netUpdate = false;
                this.justHit = false;
                if (((this.type == 120) || (this.type == 0x89)) || (this.type == 0x8a))
                {
                    for (int num27 = this.oldPos.Length - 1; num27 > 0; num27--)
                    {
                        this.oldPos[num27] = this.oldPos[num27 - 1];
                        Lighting.addLight(((int) this.position.X) / 0x10, ((int) this.position.Y) / 0x10, 0.3f, 0f, 0.2f);
                    }
                    this.oldPos[0] = this.position;
                }
                else if (this.type == 0x5e)
                {
                    for (int num28 = this.oldPos.Length - 1; num28 > 0; num28--)
                    {
                        this.oldPos[num28] = this.oldPos[num28 - 1];
                    }
                    this.oldPos[0] = this.position;
                }
                else if ((((this.type == 0x7d) || (this.type == 0x7e)) || ((this.type == 0x7f) || (this.type == 0x80))) || (((this.type == 0x81) || (this.type == 130)) || (((this.type == 0x83) || (this.type == 0x8b)) || (this.type == 140))))
                {
                    for (int num29 = this.oldPos.Length - 1; num29 > 0; num29--)
                    {
                        this.oldPos[num29] = this.oldPos[num29 - 1];
                    }
                    this.oldPos[0] = this.position;
                }
            }
        }
    }
}

